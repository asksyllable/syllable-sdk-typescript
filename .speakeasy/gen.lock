lockVersion: 2.0.0
id: a9998797-242d-43f8-a716-12c3814c32c2
management:
  docChecksum: 915da75e3308088612326687207fdd52
  docVersion: 0.0.2
  speakeasyVersion: 1.636.2
  generationVersion: 2.723.8
  releaseVersion: 1.0.2-rc.3
  configChecksum: d38006505c130afe1c8a11f2bbeefc4b
  repoURL: https://github.com/asksyllable/syllable-sdk-typescript.git
  installationURL: https://github.com/asksyllable/syllable-sdk-typescript
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.12
    core: 3.21.26
    defaultEnabledRetries: 0.1.0
    deprecations: 2.81.1
    devContainers: 2.90.1
    downloadStreams: 0.1.1
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    globalSecurity: 2.82.14
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.5
    ignores: 2.81.1
    mcpServer: 0.9.3
    nameOverrides: 2.81.2
    nullables: 0.1.1
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.3.0
    unions: 2.86.0
    uploadStreams: 0.1.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .npmignore
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/action.md
  - docs/models/components/agentcreate.md
  - docs/models/components/agentlanguage.md
  - docs/models/components/agentlist.md
  - docs/models/components/agentproperties.md
  - docs/models/components/agentresponse.md
  - docs/models/components/agentsttprovider.md
  - docs/models/components/agenttooldefaults.md
  - docs/models/components/agenttoolfielddefault.md
  - docs/models/components/agentupdate.md
  - docs/models/components/agentvoice.md
  - docs/models/components/agentvoicedisplayname.md
  - docs/models/components/agentvoicegender.md
  - docs/models/components/agentvoicemodel.md
  - docs/models/components/agentvoicevarname.md
  - docs/models/components/agentwaitsound.md
  - docs/models/components/attributes.md
  - docs/models/components/availabletarget.md
  - docs/models/components/availabletargetproperties.md
  - docs/models/components/batchdetails.md
  - docs/models/components/batchproperties.md
  - docs/models/components/batchstatus.md
  - docs/models/components/bodyinsightsfolderuploadfile.md
  - docs/models/components/bodyorganizationscreate.md
  - docs/models/components/bodyorganizationscreatelogo.md
  - docs/models/components/bodyorganizationsdelete.md
  - docs/models/components/bodyorganizationsupdate.md
  - docs/models/components/bodyoutboundbatchdelete.md
  - docs/models/components/bodyoutboundbatchupload.md
  - docs/models/components/bodyoutboundbatchuploadfile.md
  - docs/models/components/bodypronunciationsuploadcsv.md
  - docs/models/components/bodypronunciationsuploadcsvfile.md
  - docs/models/components/campaignproperties.md
  - docs/models/components/channel.md
  - docs/models/components/channelconfigview.md
  - docs/models/components/channelproperties.md
  - docs/models/components/channelservices.md
  - docs/models/components/channeltargetcreaterequest.md
  - docs/models/components/channeltargetproperties.md
  - docs/models/components/channeltargetresponse.md
  - docs/models/components/channeltargetupdaterequest.md
  - docs/models/components/communicationbatch.md
  - docs/models/components/communicationbatchinput.md
  - docs/models/components/communicationbatchupdate.md
  - docs/models/components/communicationrequest.md
  - docs/models/components/communicationrequestresult.md
  - docs/models/components/conversation.md
  - docs/models/components/conversationproperties.md
  - docs/models/components/createtakeoutresponse.md
  - docs/models/components/custommessagecreaterequest.md
  - docs/models/components/custommessageproperties.md
  - docs/models/components/custommessageresponse.md
  - docs/models/components/custommessagerule.md
  - docs/models/components/custommessageupdaterequest.md
  - docs/models/components/dashboard.md
  - docs/models/components/dashboardproperties.md
  - docs/models/components/dashboardresponse.md
  - docs/models/components/dashboardtokenresponse.md
  - docs/models/components/datasourcecreaterequest.md
  - docs/models/components/datasourcedetailresponse.md
  - docs/models/components/datasourcemetadataresponse.md
  - docs/models/components/datasourceproperties.md
  - docs/models/components/datasourceupdaterequest.md
  - docs/models/components/dayofweek.md
  - docs/models/components/daysofweek.md
  - docs/models/components/defaults.md
  - docs/models/components/dialogmessage.md
  - docs/models/components/dialogrole.md
  - docs/models/components/dialogtoolcall.md
  - docs/models/components/dictionarymetadata.md
  - docs/models/components/event.md
  - docs/models/components/eventproperties.md
  - docs/models/components/filet.md
  - docs/models/components/folderdetails.md
  - docs/models/components/folderstats.md
  - docs/models/components/incidentcreaterequest.md
  - docs/models/components/incidentorganizationresponse.md
  - docs/models/components/incidentproperties.md
  - docs/models/components/incidentresponse.md
  - docs/models/components/incidentupdaterequest.md
  - docs/models/components/insights.md
  - docs/models/components/insightsfolder.md
  - docs/models/components/insightsfolderfilemove.md
  - docs/models/components/insightsfolderinput.md
  - docs/models/components/insightsfolderproperties.md
  - docs/models/components/insightsoutput.md
  - docs/models/components/insightsproperties.md
  - docs/models/components/insightsuploadfile.md
  - docs/models/components/insightsuploadfileproperties.md
  - docs/models/components/insightsworkflowqueuesession.md
  - docs/models/components/insighttooldefinition.md
  - docs/models/components/insighttoolinput.md
  - docs/models/components/insighttooloutput.md
  - docs/models/components/insighttoolproperties.md
  - docs/models/components/insighttooltestinput.md
  - docs/models/components/insightworkflowactivate.md
  - docs/models/components/insightworkflowcondition.md
  - docs/models/components/insightworkflowestimate.md
  - docs/models/components/insightworkflowinput.md
  - docs/models/components/insightworkflowoutput.md
  - docs/models/components/insightworkflowproperties.md
  - docs/models/components/inspectlatencyresponse.md
  - docs/models/components/internaltool.md
  - docs/models/components/jsonvalue.md
  - docs/models/components/language.md
  - docs/models/components/languagecode.md
  - docs/models/components/languageconfig.md
  - docs/models/components/languagegroupagentinfo.md
  - docs/models/components/languagegroupcreaterequest.md
  - docs/models/components/languagegroupproperties.md
  - docs/models/components/languagegroupresponse.md
  - docs/models/components/languagegroupupdaterequest.md
  - docs/models/components/latencycategory.md
  - docs/models/components/latencyentry.md
  - docs/models/components/latencyunittype.md
  - docs/models/components/listresponseagentresponse.md
  - docs/models/components/listresponseavailabletarget.md
  - docs/models/components/listresponsechannel.md
  - docs/models/components/listresponsechanneltargetresponse.md
  - docs/models/components/listresponsecommunicationbatch.md
  - docs/models/components/listresponseconversation.md
  - docs/models/components/listresponsecustommessageresponse.md
  - docs/models/components/listresponsedashboardresponse.md
  - docs/models/components/listresponsedatasourcemetadataresponse.md
  - docs/models/components/listresponseevent.md
  - docs/models/components/listresponseincidentresponse.md
  - docs/models/components/listresponseinsightsfolder.md
  - docs/models/components/listresponseinsightsoutput.md
  - docs/models/components/listresponseinsightsuploadfile.md
  - docs/models/components/listresponseinsighttooloutput.md
  - docs/models/components/listresponseinsightworkflowoutput.md
  - docs/models/components/listresponselanguagegroupresponse.md
  - docs/models/components/listresponseoutboundcampaign.md
  - docs/models/components/listresponsepromptresponse.md
  - docs/models/components/listresponseroleresponse.md
  - docs/models/components/listresponseserviceresponse.md
  - docs/models/components/listresponsesession.md
  - docs/models/components/listresponsesessionlabel.md
  - docs/models/components/listresponsetoolresponse.md
  - docs/models/components/listresponseuserresponse.md
  - docs/models/components/loc.md
  - docs/models/components/logintype.md
  - docs/models/components/logo.md
  - docs/models/components/matchtype.md
  - docs/models/components/metadata.md
  - docs/models/components/orderbydirection.md
  - docs/models/components/organizationchannelconfig.md
  - docs/models/components/organizationchannelcreaterequest.md
  - docs/models/components/organizationchannelupdaterequest.md
  - docs/models/components/organizationresponse.md
  - docs/models/components/outboundcampaign.md
  - docs/models/components/outboundcampaigninput.md
  - docs/models/components/permissiongroupresponse.md
  - docs/models/components/permissionresponse.md
  - docs/models/components/promptcreaterequest.md
  - docs/models/components/prompthistory.md
  - docs/models/components/prompthistorylinkedtool.md
  - docs/models/components/promptllmconfig.md
  - docs/models/components/promptllmprovider.md
  - docs/models/components/promptproperties.md
  - docs/models/components/promptresponse.md
  - docs/models/components/promptupdaterequest.md
  - docs/models/components/pronunciationoverride.md
  - docs/models/components/pronunciationoverridesdictionary.md
  - docs/models/components/pronunciationscsvuploadresponse.md
  - docs/models/components/requeststatus.md
  - docs/models/components/rolecreaterequest.md
  - docs/models/components/roleproperties.md
  - docs/models/components/roleresponse.md
  - docs/models/components/roleupdaterequest.md
  - docs/models/components/samplerate.md
  - docs/models/components/security.md
  - docs/models/components/servicecreaterequest.md
  - docs/models/components/serviceproperties.md
  - docs/models/components/serviceresponse.md
  - docs/models/components/serviceupdaterequest.md
  - docs/models/components/session.md
  - docs/models/components/sessionaction.md
  - docs/models/components/sessiondata.md
  - docs/models/components/sessionlabel.md
  - docs/models/components/sessionlabelcreate.md
  - docs/models/components/sessionlabelproperties.md
  - docs/models/components/sessionmessage.md
  - docs/models/components/sessionproperties.md
  - docs/models/components/sessionrecordingresponse.md
  - docs/models/components/sessionsummaryresponse.md
  - docs/models/components/sessiontext.md
  - docs/models/components/sessiontranscriptionresponse.md
  - docs/models/components/statictoolparameter.md
  - docs/models/components/statictoolparametertype.md
  - docs/models/components/summaryentry.md
  - docs/models/components/supportedllm.md
  - docs/models/components/takeoutrequeststatus.md
  - docs/models/components/takeoutstatusresponse.md
  - docs/models/components/targetmodes.md
  - docs/models/components/telephonyconfigurations.md
  - docs/models/components/testmessage.md
  - docs/models/components/testmessageresponse.md
  - docs/models/components/toolagentinfo.md
  - docs/models/components/toolargumentlocation.md
  - docs/models/components/toolauthtype.md
  - docs/models/components/toolcreaterequest.md
  - docs/models/components/tooldefinition.md
  - docs/models/components/tooldetailresponse.md
  - docs/models/components/toolfunction.md
  - docs/models/components/toolhttpendpoint.md
  - docs/models/components/toolhttpmethod.md
  - docs/models/components/tooloptions.md
  - docs/models/components/toolparameterdefault.md
  - docs/models/components/toolparametertransform.md
  - docs/models/components/toolparametertransformcondition.md
  - docs/models/components/toolpromptinfo.md
  - docs/models/components/toolproperties.md
  - docs/models/components/toolresponse.md
  - docs/models/components/toolresultdata.md
  - docs/models/components/toolupdaterequest.md
  - docs/models/components/ttsprovider.md
  - docs/models/components/twiliochannelconfigcreate.md
  - docs/models/components/twiliochannelconfigupdate.md
  - docs/models/components/twiliochannelcreaterequest.md
  - docs/models/components/twiliochannelupdaterequest.md
  - docs/models/components/twiliolistnumbersresponse.md
  - docs/models/components/twilionumberaddrequest.md
  - docs/models/components/twilionumberaddresponse.md
  - docs/models/components/twilionumberupdaterequest.md
  - docs/models/components/twilionumberupdateresponse.md
  - docs/models/components/twiliophonenumber.md
  - docs/models/components/type.md
  - docs/models/components/useractivitystatus.md
  - docs/models/components/usercreaterequest.md
  - docs/models/components/userdeleterequest.md
  - docs/models/components/userproperties.md
  - docs/models/components/userresponse.md
  - docs/models/components/userupdaterequest.md
  - docs/models/components/validationerror.md
  - docs/models/components/voicedisplayinfo.md
  - docs/models/components/voicesamplecreaterequest.md
  - docs/models/errors/httpvalidationerror.md
  - docs/models/operations/agentdeleterequest.md
  - docs/models/operations/agentgetbyidrequest.md
  - docs/models/operations/agentlistrequest.md
  - docs/models/operations/availabletargetsrequest.md
  - docs/models/operations/channelslistrequest.md
  - docs/models/operations/channelstwiliogetbyidrequest.md
  - docs/models/operations/channelstwilionumbersaddrequest.md
  - docs/models/operations/channelstwilionumberslistrequest.md
  - docs/models/operations/channelstwilionumbersupdaterequest.md
  - docs/models/operations/channeltargetscreaterequest.md
  - docs/models/operations/channeltargetsdeleterequest.md
  - docs/models/operations/channeltargetsgetbyidrequest.md
  - docs/models/operations/channeltargetslistrequest.md
  - docs/models/operations/channeltargetsupdaterequest.md
  - docs/models/operations/conversationslistrequest.md
  - docs/models/operations/custommessagegetbyidrequest.md
  - docs/models/operations/custommessagesdeleterequest.md
  - docs/models/operations/custommessageslistrequest.md
  - docs/models/operations/datasourcesdeleterequest.md
  - docs/models/operations/datasourcesgetbyidrequest.md
  - docs/models/operations/datasourceslistrequest.md
  - docs/models/operations/eventslistrequest.md
  - docs/models/operations/generatesessionrecordingurlsrequest.md
  - docs/models/operations/getsessiondatabysessionidrequest.md
  - docs/models/operations/getsessiondatabysidrequest.md
  - docs/models/operations/getsessiontoolcallresultbyidrequest.md
  - docs/models/operations/incidentdeleterequest.md
  - docs/models/operations/incidentgetbyidrequest.md
  - docs/models/operations/incidentlistrequest.md
  - docs/models/operations/insightsfolderdeleterequest.md
  - docs/models/operations/insightsfoldergetbyidrequest.md
  - docs/models/operations/insightsfolderlistrequest.md
  - docs/models/operations/insightsfolderupdaterequest.md
  - docs/models/operations/insightsfolderuploadfilerequest.md
  - docs/models/operations/insightslistrequest.md
  - docs/models/operations/insightstooldeleterequest.md
  - docs/models/operations/insightstoolupdaterequest.md
  - docs/models/operations/insightsuploadlistfilesrequest.md
  - docs/models/operations/insightsuploadmovefilesrequest.md
  - docs/models/operations/insightsworkflowactivaterequest.md
  - docs/models/operations/insightsworkflowdeleterequest.md
  - docs/models/operations/insightsworkflowgetbyidrequest.md
  - docs/models/operations/insightsworkflowinactivaterequest.md
  - docs/models/operations/insightsworkflowlistrequest.md
  - docs/models/operations/insightsworkflowupdaterequest.md
  - docs/models/operations/insighttoolgetbyidrequest.md
  - docs/models/operations/insighttoollistrequest.md
  - docs/models/operations/languagegroupsdeleterequest.md
  - docs/models/operations/languagegroupsgetbyidrequest.md
  - docs/models/operations/languagegroupslistrequest.md
  - docs/models/operations/outboundbatchaddrequest.md
  - docs/models/operations/outboundbatchdeleterequest.md
  - docs/models/operations/outboundbatchgetbyidrequest.md
  - docs/models/operations/outboundbatchlistrequest.md
  - docs/models/operations/outboundbatchremoverequest.md
  - docs/models/operations/outboundbatchresultsrequest.md
  - docs/models/operations/outboundbatchupdaterequest.md
  - docs/models/operations/outboundbatchuploadrequest.md
  - docs/models/operations/outboundcampaigndeleterequest.md
  - docs/models/operations/outboundcampaigngetbyidrequest.md
  - docs/models/operations/outboundcampaignlistrequest.md
  - docs/models/operations/outboundcampaignupdaterequest.md
  - docs/models/operations/postgetdashboardrequest.md
  - docs/models/operations/postlistdashboardrequest.md
  - docs/models/operations/promptsdeleterequest.md
  - docs/models/operations/promptsgetbyidrequest.md
  - docs/models/operations/promptshistoryrequest.md
  - docs/models/operations/promptslistrequest.md
  - docs/models/operations/rolesdeleterequest.md
  - docs/models/operations/rolesgetbyidrequest.md
  - docs/models/operations/roleslistrequest.md
  - docs/models/operations/servicedeleterequest.md
  - docs/models/operations/servicelistrequest.md
  - docs/models/operations/servicesgetbyidrequest.md
  - docs/models/operations/sessionfullsummarygetbyidrequest.md
  - docs/models/operations/sessiongetbyidrequest.md
  - docs/models/operations/sessionlabelgetbyidrequest.md
  - docs/models/operations/sessionlabelslistrequest.md
  - docs/models/operations/sessionlatencygetbyidrequest.md
  - docs/models/operations/sessionrecordingstreamrequest.md
  - docs/models/operations/sessionslistrequest.md
  - docs/models/operations/sessiontranscriptgetbyidrequest.md
  - docs/models/operations/takeoutsgetbyjobidrequest.md
  - docs/models/operations/takeoutsgetfilerequest.md
  - docs/models/operations/tooldeleterequest.md
  - docs/models/operations/toolgetbynamerequest.md
  - docs/models/operations/toollistrequest.md
  - docs/models/operations/usersgetbyemailrequest.md
  - docs/models/operations/userslistrequest.md
  - docs/models/operations/userssendemailrequest.md
  - docs/sdks/agents/README.md
  - docs/sdks/batches/README.md
  - docs/sdks/campaigns/README.md
  - docs/sdks/channels/README.md
  - docs/sdks/conversations/README.md
  - docs/sdks/custommessages/README.md
  - docs/sdks/dashboards/README.md
  - docs/sdks/datasources/README.md
  - docs/sdks/events/README.md
  - docs/sdks/folders/README.md
  - docs/sdks/fullsummary/README.md
  - docs/sdks/incidents/README.md
  - docs/sdks/insights/README.md
  - docs/sdks/languagegroups/README.md
  - docs/sdks/latency/README.md
  - docs/sdks/numbers/README.md
  - docs/sdks/organizations/README.md
  - docs/sdks/permissions/README.md
  - docs/sdks/prompts/README.md
  - docs/sdks/pronunciations/README.md
  - docs/sdks/roles/README.md
  - docs/sdks/services/README.md
  - docs/sdks/sessiondebug/README.md
  - docs/sdks/sessionlabels/README.md
  - docs/sdks/sessions/README.md
  - docs/sdks/syllablesdktools/README.md
  - docs/sdks/takeouts/README.md
  - docs/sdks/targets/README.md
  - docs/sdks/test/README.md
  - docs/sdks/tools/README.md
  - docs/sdks/transcript/README.md
  - docs/sdks/twilio/README.md
  - docs/sdks/users/README.md
  - docs/sdks/v1/README.md
  - docs/sdks/workflows/README.md
  - eslint.config.mjs
  - examples/.env.template
  - examples/README.md
  - examples/agentsList.example.ts
  - examples/package.json
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/agentsAgentGetAvailableVoices.ts
  - src/funcs/agentsCreate.ts
  - src/funcs/agentsDelete.ts
  - src/funcs/agentsGetById.ts
  - src/funcs/agentsList.ts
  - src/funcs/agentsTestSendTestMessage.ts
  - src/funcs/agentsUpdate.ts
  - src/funcs/channelsCreate.ts
  - src/funcs/channelsDelete.ts
  - src/funcs/channelsList.ts
  - src/funcs/channelsTargetsAvailableTargets.ts
  - src/funcs/channelsTargetsCreate.ts
  - src/funcs/channelsTargetsGetById.ts
  - src/funcs/channelsTargetsList.ts
  - src/funcs/channelsTargetsUpdate.ts
  - src/funcs/channelsTwilioCreate.ts
  - src/funcs/channelsTwilioGetById.ts
  - src/funcs/channelsTwilioNumbersAdd.ts
  - src/funcs/channelsTwilioNumbersList.ts
  - src/funcs/channelsTwilioNumbersUpdate.ts
  - src/funcs/channelsTwilioUpdate.ts
  - src/funcs/channelsUpdate.ts
  - src/funcs/conversationsList.ts
  - src/funcs/customMessagesCreate.ts
  - src/funcs/customMessagesDelete.ts
  - src/funcs/customMessagesGetById.ts
  - src/funcs/customMessagesList.ts
  - src/funcs/customMessagesUpdate.ts
  - src/funcs/dashboardsPostGetDashboard.ts
  - src/funcs/dashboardsPostListDashboard.ts
  - src/funcs/dashboardsPostSessionEventsDashboard.ts
  - src/funcs/dashboardsPostSessionSummaryDashboard.ts
  - src/funcs/dashboardsPostSessionTransfersDashboard.ts
  - src/funcs/dashboardsPostSessionsDashboard.ts
  - src/funcs/dataSourcesCreate.ts
  - src/funcs/dataSourcesDelete.ts
  - src/funcs/dataSourcesGetById.ts
  - src/funcs/dataSourcesList.ts
  - src/funcs/dataSourcesUpdate.ts
  - src/funcs/eventsList.ts
  - src/funcs/incidentsCreate.ts
  - src/funcs/incidentsDelete.ts
  - src/funcs/incidentsGetById.ts
  - src/funcs/incidentsIncidentGetOrganizations.ts
  - src/funcs/incidentsList.ts
  - src/funcs/incidentsUpdate.ts
  - src/funcs/insightsFoldersCreate.ts
  - src/funcs/insightsFoldersDelete.ts
  - src/funcs/insightsFoldersGetById.ts
  - src/funcs/insightsFoldersList.ts
  - src/funcs/insightsFoldersListFiles.ts
  - src/funcs/insightsFoldersMoveFiles.ts
  - src/funcs/insightsFoldersUpdate.ts
  - src/funcs/insightsFoldersUploadFile.ts
  - src/funcs/insightsList.ts
  - src/funcs/insightsToolsCreate.ts
  - src/funcs/insightsToolsDelete.ts
  - src/funcs/insightsToolsGetById.ts
  - src/funcs/insightsToolsInsightToolGetDefinitions.ts
  - src/funcs/insightsToolsInsightsToolTest.ts
  - src/funcs/insightsToolsList.ts
  - src/funcs/insightsToolsUpdate.ts
  - src/funcs/insightsWorkflowsActivate.ts
  - src/funcs/insightsWorkflowsCreate.ts
  - src/funcs/insightsWorkflowsDelete.ts
  - src/funcs/insightsWorkflowsGetById.ts
  - src/funcs/insightsWorkflowsInactivate.ts
  - src/funcs/insightsWorkflowsList.ts
  - src/funcs/insightsWorkflowsQueueWork.ts
  - src/funcs/insightsWorkflowsUpdate.ts
  - src/funcs/languageGroupsCreate.ts
  - src/funcs/languageGroupsDelete.ts
  - src/funcs/languageGroupsGetById.ts
  - src/funcs/languageGroupsLanguageGroupsCreateVoiceSample.ts
  - src/funcs/languageGroupsList.ts
  - src/funcs/languageGroupsUpdate.ts
  - src/funcs/organizationsCreate.ts
  - src/funcs/organizationsDelete.ts
  - src/funcs/organizationsOrganizationsGet.ts
  - src/funcs/organizationsUpdate.ts
  - src/funcs/outboundBatchesAdd.ts
  - src/funcs/outboundBatchesCreate.ts
  - src/funcs/outboundBatchesDelete.ts
  - src/funcs/outboundBatchesGetById.ts
  - src/funcs/outboundBatchesList.ts
  - src/funcs/outboundBatchesRemove.ts
  - src/funcs/outboundBatchesResults.ts
  - src/funcs/outboundBatchesUpdate.ts
  - src/funcs/outboundBatchesUpload.ts
  - src/funcs/outboundCampaignsCreate.ts
  - src/funcs/outboundCampaignsDelete.ts
  - src/funcs/outboundCampaignsGetById.ts
  - src/funcs/outboundCampaignsList.ts
  - src/funcs/outboundCampaignsUpdate.ts
  - src/funcs/permissionsList.ts
  - src/funcs/promptsCreate.ts
  - src/funcs/promptsDelete.ts
  - src/funcs/promptsGetById.ts
  - src/funcs/promptsList.ts
  - src/funcs/promptsPromptGetSupportedLlms.ts
  - src/funcs/promptsPromptsHistory.ts
  - src/funcs/promptsUpdate.ts
  - src/funcs/pronunciationsPronunciationsDeleteCsv.ts
  - src/funcs/pronunciationsPronunciationsDownloadCsv.ts
  - src/funcs/pronunciationsPronunciationsGet.ts
  - src/funcs/pronunciationsPronunciationsGetMetadata.ts
  - src/funcs/pronunciationsPronunciationsUploadCsv.ts
  - src/funcs/rolesCreate.ts
  - src/funcs/rolesDelete.ts
  - src/funcs/rolesGetById.ts
  - src/funcs/rolesList.ts
  - src/funcs/rolesUpdate.ts
  - src/funcs/servicesCreate.ts
  - src/funcs/servicesDelete.ts
  - src/funcs/servicesGetById.ts
  - src/funcs/servicesList.ts
  - src/funcs/servicesUpdate.ts
  - src/funcs/sessionDebugGetSessionDataBySessionId.ts
  - src/funcs/sessionDebugGetSessionDataBySid.ts
  - src/funcs/sessionDebugGetSessionToolCallResultById.ts
  - src/funcs/sessionLabelsCreate.ts
  - src/funcs/sessionLabelsGetById.ts
  - src/funcs/sessionLabelsList.ts
  - src/funcs/sessionsFullSummaryGetById.ts
  - src/funcs/sessionsGenerateSessionRecordingUrls.ts
  - src/funcs/sessionsGetById.ts
  - src/funcs/sessionsLatencyGetById.ts
  - src/funcs/sessionsList.ts
  - src/funcs/sessionsSessionRecordingStream.ts
  - src/funcs/sessionsTranscriptGetById.ts
  - src/funcs/takeoutsCreate.ts
  - src/funcs/takeoutsTakeoutsGetByJobId.ts
  - src/funcs/takeoutsTakeoutsGetFile.ts
  - src/funcs/toolsCreate.ts
  - src/funcs/toolsDelete.ts
  - src/funcs/toolsGetByName.ts
  - src/funcs/toolsList.ts
  - src/funcs/toolsUpdate.ts
  - src/funcs/usersCreate.ts
  - src/funcs/usersDelete.ts
  - src/funcs/usersList.ts
  - src/funcs/usersUpdate.ts
  - src/funcs/usersUsersDeleteAccount.ts
  - src/funcs/usersUsersGetByEmail.ts
  - src/funcs/usersUsersSendEmail.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/mcp-server/build.mts
  - src/mcp-server/cli.ts
  - src/mcp-server/cli/start/command.ts
  - src/mcp-server/cli/start/impl.ts
  - src/mcp-server/console-logger.ts
  - src/mcp-server/extensions.ts
  - src/mcp-server/mcp-server.ts
  - src/mcp-server/prompts.ts
  - src/mcp-server/resources.ts
  - src/mcp-server/scopes.ts
  - src/mcp-server/server.ts
  - src/mcp-server/shared.ts
  - src/mcp-server/tools.ts
  - src/mcp-server/tools/agentsAgentGetAvailableVoices.ts
  - src/mcp-server/tools/agentsCreate.ts
  - src/mcp-server/tools/agentsDelete.ts
  - src/mcp-server/tools/agentsGetById.ts
  - src/mcp-server/tools/agentsList.ts
  - src/mcp-server/tools/agentsTestSendTestMessage.ts
  - src/mcp-server/tools/agentsUpdate.ts
  - src/mcp-server/tools/channelsCreate.ts
  - src/mcp-server/tools/channelsDelete.ts
  - src/mcp-server/tools/channelsList.ts
  - src/mcp-server/tools/channelsTargetsAvailableTargets.ts
  - src/mcp-server/tools/channelsTargetsCreate.ts
  - src/mcp-server/tools/channelsTargetsGetById.ts
  - src/mcp-server/tools/channelsTargetsList.ts
  - src/mcp-server/tools/channelsTargetsUpdate.ts
  - src/mcp-server/tools/channelsTwilioCreate.ts
  - src/mcp-server/tools/channelsTwilioGetById.ts
  - src/mcp-server/tools/channelsTwilioNumbersAdd.ts
  - src/mcp-server/tools/channelsTwilioNumbersList.ts
  - src/mcp-server/tools/channelsTwilioNumbersUpdate.ts
  - src/mcp-server/tools/channelsTwilioUpdate.ts
  - src/mcp-server/tools/channelsUpdate.ts
  - src/mcp-server/tools/conversationsList.ts
  - src/mcp-server/tools/customMessagesCreate.ts
  - src/mcp-server/tools/customMessagesDelete.ts
  - src/mcp-server/tools/customMessagesGetById.ts
  - src/mcp-server/tools/customMessagesList.ts
  - src/mcp-server/tools/customMessagesUpdate.ts
  - src/mcp-server/tools/dashboardsPostGetDashboard.ts
  - src/mcp-server/tools/dashboardsPostListDashboard.ts
  - src/mcp-server/tools/dashboardsPostSessionEventsDashboard.ts
  - src/mcp-server/tools/dashboardsPostSessionSummaryDashboard.ts
  - src/mcp-server/tools/dashboardsPostSessionTransfersDashboard.ts
  - src/mcp-server/tools/dashboardsPostSessionsDashboard.ts
  - src/mcp-server/tools/dataSourcesCreate.ts
  - src/mcp-server/tools/dataSourcesDelete.ts
  - src/mcp-server/tools/dataSourcesGetById.ts
  - src/mcp-server/tools/dataSourcesList.ts
  - src/mcp-server/tools/dataSourcesUpdate.ts
  - src/mcp-server/tools/eventsList.ts
  - src/mcp-server/tools/incidentsCreate.ts
  - src/mcp-server/tools/incidentsDelete.ts
  - src/mcp-server/tools/incidentsGetById.ts
  - src/mcp-server/tools/incidentsIncidentGetOrganizations.ts
  - src/mcp-server/tools/incidentsList.ts
  - src/mcp-server/tools/incidentsUpdate.ts
  - src/mcp-server/tools/insightsFoldersCreate.ts
  - src/mcp-server/tools/insightsFoldersDelete.ts
  - src/mcp-server/tools/insightsFoldersGetById.ts
  - src/mcp-server/tools/insightsFoldersList.ts
  - src/mcp-server/tools/insightsFoldersListFiles.ts
  - src/mcp-server/tools/insightsFoldersMoveFiles.ts
  - src/mcp-server/tools/insightsFoldersUpdate.ts
  - src/mcp-server/tools/insightsFoldersUploadFile.ts
  - src/mcp-server/tools/insightsList.ts
  - src/mcp-server/tools/insightsToolsCreate.ts
  - src/mcp-server/tools/insightsToolsDelete.ts
  - src/mcp-server/tools/insightsToolsGetById.ts
  - src/mcp-server/tools/insightsToolsInsightToolGetDefinitions.ts
  - src/mcp-server/tools/insightsToolsInsightsToolTest.ts
  - src/mcp-server/tools/insightsToolsList.ts
  - src/mcp-server/tools/insightsToolsUpdate.ts
  - src/mcp-server/tools/insightsWorkflowsActivate.ts
  - src/mcp-server/tools/insightsWorkflowsCreate.ts
  - src/mcp-server/tools/insightsWorkflowsDelete.ts
  - src/mcp-server/tools/insightsWorkflowsGetById.ts
  - src/mcp-server/tools/insightsWorkflowsInactivate.ts
  - src/mcp-server/tools/insightsWorkflowsList.ts
  - src/mcp-server/tools/insightsWorkflowsQueueWork.ts
  - src/mcp-server/tools/insightsWorkflowsUpdate.ts
  - src/mcp-server/tools/languageGroupsCreate.ts
  - src/mcp-server/tools/languageGroupsDelete.ts
  - src/mcp-server/tools/languageGroupsGetById.ts
  - src/mcp-server/tools/languageGroupsLanguageGroupsCreateVoiceSample.ts
  - src/mcp-server/tools/languageGroupsList.ts
  - src/mcp-server/tools/languageGroupsUpdate.ts
  - src/mcp-server/tools/organizationsCreate.ts
  - src/mcp-server/tools/organizationsDelete.ts
  - src/mcp-server/tools/organizationsOrganizationsGet.ts
  - src/mcp-server/tools/organizationsUpdate.ts
  - src/mcp-server/tools/outboundBatchesAdd.ts
  - src/mcp-server/tools/outboundBatchesCreate.ts
  - src/mcp-server/tools/outboundBatchesDelete.ts
  - src/mcp-server/tools/outboundBatchesGetById.ts
  - src/mcp-server/tools/outboundBatchesList.ts
  - src/mcp-server/tools/outboundBatchesRemove.ts
  - src/mcp-server/tools/outboundBatchesResults.ts
  - src/mcp-server/tools/outboundBatchesUpdate.ts
  - src/mcp-server/tools/outboundBatchesUpload.ts
  - src/mcp-server/tools/outboundCampaignsCreate.ts
  - src/mcp-server/tools/outboundCampaignsDelete.ts
  - src/mcp-server/tools/outboundCampaignsGetById.ts
  - src/mcp-server/tools/outboundCampaignsList.ts
  - src/mcp-server/tools/outboundCampaignsUpdate.ts
  - src/mcp-server/tools/permissionsList.ts
  - src/mcp-server/tools/promptsCreate.ts
  - src/mcp-server/tools/promptsDelete.ts
  - src/mcp-server/tools/promptsGetById.ts
  - src/mcp-server/tools/promptsList.ts
  - src/mcp-server/tools/promptsPromptGetSupportedLlms.ts
  - src/mcp-server/tools/promptsPromptsHistory.ts
  - src/mcp-server/tools/promptsUpdate.ts
  - src/mcp-server/tools/pronunciationsPronunciationsDeleteCsv.ts
  - src/mcp-server/tools/pronunciationsPronunciationsDownloadCsv.ts
  - src/mcp-server/tools/pronunciationsPronunciationsGet.ts
  - src/mcp-server/tools/pronunciationsPronunciationsGetMetadata.ts
  - src/mcp-server/tools/pronunciationsPronunciationsUploadCsv.ts
  - src/mcp-server/tools/rolesCreate.ts
  - src/mcp-server/tools/rolesDelete.ts
  - src/mcp-server/tools/rolesGetById.ts
  - src/mcp-server/tools/rolesList.ts
  - src/mcp-server/tools/rolesUpdate.ts
  - src/mcp-server/tools/servicesCreate.ts
  - src/mcp-server/tools/servicesDelete.ts
  - src/mcp-server/tools/servicesGetById.ts
  - src/mcp-server/tools/servicesList.ts
  - src/mcp-server/tools/servicesUpdate.ts
  - src/mcp-server/tools/sessionDebugGetSessionDataBySessionId.ts
  - src/mcp-server/tools/sessionDebugGetSessionDataBySid.ts
  - src/mcp-server/tools/sessionDebugGetSessionToolCallResultById.ts
  - src/mcp-server/tools/sessionLabelsCreate.ts
  - src/mcp-server/tools/sessionLabelsGetById.ts
  - src/mcp-server/tools/sessionLabelsList.ts
  - src/mcp-server/tools/sessionsFullSummaryGetById.ts
  - src/mcp-server/tools/sessionsGenerateSessionRecordingUrls.ts
  - src/mcp-server/tools/sessionsGetById.ts
  - src/mcp-server/tools/sessionsLatencyGetById.ts
  - src/mcp-server/tools/sessionsList.ts
  - src/mcp-server/tools/sessionsSessionRecordingStream.ts
  - src/mcp-server/tools/sessionsTranscriptGetById.ts
  - src/mcp-server/tools/takeoutsCreate.ts
  - src/mcp-server/tools/takeoutsTakeoutsGetByJobId.ts
  - src/mcp-server/tools/takeoutsTakeoutsGetFile.ts
  - src/mcp-server/tools/toolsCreate.ts
  - src/mcp-server/tools/toolsDelete.ts
  - src/mcp-server/tools/toolsGetByName.ts
  - src/mcp-server/tools/toolsList.ts
  - src/mcp-server/tools/toolsUpdate.ts
  - src/mcp-server/tools/usersCreate.ts
  - src/mcp-server/tools/usersDelete.ts
  - src/mcp-server/tools/usersList.ts
  - src/mcp-server/tools/usersUpdate.ts
  - src/mcp-server/tools/usersUsersDeleteAccount.ts
  - src/mcp-server/tools/usersUsersGetByEmail.ts
  - src/mcp-server/tools/usersUsersSendEmail.ts
  - src/models/components/agentcreate.ts
  - src/models/components/agentlanguage.ts
  - src/models/components/agentproperties.ts
  - src/models/components/agentresponse.ts
  - src/models/components/agentsttprovider.ts
  - src/models/components/agenttooldefaults.ts
  - src/models/components/agenttoolfielddefault.ts
  - src/models/components/agentupdate.ts
  - src/models/components/agentvoice.ts
  - src/models/components/agentvoicedisplayname.ts
  - src/models/components/agentvoicegender.ts
  - src/models/components/agentvoicemodel.ts
  - src/models/components/agentvoicevarname.ts
  - src/models/components/agentwaitsound.ts
  - src/models/components/availabletarget.ts
  - src/models/components/availabletargetproperties.ts
  - src/models/components/batchdetails.ts
  - src/models/components/batchproperties.ts
  - src/models/components/batchstatus.ts
  - src/models/components/bodyinsightsfolderuploadfile.ts
  - src/models/components/bodyorganizationscreate.ts
  - src/models/components/bodyorganizationsdelete.ts
  - src/models/components/bodyorganizationsupdate.ts
  - src/models/components/bodyoutboundbatchdelete.ts
  - src/models/components/bodyoutboundbatchupload.ts
  - src/models/components/bodypronunciationsuploadcsv.ts
  - src/models/components/campaignproperties.ts
  - src/models/components/channel.ts
  - src/models/components/channelconfigview.ts
  - src/models/components/channelproperties.ts
  - src/models/components/channelservices.ts
  - src/models/components/channeltargetcreaterequest.ts
  - src/models/components/channeltargetproperties.ts
  - src/models/components/channeltargetresponse.ts
  - src/models/components/channeltargetupdaterequest.ts
  - src/models/components/communicationbatch.ts
  - src/models/components/communicationbatchinput.ts
  - src/models/components/communicationbatchupdate.ts
  - src/models/components/communicationrequest.ts
  - src/models/components/communicationrequestresult.ts
  - src/models/components/conversation.ts
  - src/models/components/conversationproperties.ts
  - src/models/components/createtakeoutresponse.ts
  - src/models/components/custommessagecreaterequest.ts
  - src/models/components/custommessageproperties.ts
  - src/models/components/custommessageresponse.ts
  - src/models/components/custommessagerule.ts
  - src/models/components/custommessageupdaterequest.ts
  - src/models/components/dashboard.ts
  - src/models/components/dashboardproperties.ts
  - src/models/components/dashboardresponse.ts
  - src/models/components/dashboardtokenresponse.ts
  - src/models/components/datasourcecreaterequest.ts
  - src/models/components/datasourcedetailresponse.ts
  - src/models/components/datasourcemetadataresponse.ts
  - src/models/components/datasourceproperties.ts
  - src/models/components/datasourceupdaterequest.ts
  - src/models/components/dayofweek.ts
  - src/models/components/daysofweek.ts
  - src/models/components/dialogmessage.ts
  - src/models/components/dialogrole.ts
  - src/models/components/dialogtoolcall.ts
  - src/models/components/dictionarymetadata.ts
  - src/models/components/event.ts
  - src/models/components/eventproperties.ts
  - src/models/components/folderdetails.ts
  - src/models/components/incidentcreaterequest.ts
  - src/models/components/incidentorganizationresponse.ts
  - src/models/components/incidentproperties.ts
  - src/models/components/incidentresponse.ts
  - src/models/components/incidentupdaterequest.ts
  - src/models/components/index.ts
  - src/models/components/insightsfolder.ts
  - src/models/components/insightsfolderfilemove.ts
  - src/models/components/insightsfolderinput.ts
  - src/models/components/insightsfolderproperties.ts
  - src/models/components/insightsoutput.ts
  - src/models/components/insightsproperties.ts
  - src/models/components/insightsuploadfile.ts
  - src/models/components/insightsuploadfileproperties.ts
  - src/models/components/insightsworkflowqueuesession.ts
  - src/models/components/insighttooldefinition.ts
  - src/models/components/insighttoolinput.ts
  - src/models/components/insighttooloutput.ts
  - src/models/components/insighttoolproperties.ts
  - src/models/components/insighttooltestinput.ts
  - src/models/components/insightworkflowactivate.ts
  - src/models/components/insightworkflowcondition.ts
  - src/models/components/insightworkflowestimate.ts
  - src/models/components/insightworkflowinput.ts
  - src/models/components/insightworkflowoutput.ts
  - src/models/components/insightworkflowproperties.ts
  - src/models/components/inspectlatencyresponse.ts
  - src/models/components/internaltool.ts
  - src/models/components/languagecode.ts
  - src/models/components/languageconfig.ts
  - src/models/components/languagegroupagentinfo.ts
  - src/models/components/languagegroupcreaterequest.ts
  - src/models/components/languagegroupproperties.ts
  - src/models/components/languagegroupresponse.ts
  - src/models/components/languagegroupupdaterequest.ts
  - src/models/components/latencycategory.ts
  - src/models/components/latencyentry.ts
  - src/models/components/latencyunittype.ts
  - src/models/components/listresponseagentresponse.ts
  - src/models/components/listresponseavailabletarget.ts
  - src/models/components/listresponsechannel.ts
  - src/models/components/listresponsechanneltargetresponse.ts
  - src/models/components/listresponsecommunicationbatch.ts
  - src/models/components/listresponseconversation.ts
  - src/models/components/listresponsecustommessageresponse.ts
  - src/models/components/listresponsedashboardresponse.ts
  - src/models/components/listresponsedatasourcemetadataresponse.ts
  - src/models/components/listresponseevent.ts
  - src/models/components/listresponseincidentresponse.ts
  - src/models/components/listresponseinsightsfolder.ts
  - src/models/components/listresponseinsightsoutput.ts
  - src/models/components/listresponseinsightsuploadfile.ts
  - src/models/components/listresponseinsighttooloutput.ts
  - src/models/components/listresponseinsightworkflowoutput.ts
  - src/models/components/listresponselanguagegroupresponse.ts
  - src/models/components/listresponseoutboundcampaign.ts
  - src/models/components/listresponsepromptresponse.ts
  - src/models/components/listresponseroleresponse.ts
  - src/models/components/listresponseserviceresponse.ts
  - src/models/components/listresponsesession.ts
  - src/models/components/listresponsesessionlabel.ts
  - src/models/components/listresponsetoolresponse.ts
  - src/models/components/listresponseuserresponse.ts
  - src/models/components/logintype.ts
  - src/models/components/matchtype.ts
  - src/models/components/orderbydirection.ts
  - src/models/components/organizationchannelconfig.ts
  - src/models/components/organizationchannelcreaterequest.ts
  - src/models/components/organizationchannelupdaterequest.ts
  - src/models/components/organizationresponse.ts
  - src/models/components/outboundcampaign.ts
  - src/models/components/outboundcampaigninput.ts
  - src/models/components/permissiongroupresponse.ts
  - src/models/components/permissionresponse.ts
  - src/models/components/promptcreaterequest.ts
  - src/models/components/prompthistory.ts
  - src/models/components/prompthistorylinkedtool.ts
  - src/models/components/promptllmconfig.ts
  - src/models/components/promptllmprovider.ts
  - src/models/components/promptproperties.ts
  - src/models/components/promptresponse.ts
  - src/models/components/promptupdaterequest.ts
  - src/models/components/pronunciationoverride.ts
  - src/models/components/pronunciationoverridesdictionary.ts
  - src/models/components/pronunciationscsvuploadresponse.ts
  - src/models/components/requeststatus.ts
  - src/models/components/rolecreaterequest.ts
  - src/models/components/roleproperties.ts
  - src/models/components/roleresponse.ts
  - src/models/components/roleupdaterequest.ts
  - src/models/components/security.ts
  - src/models/components/servicecreaterequest.ts
  - src/models/components/serviceproperties.ts
  - src/models/components/serviceresponse.ts
  - src/models/components/serviceupdaterequest.ts
  - src/models/components/session.ts
  - src/models/components/sessionaction.ts
  - src/models/components/sessiondata.ts
  - src/models/components/sessionlabel.ts
  - src/models/components/sessionlabelcreate.ts
  - src/models/components/sessionlabelproperties.ts
  - src/models/components/sessionmessage.ts
  - src/models/components/sessionproperties.ts
  - src/models/components/sessionrecordingresponse.ts
  - src/models/components/sessionsummaryresponse.ts
  - src/models/components/sessiontext.ts
  - src/models/components/sessiontranscriptionresponse.ts
  - src/models/components/statictoolparameter.ts
  - src/models/components/statictoolparametertype.ts
  - src/models/components/summaryentry.ts
  - src/models/components/supportedllm.ts
  - src/models/components/takeoutrequeststatus.ts
  - src/models/components/takeoutstatusresponse.ts
  - src/models/components/targetmodes.ts
  - src/models/components/telephonyconfigurations.ts
  - src/models/components/testmessage.ts
  - src/models/components/testmessageresponse.ts
  - src/models/components/toolagentinfo.ts
  - src/models/components/toolargumentlocation.ts
  - src/models/components/toolauthtype.ts
  - src/models/components/toolcreaterequest.ts
  - src/models/components/tooldefinition.ts
  - src/models/components/tooldetailresponse.ts
  - src/models/components/toolfunction.ts
  - src/models/components/toolhttpendpoint.ts
  - src/models/components/toolhttpmethod.ts
  - src/models/components/tooloptions.ts
  - src/models/components/toolparameterdefault.ts
  - src/models/components/toolparametertransform.ts
  - src/models/components/toolparametertransformcondition.ts
  - src/models/components/toolpromptinfo.ts
  - src/models/components/toolproperties.ts
  - src/models/components/toolresponse.ts
  - src/models/components/toolresultdata.ts
  - src/models/components/toolupdaterequest.ts
  - src/models/components/ttsprovider.ts
  - src/models/components/twiliochannelconfigcreate.ts
  - src/models/components/twiliochannelconfigupdate.ts
  - src/models/components/twiliochannelcreaterequest.ts
  - src/models/components/twiliochannelupdaterequest.ts
  - src/models/components/twiliolistnumbersresponse.ts
  - src/models/components/twilionumberaddrequest.ts
  - src/models/components/twilionumberaddresponse.ts
  - src/models/components/twilionumberupdaterequest.ts
  - src/models/components/twilionumberupdateresponse.ts
  - src/models/components/twiliophonenumber.ts
  - src/models/components/useractivitystatus.ts
  - src/models/components/usercreaterequest.ts
  - src/models/components/userdeleterequest.ts
  - src/models/components/userproperties.ts
  - src/models/components/userresponse.ts
  - src/models/components/userupdaterequest.ts
  - src/models/components/validationerror.ts
  - src/models/components/voicedisplayinfo.ts
  - src/models/components/voicesamplecreaterequest.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/httpvalidationerror.ts
  - src/models/errors/index.ts
  - src/models/errors/responsevalidationerror.ts
  - src/models/errors/sdkerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/syllablesdkerror.ts
  - src/models/operations/agentdelete.ts
  - src/models/operations/agentgetbyid.ts
  - src/models/operations/agentlist.ts
  - src/models/operations/availabletargets.ts
  - src/models/operations/channelslist.ts
  - src/models/operations/channelstwiliogetbyid.ts
  - src/models/operations/channelstwilionumbersadd.ts
  - src/models/operations/channelstwilionumberslist.ts
  - src/models/operations/channelstwilionumbersupdate.ts
  - src/models/operations/channeltargetscreate.ts
  - src/models/operations/channeltargetsdelete.ts
  - src/models/operations/channeltargetsgetbyid.ts
  - src/models/operations/channeltargetslist.ts
  - src/models/operations/channeltargetsupdate.ts
  - src/models/operations/conversationslist.ts
  - src/models/operations/custommessagegetbyid.ts
  - src/models/operations/custommessagesdelete.ts
  - src/models/operations/custommessageslist.ts
  - src/models/operations/datasourcesdelete.ts
  - src/models/operations/datasourcesgetbyid.ts
  - src/models/operations/datasourceslist.ts
  - src/models/operations/eventslist.ts
  - src/models/operations/generatesessionrecordingurls.ts
  - src/models/operations/getsessiondatabysessionid.ts
  - src/models/operations/getsessiondatabysid.ts
  - src/models/operations/getsessiontoolcallresultbyid.ts
  - src/models/operations/incidentdelete.ts
  - src/models/operations/incidentgetbyid.ts
  - src/models/operations/incidentlist.ts
  - src/models/operations/index.ts
  - src/models/operations/insightsfolderdelete.ts
  - src/models/operations/insightsfoldergetbyid.ts
  - src/models/operations/insightsfolderlist.ts
  - src/models/operations/insightsfolderupdate.ts
  - src/models/operations/insightsfolderuploadfile.ts
  - src/models/operations/insightslist.ts
  - src/models/operations/insightstooldelete.ts
  - src/models/operations/insightstoolupdate.ts
  - src/models/operations/insightsuploadlistfiles.ts
  - src/models/operations/insightsuploadmovefiles.ts
  - src/models/operations/insightsworkflowactivate.ts
  - src/models/operations/insightsworkflowdelete.ts
  - src/models/operations/insightsworkflowgetbyid.ts
  - src/models/operations/insightsworkflowinactivate.ts
  - src/models/operations/insightsworkflowlist.ts
  - src/models/operations/insightsworkflowupdate.ts
  - src/models/operations/insighttoolgetbyid.ts
  - src/models/operations/insighttoollist.ts
  - src/models/operations/languagegroupsdelete.ts
  - src/models/operations/languagegroupsgetbyid.ts
  - src/models/operations/languagegroupslist.ts
  - src/models/operations/outboundbatchadd.ts
  - src/models/operations/outboundbatchdelete.ts
  - src/models/operations/outboundbatchgetbyid.ts
  - src/models/operations/outboundbatchlist.ts
  - src/models/operations/outboundbatchremove.ts
  - src/models/operations/outboundbatchresults.ts
  - src/models/operations/outboundbatchupdate.ts
  - src/models/operations/outboundbatchupload.ts
  - src/models/operations/outboundcampaigndelete.ts
  - src/models/operations/outboundcampaigngetbyid.ts
  - src/models/operations/outboundcampaignlist.ts
  - src/models/operations/outboundcampaignupdate.ts
  - src/models/operations/postgetdashboard.ts
  - src/models/operations/postlistdashboard.ts
  - src/models/operations/promptsdelete.ts
  - src/models/operations/promptsgetbyid.ts
  - src/models/operations/promptshistory.ts
  - src/models/operations/promptslist.ts
  - src/models/operations/rolesdelete.ts
  - src/models/operations/rolesgetbyid.ts
  - src/models/operations/roleslist.ts
  - src/models/operations/servicedelete.ts
  - src/models/operations/servicelist.ts
  - src/models/operations/servicesgetbyid.ts
  - src/models/operations/sessionfullsummarygetbyid.ts
  - src/models/operations/sessiongetbyid.ts
  - src/models/operations/sessionlabelgetbyid.ts
  - src/models/operations/sessionlabelslist.ts
  - src/models/operations/sessionlatencygetbyid.ts
  - src/models/operations/sessionrecordingstream.ts
  - src/models/operations/sessionslist.ts
  - src/models/operations/sessiontranscriptgetbyid.ts
  - src/models/operations/takeoutsgetbyjobid.ts
  - src/models/operations/takeoutsgetfile.ts
  - src/models/operations/tooldelete.ts
  - src/models/operations/toolgetbyname.ts
  - src/models/operations/toollist.ts
  - src/models/operations/usersgetbyemail.ts
  - src/models/operations/userslist.ts
  - src/models/operations/userssendemail.ts
  - src/sdk/agents.ts
  - src/sdk/batches.ts
  - src/sdk/campaigns.ts
  - src/sdk/channels.ts
  - src/sdk/conversations.ts
  - src/sdk/custommessages.ts
  - src/sdk/dashboards.ts
  - src/sdk/datasources.ts
  - src/sdk/events.ts
  - src/sdk/folders.ts
  - src/sdk/fullsummary.ts
  - src/sdk/incidents.ts
  - src/sdk/index.ts
  - src/sdk/insights.ts
  - src/sdk/languagegroups.ts
  - src/sdk/latency.ts
  - src/sdk/numbers.ts
  - src/sdk/organizations.ts
  - src/sdk/outbound.ts
  - src/sdk/permissions.ts
  - src/sdk/prompts.ts
  - src/sdk/pronunciations.ts
  - src/sdk/roles.ts
  - src/sdk/sdk.ts
  - src/sdk/services.ts
  - src/sdk/sessiondebug.ts
  - src/sdk/sessionlabels.ts
  - src/sdk/sessions.ts
  - src/sdk/syllablesdktools.ts
  - src/sdk/takeouts.ts
  - src/sdk/targets.ts
  - src/sdk/test.ts
  - src/sdk/tools.ts
  - src/sdk/transcript.ts
  - src/sdk/twilio.ts
  - src/sdk/users.ts
  - src/sdk/v1.ts
  - src/sdk/workflows.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  agent_list:
    speakeasy-default-agent-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  agent_create:
    speakeasy-default-agent-create:
      requestBody:
        application/json: {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound"}
      responses:
        "200":
          application/json: {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "body"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2023-06-28T10:35:38.178Z", "last_updated_by": "user@email.com"}]}, "custom_message": null, "channel_targets": [{"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "email", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "body"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2023-06-28T10:35:38.178Z", "last_updated_by": "user@email.com"}]}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "body"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": null, "last_updated": "2023-01-04T05:51:21.314Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}], "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "body"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": null, "last_updated": "2023-01-04T05:51:21.314Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}
        "422":
          application/json: {}
  agent_update:
    speakeasy-default-agent-update:
      requestBody:
        application/json: {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1}
      responses:
        "200":
          application/json: {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "form"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-01-10T01:41:18.226Z", "last_updated_by": "user@email.com"}]}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "channel_targets": [{"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "chat", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "form"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-01-10T01:41:18.226Z", "last_updated_by": "user@email.com"}]}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "form"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-08-16T15:47:58.176Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}], "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "form"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-08-16T15:47:58.176Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}
        "422":
          application/json: {}
  agent_get_by_id:
    speakeasy-default-agent-get-by-id:
      parameters:
        path:
          agent_id: 910445
      responses:
        "200":
          application/json: {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-02-17T19:18:47.758Z", "last_updated_by": "user@email.com"}]}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "channel_targets": null, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-10-16T11:40:01.629Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}
        "422":
          application/json: {}
  agent_delete:
    speakeasy-default-agent-delete:
      parameters:
        path:
          agent_id: 78115
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  agent_get_available_voices:
    speakeasy-default-agent-get-available-voices:
      responses:
        "200":
          application/json: [{"provider": "Google", "display_name": "Callirrhoe (Vietnamese)", "var_name": "wavenet:male/cmn-CN-Chirp3-HD-Charon", "gender": "male", "model": "gpt-4o-mini-tts", "supported_languages": [{"name": "English", "code": "en-US"}], "deprecated": false}]
  send_test_message:
    speakeasy-default-send-test-message:
      requestBody:
        application/json: {"service_name": "<value>", "source": "user@email.com", "text": "Hello", "test_id": "<id>", "agent_id": "<id>", "session_start": false}
      responses:
        "200":
          application/json: {"test_id": "<id>", "agent_id": "<id>", "response": "<value>"}
        "422":
          application/json: {}
  channels_list:
    speakeasy-default-channels-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "syllable-webchat", "channel_service": "twilio", "supported_modes": "chat,voice", "is_system_channel": false, "id": 820233, "config": {"telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  channels_create:
    speakeasy-default-channels-create:
      requestBody:
        application/json: {"name": "twilio", "channel_service": "sip", "supported_modes": "chat,voice", "is_system_channel": false, "config": {"account_sid": "AC123...", "auth_token": "sometoken", "telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}
      responses:
        "200":
          application/json: {"name": "syllable-webchat", "channel_service": "twilio", "supported_modes": "chat,voice", "is_system_channel": false, "id": 354216, "config": {"telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}
        "422":
          application/json: {}
  channels_update:
    speakeasy-default-channels-update:
      requestBody:
        application/json: {"name": "twilio", "channel_service": "sip", "supported_modes": "chat,voice", "is_system_channel": false, "config": {"account_sid": "AC123...", "auth_token": "sometoken", "telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}, "id": 1}
      responses:
        "200":
          application/json: {"name": "syllable-webchat", "channel_service": "twilio", "supported_modes": "chat,voice", "is_system_channel": false, "id": 769881, "config": {"telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}
        "422":
          application/json: {}
  channel_targets_delete:
    speakeasy-default-channel-targets-delete:
      parameters:
        path:
          channel_id: "<id>"
        query:
          target_id: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  channels_twilio_get_by_id:
    speakeasy-default-channels-twilio-get-by-id:
      parameters:
        path:
          channel_id: 627671
      responses:
        "200":
          application/json: {"name": "syllable-webchat", "channel_service": "sip", "supported_modes": "chat,voice", "is_system_channel": false, "id": 730258, "config": {"telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}
        "422":
          application/json: {}
  channels_twilio_update:
    speakeasy-default-channels-twilio-update:
      requestBody:
        application/json: {"id": 1, "name": "syllable-webchat", "config": null}
      responses:
        "200":
          application/json: {"name": "syllable-webchat", "channel_service": "webchat", "supported_modes": "chat,voice", "is_system_channel": false, "id": 594946, "config": {"telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}
        "422":
          application/json: {}
  channels_twilio_create:
    speakeasy-default-channels-twilio-create:
      requestBody:
        application/json: {"name": "syllable-webchat", "config": {"account_sid": "AC123...", "auth_token": "sometoken"}}
      responses:
        "200":
          application/json: {"name": "syllable-webchat", "channel_service": "twilio", "supported_modes": "chat,voice", "is_system_channel": false, "id": 402205, "config": {"telephony": {"pre_input_timeout": 1.2, "overall_input_timeout": 20, "interruptibility": "dtmf_only", "passive_speech_input_enabled": true, "passive_input_start": 0.5}}}
        "422":
          application/json: {}
  channels_twilio_numbers_add:
    speakeasy-default-channels-twilio-numbers-add:
      parameters:
        path:
          channel_id: 314558
      requestBody:
        application/json: {"friendly_name": "Support Line", "area_code": "804"}
      responses:
        "200":
          application/json: {"phone_number": "+18042221111"}
        "422":
          application/json: {}
  channels_twilio_numbers_update:
    speakeasy-default-channels-twilio-numbers-update:
      parameters:
        path:
          channel_id: 815949
      requestBody:
        application/json: {"friendly_name": "Support Line", "phone_sid": "PN123"}
      responses:
        "200":
          application/json: {"phone_number": "+18042221111"}
        "422":
          application/json: {}
  channels_twilio_numbers_list:
    speakeasy-default-channels-twilio-numbers-list:
      parameters:
        path:
          channel_id: 739627
      responses:
        "200":
          application/json: {"phone_numbers": [{"sid": "PN123", "phone_number": "+19876543210", "friendly_name": "Test number", "trunk_sid": "TK123"}]}
        "422":
          application/json: {}
  available_targets:
    speakeasy-default-available-targets:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["target"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  channel_targets_list:
    speakeasy-default-channel-targets-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["agent_id"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "voice", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-07-12T17:11:31.419Z", "last_updated_by": "user@email.com"}]}, "custom_message": null, "channel_targets": [{"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "chat", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-07-12T17:11:31.419Z", "last_updated_by": "user@email.com"}]}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-02-25T06:24:16.473Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}], "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-02-25T06:24:16.473Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  channel_targets_create:
    speakeasy-default-channel-targets-create:
      parameters:
        path:
          channel_id: 824809
      requestBody:
        application/json: {"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "email", "fallback_target": "+19995551235", "is_test": true}
      responses:
        "200":
          application/json: {"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "voice", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": null}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "channel_targets": [{"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "sms", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": null}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "channel_targets": null, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": null, "defaults": null, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-07-25T13:44:12.237Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}], "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": null, "defaults": null, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-07-25T13:44:12.237Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}
        "422":
          application/json: {}
  channel_targets_get_by_id:
    speakeasy-default-channel-targets-get-by-id:
      parameters:
        path:
          channel_id: 184507
          target_id: 235358
      responses:
        "200":
          application/json: {"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "sms", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": null, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "channel_targets": null, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "query"}, "defaults": {}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-01-05T22:46:13.457Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}
        "422":
          application/json: {}
  channel_targets_update:
    speakeasy-default-channel-targets-update:
      parameters:
        path:
          channel_id: 508167
          target_id: 880236
      requestBody:
        application/json: {"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "email", "fallback_target": "+19995551235", "is_test": true, "id": 1}
      responses:
        "200":
          application/json: {"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "sms", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": null}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "channel_targets": [{"agent_id": 1, "channel_id": 1, "target": "+19995551234", "target_mode": "chat", "fallback_target": "+19995551235", "is_test": true, "id": 1, "channel_name": "+19995551234", "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "agent": {"name": "Weather agent", "description": "Agent for answering questions about weather.", "labels": ["Information", "Weather"], "type": "ca_v1", "prompt_id": 1, "custom_message_id": 1, "language_group_id": 1, "timezone": "America/New_York", "prompt_tool_defaults": [{"tool_name": "get_weather", "default_values": [{"field_name": "temperature_unit", "default_value": "fahrenheit"}]}], "variables": {"vars.location_name": "Main Street Pizza"}, "tool_headers": {"some-header": "some-value"}, "agent_initiated": false, "stt_provider": "Google STT V2 (Chirp 2)", "wait_sound": "No Sound", "id": 1, "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@email.com", "prompt": {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": null}, "custom_message": {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}, "tools": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "query"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2023-02-12T01:53:54.613Z", "last_updated_by": "user@email.com"}], "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}], "tools": null, "language_group": {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}}}
        "422":
          application/json: {}
  conversations_list:
    speakeasy-default-conversations-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["agent_name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  data_sources_list:
    speakeasy-default-data-sources-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "Rain", "description": "Information about rain.", "labels": ["Weather Info"], "chunk": false, "chunk_delimiter": "", "id": 1, "edit_comments": "Added new info", "updated_at": "2025-11-16T05:33:40.955Z", "last_updated_by": "user@email.com"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  data_sources_create:
    speakeasy-default-data-sources-create:
      requestBody:
        application/json: {"name": "Rain", "description": "Information about rain.", "labels": ["Weather Info"], "chunk": false, "chunk_delimiter": "", "text": "The following are names and addresses of pizza shops.\n\nCool Pizza, 123 Main St.\n\nReally Good Pizza, 456 Water St.\n\nThe Best Pizza, 789 Circle Dr."}
      responses:
        "200":
          application/json: {"name": "Rain", "description": "Information about rain.", "labels": ["Weather Info"], "chunk": false, "chunk_delimiter": "", "id": 1, "edit_comments": "Added new info", "updated_at": "2024-12-22T07:07:27.798Z", "last_updated_by": "user@email.com", "text": "<value>"}
        "422":
          application/json: {}
  data_sources_update:
    speakeasy-default-data-sources-update:
      requestBody:
        application/json: {"name": "Rain", "description": "Information about rain.", "labels": ["Weather Info"], "chunk": false, "chunk_delimiter": "", "id": 1, "edit_comments": "Added new info", "text": "The following are names and addresses of pizza shops.\n\nCool Pizza, 123 Main St.\n\nReally Good Pizza, 456 Water St.\n\nThe Best Pizza, 789 Circle Dr."}
      responses:
        "200":
          application/json: {"name": "Rain", "description": "Information about rain.", "labels": ["Weather Info"], "chunk": false, "chunk_delimiter": "", "id": 1, "edit_comments": "Added new info", "updated_at": "2023-03-07T19:05:58.255Z", "last_updated_by": "user@email.com", "text": "<value>"}
        "422":
          application/json: {}
  data_sources_get_by_id:
    speakeasy-default-data-sources-get-by-id:
      parameters:
        path:
          data_source_id: 87219
      responses:
        "200":
          application/json: {"name": "Rain", "description": "Information about rain.", "labels": ["Weather Info"], "chunk": false, "chunk_delimiter": "", "id": 1, "edit_comments": "Added new info", "updated_at": "2024-09-02T06:11:53.026Z", "last_updated_by": "user@email.com", "text": "<value>"}
        "422":
          application/json: {}
  data_sources_delete:
    speakeasy-default-data-sources-delete:
      parameters:
        path:
          data_source_id: 509584
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  events_list:
    speakeasy-default-events-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["description"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"timestamp": "2023-03-14T07:33:32.146Z", "source": "tool-call", "category": "automation", "type": "phone-transfer", "user_id": "+18042221111", "description": "Transfer to phone number +18042221111"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  incident_list:
    speakeasy-default-incident-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["updated_at"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  incident_create:
    speakeasy-default-incident-create:
      requestBody:
        application/json: {"description": "Service outage in region X", "start_datetime": "2023-10-01T08:00:00Z", "resolution_datetime": "2023-10-01T12:00:00Z", "impact_category": "High", "sessions_impacted": 1500, "markdown": "**Incident Details**", "organization_id": 123, "sub_organization_id": 456, "sub_organization": "SubOrg A"}
      responses:
        "200":
          application/json: {"description": "Service outage in region X", "start_datetime": "2023-10-01T08:00:00Z", "resolution_datetime": "2023-10-01T12:00:00Z", "impact_category": "High", "sessions_impacted": 1500, "markdown": "**Incident Details**", "organization_id": 123, "sub_organization_id": 456, "sub_organization": "SubOrg A", "id": 1, "created_at": "2023-10-01T08:00:00Z", "updated_at": "2023-10-01T08:00:00Z", "last_updated_by": "user@mail.com"}
        "422":
          application/json: {}
  incident_update:
    speakeasy-default-incident-update:
      requestBody:
        application/json: {"description": "Service outage in region X", "start_datetime": "2023-10-01T08:00:00Z", "resolution_datetime": "2023-10-01T12:00:00Z", "impact_category": "High", "sessions_impacted": 1500, "markdown": "**Incident Details**", "organization_id": 123, "sub_organization_id": 456, "sub_organization": "SubOrg A", "id": 1, "created_at": "2023-10-01T08:00:00Z", "updated_at": "2023-10-01T08:00:00Z"}
      responses:
        "200":
          application/json: {"description": "Service outage in region X", "start_datetime": "2023-10-01T08:00:00Z", "resolution_datetime": "2023-10-01T12:00:00Z", "impact_category": "High", "sessions_impacted": 1500, "markdown": "**Incident Details**", "organization_id": 123, "sub_organization_id": 456, "sub_organization": "SubOrg A", "id": 1, "created_at": "2023-10-01T08:00:00Z", "updated_at": "2023-10-01T08:00:00Z", "last_updated_by": "user@mail.com"}
        "422":
          application/json: {}
  incident_get_organizations:
    speakeasy-default-incident-get-organizations:
      responses:
        "200":
          application/json: [{"id": 463280, "name": "<value>", "display_name": "Bethany_Swift22"}]
  incident_get_by_id:
    speakeasy-default-incident-get-by-id:
      parameters:
        path:
          incident_id: 835824
      responses:
        "200":
          application/json: {"description": "Service outage in region X", "start_datetime": "2023-10-01T08:00:00Z", "resolution_datetime": "2023-10-01T12:00:00Z", "impact_category": "High", "sessions_impacted": 1500, "markdown": "**Incident Details**", "organization_id": 123, "sub_organization_id": 456, "sub_organization": "SubOrg A", "id": 1, "created_at": "2023-10-01T08:00:00Z", "updated_at": "2023-10-01T08:00:00Z", "last_updated_by": "user@mail.com"}
        "422":
          application/json: {}
  incident_delete:
    speakeasy-default-incident-delete:
      parameters:
        path:
          incident_id: 400877
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  insights_list:
    speakeasy-default-insights-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["upload_file_id"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"id": 1, "session_id": 12341, "upload_file_id": 12535, "insight_tool_id": 34531, "insight_tool_version": 1, "insight_key": "summary", "string_value": "This is a summary of the call", "numeric_value": 1, "json_value": {"content": " was there anything else that I can assist you with other than this", "role": "assistant", "start_time": 289}, "created_at": "2025-09-28T00:00:00Z", "updated_at": "2025-09-29T00:00:00Z"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  insights_folder_list:
    speakeasy-default-insights-folder-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "customer-complaints", "label": "support", "description": "Call recordings related to customer complaints", "id": 182764, "created_at": "2025-09-28T00:00:00Z", "updated_at": "2025-09-29T00:00:00Z", "last_updated_by": "user@email.com"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  insights_folder_create:
    speakeasy-default-insights-folder-create:
      requestBody:
        application/json: {"name": "customer-complaints", "label": "support", "description": "Call recordings related to customer complaints"}
      responses:
        "200":
          application/json: {"name": "customer-complaints", "label": "support", "description": "Call recordings related to customer complaints", "id": 182764, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_folder_get_by_id:
    speakeasy-default-insights-folder-get-by-id:
      parameters:
        path:
          folder_id: 982079
      responses:
        "200":
          application/json: {"name": "customer-complaints", "label": "support", "description": "Call recordings related to customer complaints", "id": 182764, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com", "folder_stats": {"count": 10, "total_duration": "10:00:00", "total_size": "213MB"}}
        "422":
          application/json: {}
  insights_folder_delete:
    speakeasy-default-insights-folder-delete:
      parameters:
        path:
          folder_id: 410792
      responses:
        "200":
          application/json: false
        "422":
          application/json: {}
  insights_folder_update:
    speakeasy-default-insights-folder-update:
      parameters:
        path:
          folder_id: 567518
      requestBody:
        application/json: {"name": "customer-complaints", "label": "support", "description": "Call recordings related to customer complaints"}
      responses:
        "200":
          application/json: {"name": "customer-complaints", "label": "support", "description": "Call recordings related to customer complaints", "id": 182764, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_folder_upload_file:
    speakeasy-default-insights-folder-upload-file:
      parameters:
        path:
          folder_id: 444923
        query:
          call_id: "<id>"
      responses:
        "200":
          application/json: {"id": 182764, "folder_id": 182764, "filename": "customer-complaints.wav", "object_key": "UPLOAD_CALL_ID/recording/2025/04/22/15/00/ce7d212e-80b0-4f0b-9e01-74322f146611.mp3", "call_id": "12345", "agent_number": "1234567890", "customer_number": "0987654321", "duration": 305.5, "start_time": "2025-10-08T00:00:00Z", "end_time": "2025-10-09T00:00:00Z", "error_message": "File not found", "metadata": {"duration": "00:10:00", "size": "10MB"}, "created_at": "2025-10-08T00:00:00Z"}
        "422":
          application/json: {}
  insights_upload_list_files:
    speakeasy-default-insights-upload-list-files:
      parameters:
        path:
          folder_id: 55293
        query:
          page: 0
          limit: 25
          search_fields: ["customer_number"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"id": 182764, "folder_id": 182764, "filename": "customer-complaints.wav", "object_key": "UPLOAD_CALL_ID/recording/2025/04/22/15/00/ce7d212e-80b0-4f0b-9e01-74322f146611.mp3", "call_id": "12345", "agent_number": "1234567890", "customer_number": "0987654321", "duration": 305.5, "start_time": "2025-09-28T00:00:00Z", "end_time": "2025-09-29T00:00:00Z", "error_message": "File not found", "metadata": {"duration": "00:10:00", "size": "10MB"}, "created_at": "2025-09-28T00:00:00Z"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  insights_upload_move_files:
    speakeasy-default-insights-upload-move-files:
      parameters:
        path:
          folder_id: 815114
      requestBody:
        application/json: {"destination_folder_id": 182764, "file_id_list": [12334, 23445, 34556]}
      responses:
        "200":
          application/json: [{"id": 182764, "folder_id": 182764, "filename": "customer-complaints.wav", "object_key": "UPLOAD_CALL_ID/recording/2025/04/22/15/00/ce7d212e-80b0-4f0b-9e01-74322f146611.mp3", "call_id": "12345", "agent_number": "1234567890", "customer_number": "0987654321", "duration": 305.5, "start_time": "2025-09-28T00:00:00Z", "end_time": "2025-09-29T00:00:00Z", "error_message": "File not found", "metadata": {"duration": "00:10:00", "size": "10MB"}, "created_at": "2025-09-28T00:00:00Z"}]
        "422":
          application/json: {}
  insights_workflow_list:
    speakeasy-default-insights-workflow-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  insights_workflow_create:
    speakeasy-default-insights-workflow-create:
      requestBody:
        application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z"}
      responses:
        "200":
          application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z", "id": 1, "insight_tools": [], "status": "ACTIVE", "estimate": {"backfill_count": 100, "backfill_duration": 1000, "estimated_daily_count": 10, "estimated_daily_duration": 3674.11, "estimated_daily_cost": 45.25, "estimated_backfill_cost": 4561}, "queue_count": 10, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_workflow_get_by_id:
    speakeasy-default-insights-workflow-get-by-id:
      parameters:
        path:
          workflow_id: 788857
      responses:
        "200":
          application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z", "id": 1, "insight_tools": [], "status": "ACTIVE", "estimate": {"backfill_count": 100, "backfill_duration": 1000, "estimated_daily_count": 10, "estimated_daily_duration": 3674.11, "estimated_daily_cost": 45.25, "estimated_backfill_cost": 4561}, "queue_count": 10, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_workflow_update:
    speakeasy-default-insights-workflow-update:
      parameters:
        path:
          workflow_id: 673493
      requestBody:
        application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z"}
      responses:
        "200":
          application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z", "id": 1, "insight_tools": [{"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1, "id": 1, "insight_tool_definition": {"id": 1, "name": "llm_tool", "type": "<value>", "description": "An LLM tool evaluates a transcript with a given prompt", "tool_parameters": {"prompt": "string"}, "tool_result_set": {"summary": "string"}}, "created_at": "2025-09-28T00:00:00Z", "updated_at": "2025-09-29T00:00:00Z", "last_updated_by": "user@email.com"}], "status": "ACTIVE", "estimate": {"backfill_count": 100, "backfill_duration": 1000, "estimated_daily_count": 10, "estimated_daily_duration": 3674.11, "estimated_daily_cost": 45.25, "estimated_backfill_cost": 4561}, "queue_count": 10, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_workflow_delete:
    speakeasy-default-insights-workflow-delete:
      parameters:
        path:
          workflow_id: 609419
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  insights_workflow_inactivate:
    speakeasy-default-insights-workflow-inactivate:
      parameters:
        path:
          workflow_id: 248768
      responses:
        "200":
          application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z", "id": 1, "insight_tools": [], "status": "ACTIVE", "estimate": {"backfill_count": 100, "backfill_duration": 1000, "estimated_daily_count": 10, "estimated_daily_duration": 3674.11, "estimated_daily_cost": 45.25, "estimated_backfill_cost": 4561}, "queue_count": 10, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_workflow_activate:
    speakeasy-default-insights-workflow-activate:
      parameters:
        path:
          workflow_id: 303095
      requestBody:
        application/json: {"is_acknowledged": true, "estimate": {"backfill_count": 100, "backfill_duration": 1000, "estimated_daily_count": 10, "estimated_daily_duration": 3674.11, "estimated_daily_cost": 45.25, "estimated_backfill_cost": 4561}}
      responses:
        "200":
          application/json: {"name": "summary-workflow", "source": "agent", "description": "Default workflow - generates a summary of the call", "insight_tool_ids": [1], "conditions": {"min_duration": 120, "max_duration": 600, "sample_rate": 0.1, "agent_list": [866324, 826325], "prompt_list": ["123324"], "folder_list": [16754, 67535], "sheet_info": {"sheet_id": "1AGOCYz05AZYYOMzow2EYlgdDXSXaWIhyA3-zCxBm4go", "sheet_name": "Q1 Sales Data"}}, "start_datetime": "2025-10-08T00:00:00Z", "end_datetime": "2025-10-09T00:00:00Z", "id": 1, "insight_tools": [], "status": "ACTIVE", "estimate": {"backfill_count": 100, "backfill_duration": 1000, "estimated_daily_count": 10, "estimated_daily_duration": 3674.11, "estimated_daily_cost": 45.25, "estimated_backfill_cost": 4561}, "queue_count": 10, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_workflow_queue_work:
    speakeasy-default-insights-workflow-queue-work:
      requestBody:
        application/json: {"workflow_name": "summary-workflow", "session_id_list": [12334, 23445, 34556], "file_id_list": [1234, 1678, 2224]}
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  insight_tool_list:
    speakeasy-default-insight-tool-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1, "id": 1, "insight_tool_definition": {"id": 1, "name": "llm_tool", "type": "<value>", "description": "An LLM tool evaluates a transcript with a given prompt", "tool_parameters": {"prompt": "string"}, "tool_result_set": {"summary": "string"}}, "created_at": "2025-09-28T00:00:00Z", "updated_at": "2025-09-29T00:00:00Z", "last_updated_by": "user@email.com"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  insights_tool_create:
    speakeasy-default-insights-tool-create:
      requestBody:
        application/json: {"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1}
      responses:
        "200":
          application/json: {"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1, "id": 1, "insight_tool_definition": {"id": 1, "name": "llm_tool", "type": "<value>", "description": "An LLM tool evaluates a transcript with a given prompt", "tool_parameters": {"prompt": "string"}, "tool_result_set": {"summary": "string"}}, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insight_tool_get_by_id:
    speakeasy-default-insight-tool-get-by-id:
      parameters:
        path:
          tool_id: "<id>"
      responses:
        "200":
          application/json: {"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1, "id": 1, "insight_tool_definition": {"id": 1, "name": "llm_tool", "type": "<value>", "description": "An LLM tool evaluates a transcript with a given prompt", "tool_parameters": {"prompt": "string"}, "tool_result_set": {"summary": "string"}}, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_tool_delete:
    speakeasy-default-insights-tool-delete:
      parameters:
        path:
          tool_id: 770449
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  insights_tool_update:
    speakeasy-default-insights-tool-update:
      parameters:
        path:
          tool_id: 368362
      requestBody:
        application/json: {"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1}
      responses:
        "200":
          application/json: {"name": "summary-tool", "description": "This tool uses GPT4.1 to generate a summary of the call", "version": 1, "tool_arguments": {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}, "insight_tool_definition_id": 1, "id": 1, "insight_tool_definition": null, "created_at": "2025-10-08T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  insights_tool_test:
    speakeasy-default-insights-tool-test:
      requestBody:
        application/json: {"tool_name": "summary-tool", "session_id": 283467, "upload_file_id": 283467}
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  insight_tool_get_definitions:
    speakeasy-default-insight-tool-get-definitions:
      responses:
        "200":
          application/json: [{"id": 1, "name": "llm_tool", "type": "<value>", "description": "An LLM tool evaluates a transcript with a given prompt", "tool_parameters": {"prompt": "string"}, "tool_result_set": {"summary": "string"}}]
  custom_messages_list:
    speakeasy-default-custom-messages-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  custom_messages_create:
    speakeasy-default-custom-messages-create:
      requestBody:
        application/json: {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "type": "greeting"}
      responses:
        "200":
          application/json: {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}
        "422":
          application/json: {}
  custom_messages_update:
    speakeasy-default-custom-messages-update:
      requestBody:
        application/json: {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "type": "greeting"}
      responses:
        "200":
          application/json: {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}
        "422":
          application/json: {}
  custom_message_get_by_id:
    speakeasy-default-custom-message-get-by-id:
      parameters:
        path:
          custom_message_id: 909433
      responses:
        "200":
          application/json: {"name": "Customer service greeting", "text": "Hello and thank you for calling customer service. How can I help you today?", "label": "Customer service", "rules": [{"description": "Closed on New Year's Day", "time_range_start": "09:00", "time_range_end": "17:00", "date": "2025-01-01", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today."}, {"description": "Closed on weekends", "time_range_start": "09:00", "time_range_end": "17:00", "days_of_week": ["sa", "su"], "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends."}], "id": 1, "updated_at": "2024-01-01T00:00:00Z", "agent_count": 1, "last_updated_by": "user@email.com", "type": "greeting"}
        "422":
          application/json: {}
  custom_messages_delete:
    speakeasy-default-custom-messages-delete:
      parameters:
        path:
          custom_message_id: 729986
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  permissions_list:
    speakeasy-default-permissions-list:
      responses:
        "200":
          application/json: [{"name": "Agents", "description": "View agents, create and edit agent configurations, and delete agents.", "permissions": [{"name": "agents_read", "display_name": "View", "description": "Fetch agent information"}]}]
  prompts_list:
    speakeasy-default-prompts-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  prompts_create:
    speakeasy-default-prompts-create:
      requestBody:
        application/json: {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "tools": [], "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "include_default_tools": true}
      responses:
        "200":
          application/json: {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": null, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-04-18T08:34:25.832Z", "last_updated_by": "user@email.com"}]}
        "422":
          application/json: {}
  prompts_update:
    speakeasy-default-prompts-update:
      requestBody:
        application/json: {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "tools": [], "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "include_default_tools": true}
      responses:
        "200":
          application/json: {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "body"}, "defaults": {}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2023-06-28T21:01:20.288Z", "last_updated_by": "user@email.com"}]}
        "422":
          application/json: {}
  prompts_get_by_id:
    speakeasy-default-prompts-get-by-id:
      parameters:
        path:
          prompt_id: 417330
      responses:
        "200":
          application/json: {"name": "Weather Agent Prompt", "description": "Prompt for a weather agent.", "type": "prompt_v1", "context": "You are a weather agent. Answer the user's questions about weather and nothing else.", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "session_end_enabled": false, "id": 1, "edit_comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "agent_count": 5, "version_number": 1, "tools_full": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "body"}, "defaults": {"key": {"transform": {"action": "default", "when": {"key": "key", "value": "value", "operator": "eq"}}}}, "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-11-10T23:18:18.191Z", "last_updated_by": "user@email.com"}]}
        "422":
          application/json: {}
  prompts_delete:
    speakeasy-default-prompts-delete:
      parameters:
        path:
          prompt_id: 982839
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  prompts_history:
    speakeasy-default-prompts-history:
      parameters:
        path:
          prompt_id: 922849
      responses:
        "200":
          application/json: [{"timestamp": "2024-01-01T12:00:00Z", "prompt_id": "1", "version_number": 1, "prompt_text": "You are a weather agent. Answer the user's questions about weather and nothing else.", "prompt_description": "Prompt for a weather agent.", "prompt_name": "Weather Agent Prompt", "llm_config": {"model": "gpt-4o", "version": "2024-05-13", "api_version": "2024-06-01", "temperature": 1, "seed": 123}, "comments": "Updated prompt text to include requirement to not answer questions that aren't about weather.", "user_email": "user@email.com", "linked_tools": [{"tool_id": 1, "current_tool_name": "hangup", "out_of_date": false, "deleted": false}], "is_pre_enhancements": true}]
        "422":
          application/json: {}
  prompt_get_supported_llms:
    speakeasy-default-prompt-get-supported-llms:
      responses:
        "200":
          application/json: [{"model": "gpt-4o", "display_name": "GPT-4o", "version": "2024-05-13", "api_version": "2024-06-01", "deprecated": false}]
  roles_list:
    speakeasy-default-roles-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  roles_create:
    speakeasy-default-roles-create:
      requestBody:
        application/json: {"name": "Prompt Engineer", "description": "Role for users who can fetch and change prompts", "permissions": ["prompts_read", "prompts_write", "prompts_delete"]}
      responses:
        "200":
          application/json: {"name": "Prompt Engineer", "description": "Role for users who can fetch and change prompts", "permissions": ["prompts_read", "prompts_write", "prompts_delete"], "id": 1, "last_updated_comments": "Updated to add delete permission", "is_system_role": false, "last_updated": "2024-10-26T05:36:43.695Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  roles_update:
    speakeasy-default-roles-update:
      requestBody:
        application/json: {"name": "Prompt Engineer", "description": "Role for users who can fetch and change prompts", "permissions": ["prompts_read", "prompts_write", "prompts_delete"], "id": 1, "last_updated_comments": "Updated to add delete permission"}
      responses:
        "200":
          application/json: {"name": "Prompt Engineer", "description": "Role for users who can fetch and change prompts", "permissions": ["prompts_read", "prompts_write", "prompts_delete"], "id": 1, "last_updated_comments": "Updated to add delete permission", "is_system_role": false, "last_updated": "2024-03-18T03:22:34.251Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  roles_get_by_id:
    speakeasy-default-roles-get-by-id:
      parameters:
        path:
          role_id: 324660
      responses:
        "200":
          application/json: {"name": "Prompt Engineer", "description": "Role for users who can fetch and change prompts", "permissions": ["prompts_read", "prompts_write", "prompts_delete"], "id": 1, "last_updated_comments": "Updated to add delete permission", "is_system_role": false, "last_updated": "2024-11-12T10:57:00.366Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  roles_delete:
    speakeasy-default-roles-delete:
      parameters:
        path:
          role_id: 458987
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  service_list:
    speakeasy-default-service-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  service_create:
    speakeasy-default-service-create:
      requestBody:
        application/json: {"name": "Weather tools", "description": "Service containing tools for fetching weather information", "auth_type": "basic", "auth_values": {"password": "my-password", "username": "my-username"}}
      responses:
        "200":
          application/json: {"id": 1, "name": "Weather tools", "description": "Service containing tools for fetching weather information", "auth_type": "basic", "auth_value_keys": ["username", "password"], "last_updated_comments": "Updated description to correct typo", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "tools": ["hangup", "summary"]}
        "422":
          application/json: {}
  service_update:
    speakeasy-default-service-update:
      requestBody:
        application/json: {"name": "Weather tools", "description": "Service containing tools for fetching weather information", "auth_type": "basic", "auth_values": {"password": "my-password", "username": "my-username"}, "id": 1, "last_updated_comments": "Updated description to correct typo"}
      responses:
        "200":
          application/json: {"id": 1, "name": "Weather tools", "description": "Service containing tools for fetching weather information", "auth_type": "basic", "auth_value_keys": ["username", "password"], "last_updated_comments": "Updated description to correct typo", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "tools": ["hangup", "summary"]}
        "422":
          application/json: {}
  services_get_by_id:
    speakeasy-default-services-get-by-id:
      parameters:
        path:
          service_id: 902529
      responses:
        "200":
          application/json: {"id": 1, "name": "Weather tools", "description": "Service containing tools for fetching weather information", "auth_type": "basic", "auth_value_keys": ["username", "password"], "last_updated_comments": "Updated description to correct typo", "last_updated": "2024-01-01T12:00:00Z", "last_updated_by": "user@email.com", "tools": ["hangup", "summary"]}
        "422":
          application/json: {}
  service_delete:
    speakeasy-default-service-delete:
      parameters:
        path:
          service_id: 754999
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  session_label_get_by_id:
    speakeasy-default-session-label-get-by-id:
      parameters:
        path:
          session_label_id: 491550
      responses:
        "200":
          application/json: {"session_id": 1, "type": "auto-rating", "code": "GOOD", "user_email": "user@email.com", "issue_categories": ["Silent treatment"], "id": 1, "timestamp": "2024-01-01T12:00:00Z"}
        "422":
          application/json: {}
  session_label_create:
    speakeasy-default-session-label-create:
      requestBody:
        application/json: {"session_id": 1, "type": "auto-rating", "code": "GOOD", "user_email": "user@email.com", "issue_categories": ["Silent treatment"]}
      responses:
        "200":
          application/json: {"session_id": 1, "type": "auto-rating", "code": "GOOD", "user_email": "user@email.com", "issue_categories": ["Silent treatment"], "id": 1, "timestamp": "2024-01-01T12:00:00Z"}
        "422":
          application/json: {}
  session_labels_list:
    speakeasy-default-session-labels-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["code"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  sessions_list:
    speakeasy-default-sessions-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["conversation_id"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  session_get_by_id:
    speakeasy-default-session-get-by-id:
      parameters:
        path:
          session_id: "<id>"
      responses:
        "200":
          application/json: {"timestamp": "2024-02-29T07:05:06.902Z", "channel_manager_service": "hedy", "channel_manager_type": "voice_sip_v1", "source": "+18042221111"}
        "422":
          application/json: {}
  generate_session_recording_urls:
    speakeasy-default-generate-session-recording-urls:
      parameters:
        path:
          session_id: "<id>"
      responses:
        "200":
          application/json: {"session_id": "1", "recordings": ["https://example.com/recording1.mp3", "https://example.com/recording2.mp3"]}
        "422":
          application/json: {}
  session_recording_stream:
    speakeasy-default-session-recording-stream:
      parameters:
        query:
          token: "<value>"
      responses:
        "200":
          application/octet-stream: "x-file: example.file"
        "422":
          application/json: {}
  session_transcript_get_by_id:
    speakeasy-default-session-transcript-get-by-id:
      parameters:
        path:
          session_id: "<id>"
      responses:
        "200":
          application/json: {"session_id": "<id>", "transcription": [], "actions": []}
        "422":
          application/json: {}
  session_full_summary_get_by_id:
    speakeasy-default-session-full-summary-get-by-id:
      parameters:
        path:
          session_id: "<id>"
      responses:
        "200":
          application/json: {"summary": "The customer service agent successfully assisted the caller with their inquiry and the call ended positively.", "rating": "Good"}
        "422":
          application/json: {}
  session_latency_get_by_id:
    speakeasy-default-session-latency-get-by-id:
      parameters:
        path:
          session_id: "<id>"
      responses:
        "200":
          application/json: {"session_id": "<id>", "timeline": []}
        "422":
          application/json: {}
  get_session_data_by_sid:
    speakeasy-default-get-session-data-by-sid:
      parameters:
        path:
          channel_manager_service: "<value>"
          channel_manager_sid: "<id>"
      responses:
        "200":
          application/json: {"session_id": 123, "source": "+1234567890", "target": "+1239876543", "is_test": false, "messages": [{"role": "agent", "dialog": {"text": "Tell me about Syllable.ai!"}, "tool_calls": [{"tool_call_id": "call_arbitrary_id", "tool_name": "general_information_web", "tool_arguments": {"question": "Tell me about Syllable.ai!"}, "tool_result": {"answer": "Syllable is a platform for building and managing AI voice agents..."}, "timestamp": "2024-06-19T00:00:00"}], "timestamp": "2024-06-19T00:00:00"}]}
        "422":
          application/json: {}
  get_session_data_by_session_id:
    speakeasy-default-get-session-data-by-session-id:
      parameters:
        path:
          session_id: 303182
      responses:
        "200":
          application/json: {"session_id": 123, "source": "+1234567890", "target": "+1239876543", "is_test": false, "messages": [{"role": "user", "dialog": {"text": "Tell me about Syllable.ai!"}, "tool_calls": [{"tool_call_id": "call_arbitrary_id", "tool_name": "general_information_web", "tool_arguments": {"question": "Tell me about Syllable.ai!"}, "tool_result": {"answer": "Syllable is a platform for building and managing AI voice agents..."}, "timestamp": "2024-06-19T00:00:00"}], "timestamp": "2024-06-19T00:00:00"}]}
        "422":
          application/json: {}
  get_session_tool_call_result_by_id:
    speakeasy-default-get-session-tool-call-result-by-id:
      parameters:
        path:
          session_id: 832133
          tool_call_id: "<id>"
      responses:
        "200":
          application/json: {"tool_name": "general_information_web", "tool_result": {"answer": "Syllable is a platform for building and managing AI voice agents..."}}
        "422":
          application/json: {}
  tool_list:
    speakeasy-default-tool-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "form"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2023-04-02T07:09:31.403Z", "last_updated_by": "user@email.com"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  tool_create:
    speakeasy-default-tool-create:
      requestBody:
        application/json: {"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "path"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1}
      responses:
        "200":
          application/json: {"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "post", "argument_location": "path"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2023-07-24T22:27:15.127Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  tool_update:
    speakeasy-default-tool-update:
      requestBody:
        application/json: {"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "form"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint"}
      responses:
        "200":
          application/json: {"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "form"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2024-10-16T23:24:07.890Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  tool_get_by_name:
    speakeasy-default-tool-get-by-name:
      parameters:
        path:
          tool_name: "<value>"
      responses:
        "200":
          application/json: {"name": "Weather Fetcher", "definition": {"type": "endpoint", "tool": {"type": "function", "function": {"name": "get_weather", "description": "Get the weather for a city", "parameters": {}}}, "endpoint": {"url": "https://api.example.com", "method": "get", "argument_location": "path"}, "defaults": "<value>", "static_parameters": [{"name": "temperature_unit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "required": false, "type": "string", "default": "fahrenheit"}]}, "service_id": 1, "id": 1, "last_updated_comments": "Updated to use new API endpoint", "prompts_info": [{"id": 1, "name": "Test Prompt"}], "agents_info": [{"id": 1, "name": "Test Agent"}], "last_updated": "2025-10-18T21:49:44.663Z", "last_updated_by": "user@email.com", "fields": []}
        "422":
          application/json: {}
  tool_delete:
    speakeasy-default-tool-delete:
      parameters:
        path:
          tool_name: "<value>"
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  post_list_dashboard:
    speakeasy-default-post-list-dashboard:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "session_summary", "display_name": "Session Summary", "rank": 0, "label": "dashboard"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  post_get_dashboard:
    speakeasy-default-post-get-dashboard:
      parameters:
        query:
          dashboard_name: "<value>"
      responses:
        "200":
          application/json: {"embedded_id": "976ef486-d1ea-49c7-ba81-18e955d80286", "guest_token": "some-guest-token", "name": "session_summary", "display_name": "Session Summary", "superset_url": "https://somesuperseturl.com", "rank": 0, "label": "dashboard"}
        "422":
          application/json: {}
  post_session_events_dashboard:
    speakeasy-default-post-session-events-dashboard:
      responses:
        "200":
          application/json: {"embedded_id": "<id>", "guest_token": "<value>", "name": "<value>", "superset_url": "https://bossy-forager.name"}
  post_session_summary_dashboard:
    speakeasy-default-post-session-summary-dashboard:
      responses:
        "200":
          application/json: {"embedded_id": "<id>", "guest_token": "<value>", "name": "<value>", "superset_url": "https://tidy-hammock.com/"}
  post_session_transfers_dashboard:
    speakeasy-default-post-session-transfers-dashboard:
      responses:
        "200":
          application/json: {"embedded_id": "<id>", "guest_token": "<value>", "name": "<value>", "superset_url": "https://other-icebreaker.biz/"}
  post_sessions_dashboard:
    speakeasy-default-post-sessions-dashboard:
      responses:
        "200":
          application/json: {"embedded_id": "<id>", "guest_token": "<value>", "name": "<value>", "superset_url": "https://warped-meal.biz"}
  organizations_get:
    speakeasy-default-organizations-get:
      responses:
        "200":
          application/json: {"display_name": "My Great Org", "description": "An organization that does great things with agentic AI.", "domains": "mygreatorg.com,myothergreatorg.org", "saml_provider_id": "saml.syllablesso", "id": 1, "last_updated_comments": "Updated to add an additional domain", "slug": "my-great-org", "last_updated": "2025-07-17T21:31:09.914Z", "logo_url": "https://image.png"}
  organizations_update:
    speakeasy-default-organizations-update:
      requestBody:
        multipart/form-data: {"display_name": "My Great Org", "description": "An organization that does great things with agentic AI", "domains": "mygreatorg.com,mygreatorg.org", "saml_provider_id": "saml.syllablesso", "update_comments": "Updated the organization to add a new domain"}
      responses:
        "200":
          application/json: {"display_name": "My Great Org", "description": "An organization that does great things with agentic AI.", "domains": "mygreatorg.com,myothergreatorg.org", "saml_provider_id": "saml.syllablesso", "id": 1, "last_updated_comments": "Updated to add an additional domain", "slug": "my-great-org", "last_updated": "2024-05-09T13:26:35.066Z", "logo_url": "https://image.png"}
        "422":
          application/json: {}
  organizations_create:
    speakeasy-default-organizations-create:
      requestBody:
        multipart/form-data: {"logo": "x-file: example.file", "display_name": "My Great Org", "description": "An organization that does great things with agentic AI", "domains": "mygreatorg.com,mygreatorg.org", "saml_provider_id": "saml.syllablesso"}
      responses:
        "200":
          application/json: {"display_name": "My Great Org", "description": "An organization that does great things with agentic AI.", "domains": "mygreatorg.com,myothergreatorg.org", "saml_provider_id": "saml.syllablesso", "id": 1, "last_updated_comments": "Updated to add an additional domain", "slug": "my-great-org", "last_updated": "2023-11-14T09:08:12.354Z", "logo_url": "https://image.png"}
        "422":
          application/json: {}
  organizations_delete:
    speakeasy-default-organizations-delete:
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  outbound_batch_list:
    speakeasy-default-outbound-batch-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["last_updated_at"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  outbound_batch_create:
    speakeasy-default-outbound-batch-create:
      requestBody:
        application/json: {"batch_id": "20251009.9", "campaign_id": 1, "expires_on": "2025-10-10T00:00:00Z", "paused": true}
      responses:
        "200":
          application/json: {"batch_id": "20251009.9", "campaign_id": 1, "expires_on": "2025-10-10T00:00:00Z", "paused": true, "upload_filename": "LATE_PAYMENTS_20250401.csv", "created_at": "2025-10-09T00:00:00Z", "deleted_at": "2025-10-09T00:00:00Z", "deleted_reason": "User request", "last_updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com", "error_message": "Invalid file format"}
        "422":
          application/json: {}
  outbound_batch_get_by_id:
    speakeasy-default-outbound-batch-get-by-id:
      parameters:
        path:
          batch_id: "<id>"
      responses:
        "200":
          application/json: {"batch_id": "20251009.9", "campaign_id": 1, "expires_on": "2025-10-10T00:00:00Z", "paused": true, "upload_filename": "LATE_PAYMENTS_20250401.csv", "created_at": "2025-10-09T00:00:00Z", "deleted_at": "2025-10-09T00:00:00Z", "deleted_reason": "User request", "last_updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com", "error_message": "Invalid file format", "status_counts": {"CANCELED": 7, "CONNECTED": 100, "DUPLICATE": 5, "FAILED": 10, "INITIATED": 20, "PENDING": 10}}
        "422":
          application/json: {}
  outbound_batch_update:
    speakeasy-default-outbound-batch-update:
      parameters:
        path:
          batch_id: "<id>"
      requestBody:
        application/json: {"paused": true, "expires_on": "2027-01-01T06:00:00Z"}
      responses:
        "200":
          application/json: {"batch_id": "20251009.9", "campaign_id": 1, "expires_on": "2025-10-10T00:00:00Z", "paused": true, "upload_filename": "LATE_PAYMENTS_20250401.csv", "created_at": "2025-10-09T00:00:00Z", "deleted_at": "2025-10-09T00:00:00Z", "deleted_reason": "User request", "last_updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com", "error_message": "Invalid file format"}
        "422":
          application/json: {}
  outbound_batch_delete:
    speakeasy-default-outbound-batch-delete:
      parameters:
        path:
          batch_id: "<id>"
      requestBody:
        application/x-www-form-urlencoded: {"delete_reason": "<value>"}
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  outbound_batch_upload:
    speakeasy-default-outbound-batch-upload:
      parameters:
        path:
          batch_id: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  outbound_batch_results:
    speakeasy-default-outbound-batch-results:
      parameters:
        path:
          batch_id: "<id>"
      responses:
        "200":
          application/json: [{"reference_id": "12345", "target": "512-555-1234", "request_variables": {}, "channel_manager_sid": "LMc4b16a9df2ce33d84b3d30581fe6598c", "created_at": "2025-09-28T00:00:00Z", "sent_at": "2025-09-29T00:00:00Z", "attempt_count": 0, "session_id": 1, "conversation_id": 1, "channel_manager_status": "COMPLETED", "insights_status": "PENDING", "insights": {}}]
        "422":
          application/json: {}
  outbound_batch_add:
    speakeasy-default-outbound-batch-add:
      parameters:
        path:
          batch_id: "<id>"
      requestBody:
        application/json: {"reference_id": "12345", "target": "512-555-1234", "request_variables": {}}
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  outbound_batch_remove:
    speakeasy-default-outbound-batch-remove:
      parameters:
        path:
          batch_id: "<id>"
      requestBody:
        application/json: ["<value 1>", "<value 2>"]
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  outbound_campaign_list:
    speakeasy-default-outbound-campaign-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["id"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"campaign_name": "Outbound Campaign 1", "description": "This is a test campaign", "mode": "voice", "sms_session_ttl": 720, "labels": ["test", "demo"], "campaign_variables": {"key": "value", "key2": "value2"}, "daily_start_time": "09:00:00", "daily_end_time": "17:00:00", "source": "+19032900844", "caller_id": "19995551234", "hourly_rate": 25, "retry_count": 1, "retry_interval": "30m", "active_days": ["mon", "tue", "wed", "thu", "fri"], "id": 1, "agent_id": null, "created_at": "2025-09-29T00:00:00Z", "updated_at": "2025-09-29T00:00:00Z", "last_updated_by": "user@email.com"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  outbound_campaign_create:
    speakeasy-default-outbound-campaign-create:
      requestBody:
        application/json: {"campaign_name": "Outbound Campaign 1", "description": "This is a test campaign", "mode": "voice", "sms_session_ttl": 720, "labels": ["test", "demo"], "campaign_variables": {"key": "value", "key2": "value2"}, "daily_start_time": "09:00:00", "daily_end_time": "17:00:00", "source": "+19032900844", "caller_id": "19995551234", "hourly_rate": 25, "retry_count": 1, "retry_interval": "30m", "active_days": ["mon", "tue", "wed", "thu", "fri"]}
      responses:
        "200":
          application/json: {"campaign_name": "Outbound Campaign 1", "description": "This is a test campaign", "mode": "voice", "sms_session_ttl": 720, "labels": ["test", "demo"], "campaign_variables": {"key": "value", "key2": "value2"}, "daily_start_time": "09:00:00", "daily_end_time": "17:00:00", "source": "+19032900844", "caller_id": "19995551234", "hourly_rate": 25, "retry_count": 1, "retry_interval": "30m", "active_days": ["mon", "tue", "wed", "thu", "fri"], "id": 1, "agent_id": null, "created_at": "2025-10-09T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  outbound_campaign_get_by_id:
    speakeasy-default-outbound-campaign-get-by-id:
      parameters:
        path:
          campaign_id: 11227
      responses:
        "200":
          application/json: {"campaign_name": "Outbound Campaign 1", "description": "This is a test campaign", "mode": "voice", "sms_session_ttl": 720, "labels": ["test", "demo"], "campaign_variables": {"key": "value", "key2": "value2"}, "daily_start_time": "09:00:00", "daily_end_time": "17:00:00", "source": "+19032900844", "caller_id": "19995551234", "hourly_rate": 25, "retry_count": 1, "retry_interval": "30m", "active_days": ["mon", "tue", "wed", "thu", "fri"], "id": 1, "agent_id": null, "created_at": "2025-10-09T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  outbound_campaign_update:
    speakeasy-default-outbound-campaign-update:
      parameters:
        path:
          campaign_id: 679645
      requestBody:
        application/json: {"campaign_name": "Outbound Campaign 1", "description": "This is a test campaign", "mode": "voice", "sms_session_ttl": 720, "labels": ["test", "demo"], "campaign_variables": {"key": "value", "key2": "value2"}, "daily_start_time": "09:00:00", "daily_end_time": "17:00:00", "source": "+19032900844", "caller_id": "19995551234", "hourly_rate": 25, "retry_count": 1, "retry_interval": "30m", "active_days": ["mon", "tue", "wed", "thu", "fri"]}
      responses:
        "200":
          application/json: {"campaign_name": "Outbound Campaign 1", "description": "This is a test campaign", "mode": "voice", "sms_session_ttl": 720, "labels": ["test", "demo"], "campaign_variables": {"key": "value", "key2": "value2"}, "daily_start_time": "09:00:00", "daily_end_time": "17:00:00", "source": "+19032900844", "caller_id": "19995551234", "hourly_rate": 25, "retry_count": 1, "retry_interval": "30m", "active_days": ["mon", "tue", "wed", "thu", "fri"], "id": 1, "agent_id": null, "created_at": "2025-10-09T00:00:00Z", "updated_at": "2025-10-09T00:00:00Z", "last_updated_by": "user@email.com"}
        "422":
          application/json: {}
  outbound_campaign_delete:
    speakeasy-default-outbound-campaign-delete:
      parameters:
        path:
          campaign_id: 439537
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  language_groups_list:
    speakeasy-default-language-groups-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["name"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  language_groups_create:
    speakeasy-default-language-groups-create:
      requestBody:
        application/json: {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true}
      responses:
        "200":
          application/json: {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}
        "422":
          application/json: {}
  language_groups_update:
    speakeasy-default-language-groups-update:
      requestBody:
        application/json: {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support."}
      responses:
        "200":
          application/json: {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}
        "422":
          application/json: {}
  language_groups_get_by_id:
    speakeasy-default-language-groups-get-by-id:
      parameters:
        path:
          language_group_id: 453313
      responses:
        "200":
          application/json: {"name": "Call Center 1 Languages", "description": "Languages spoken by operators at Call Center 1", "language_configs": [{"language_code": "en-US", "voice_provider": "OpenAI", "voice_display_name": "Alloy", "dtmf_code": 1}, {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "es-US-Neural2-B", "dtmf_code": 2}], "skip_current_language_in_message": true, "id": 1, "edit_comments": "Added Spanish support.", "agents_info": [{"id": 1, "name": "Test Agent"}], "updated_at": "2024-01-01T00:00:00Z", "last_updated_by": "user@mail.com"}
        "422":
          application/json: {}
  language_groups_delete:
    speakeasy-default-language-groups-delete:
      parameters:
        path:
          language_group_id: 572805
        query:
          reason: "<value>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  language_groups_create_voice_sample:
    speakeasy-default-language-groups-create-voice-sample:
      requestBody:
        application/json: {"language_code": "es-US", "voice_provider": "Google", "voice_display_name": "en-US-Neural2-D", "voice_speed": 1, "voice_pitch": 0}
      responses:
        "200":
          application/octet-stream: "x-file: example.file"
        "422":
          application/json: {}
  takeouts_create:
    speakeasy-default-takeouts-create:
      responses:
        "200":
          application/json: {"job_id": "<id>", "created_at": "2025-02-02T11:15:17.802Z"}
  takeouts_get_by_job_id:
    speakeasy-default-takeouts-get-by-job-id:
      parameters:
        path:
          job_id: "<id>"
      responses:
        "200":
          application/json: {"job_id": "<id>", "status": "in_progress", "updated_at": "2023-03-29T17:20:00.412Z"}
        "422":
          application/json: {}
  takeouts_get_file:
    speakeasy-default-takeouts-get-file:
      parameters:
        path:
          job_id: "<id>"
          file_name: "example.file"
      responses:
        "200":
          application/zip: "x-file: example.file"
        "422":
          application/json: {}
  users_list:
    speakeasy-default-users-list:
      parameters:
        query:
          page: 0
          limit: 25
          search_fields: ["activity_status"]
          search_field_values: ["Some Object Name"]
          start_datetime: "2023-01-01T00:00:00Z"
          end_datetime: "2024-01-01T00:00:00Z"
      responses:
        "200":
          application/json: {"items": [{"email": "user@syllable.ai", "first_name": "Jane", "last_name": "Smith", "role_id": 1, "last_updated_comments": "Updated to change which role was assigned", "id": 1, "role_name": "Admin", "email_sent": true, "activity_status": "not_invited", "last_updated": "2024-03-10T21:36:46.861Z", "last_updated_by": "admin@email.com", "last_session_at": "2025-01-01T12:00:00Z"}], "page": 0, "page_size": 25, "total_pages": 4, "total_count": 100}
        "422":
          application/json: {}
  users_create:
    speakeasy-default-users-create:
      requestBody:
        application/json: {"email": "user@syllable.ai", "first_name": "Jane", "last_name": "Smith", "role_id": 1, "login_type": "username_and_password", "skip_auth": false}
      responses:
        "200":
          application/json: {"email": "user@syllable.ai", "first_name": "Jane", "last_name": "Smith", "role_id": 1, "last_updated_comments": "Updated to change which role was assigned", "id": 1, "role_name": "Admin", "email_sent": true, "activity_status": "invited", "last_updated": "2023-11-25T23:58:01.480Z", "last_updated_by": "admin@email.com", "last_session_at": "2025-01-01T12:00:00Z"}
        "422":
          application/json: {}
  users_update:
    speakeasy-default-users-update:
      requestBody:
        application/json: {"email": "user@syllable.ai", "first_name": "Jane", "last_name": "Smith", "role_id": 1, "last_updated_comments": "Updated to change which role was assigned"}
      responses:
        "200":
          application/json: {"email": "user@syllable.ai", "first_name": "Jane", "last_name": "Smith", "role_id": 1, "last_updated_comments": "Updated to change which role was assigned", "id": 1, "role_name": "Admin", "email_sent": true, "activity_status": "invited", "last_updated": "2024-09-06T18:51:35.688Z", "last_updated_by": "admin@email.com", "last_session_at": "2025-01-01T12:00:00Z"}
        "422":
          application/json: {}
  users_delete:
    speakeasy-default-users-delete:
      requestBody:
        application/json: {"email": "user@syllable.ai", "reason": "User left the organization"}
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  users_get_by_email:
    speakeasy-default-users-get-by-email:
      parameters:
        path:
          user_email: "<value>"
      responses:
        "200":
          application/json: {"email": "user@syllable.ai", "first_name": "Jane", "last_name": "Smith", "role_id": 1, "last_updated_comments": "Updated to change which role was assigned", "id": 1, "role_name": "Admin", "email_sent": true, "activity_status": "invited", "last_updated": "2025-10-24T22:16:52.921Z", "last_updated_by": "admin@email.com", "last_session_at": "2025-01-01T12:00:00Z"}
        "422":
          application/json: {}
  users_send_email:
    speakeasy-default-users-send-email:
      parameters:
        path:
          user_email: "<value>"
        query:
          skip_auth: false
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  users_delete_account:
    speakeasy-default-users-delete-account:
      responses:
        "200":
          application/json: "<value>"
  pronunciations_upload_csv:
    speakeasy-default-pronunciations-upload-csv:
      requestBody:
        multipart/form-data: {"file": "x-file: example.file"}
      responses:
        "202":
          application/json: {"revision": 669092}
        "422":
          application/json: {}
  pronunciations_get:
    speakeasy-default-pronunciations-get:
      responses:
        "200":
          application/json: {"type": "pronunciations_v1", "pronunciations": [], "metadata": {"entries": 896813, "hash": "<value>"}}
  pronunciations_get_metadata:
    speakeasy-default-pronunciations-get-metadata:
      responses:
        "200":
          application/json: {"entries": 636257, "hash": "<value>"}
  pronunciations_download_csv: {}
  pronunciations_delete_csv: {}
examplesVersion: 1.0.2
generatedTests: {}
