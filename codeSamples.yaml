overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/api/v1/agents/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/agents/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.create({
                name: "Weather agent",
                description: "Agent for answering questions about weather.",
                labels: [
                  "Information",
                  "Weather",
                ],
                type: "ca_v1",
                promptId: 1,
                customMessageId: 1,
                languageGroupId: 1,
                timezone: "America/New_York",
                promptToolDefaults: [
                  {
                    toolName: "get_weather",
                    defaultValues: [
                      {
                        fieldName: "temperature_unit",
                        defaultValue: "fahrenheit",
                      },
                    ],
                  },
                ],
                variables: {
                  "vars.location_name": "Main Street Pizza",
                },
                toolHeaders: {
                  "Authorization": "Basic sometoken",
                },
                sttProvider: "Google STT V2",
                waitSound: "Keyboard 1",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/agents/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.update({
                name: "Weather agent",
                description: "Agent for answering questions about weather.",
                labels: [
                  "Information",
                  "Weather",
                ],
                type: "ca_v1",
                promptId: 1,
                customMessageId: 1,
                languageGroupId: 1,
                timezone: "America/Chicago",
                promptToolDefaults: [
                  {
                    toolName: "get_weather",
                    defaultValues: [
                      {
                        fieldName: "temperature_unit",
                        defaultValue: "fahrenheit",
                      },
                    ],
                  },
                ],
                variables: {
                  "vars.location_name": "Main Street Pizza",
                },
                toolHeaders: {
                  "Authorization": "Basic sometoken",
                },
                sttProvider: "Google STT V2",
                waitSound: "Keyboard 1",
                id: 1,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/agents/test/messages"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.test.sendTestMessage({
                serviceName: "<value>",
                source: "user@email.com",
                text: "Hello",
                testId: "<id>",
                agentId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/agents/voices/available"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.agentGetAvailableVoices();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/agents/{agent_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.delete({
                agentId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/agents/{agent_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.agents.getById({
                agentId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/available-targets"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.targets.availableTargets({
                page: 0,
                searchFields: [
                  "channel_name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/targets"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.targets.list({
                page: 0,
                searchFields: [
                  "fallback_target",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/twilio/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.twilio.create({
                name: "syllable-webchat",
                config: {
                  accountSid: "AC123...",
                  authToken: "sometoken",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/twilio/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.twilio.update({
                id: 1,
                name: "syllable-webchat",
                config: {
                  accountSid: "AC123...",
                  authToken: "sometoken",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/twilio/{channel_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.twilio.getById({
                channelId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/twilio/{channel_id}/numbers"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.twilio.numbers.add({
                channelId: 551477,
                twilioNumberAddRequest: {
                  friendlyName: "Support Line",
                  areaCode: "804",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/{channel_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.delete({
                channelId: "<id>",
                targetId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/{channel_id}/targets"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.targets.create({
                channelId: 638424,
                channelTargetCreateRequest: {
                  agentId: 1,
                  channelId: 1,
                  target: "+19995551234",
                  targetMode: "chat",
                  fallbackTarget: "+19995551235",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/{channel_id}/targets/{target_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.targets.getById({
                channelId: 931598,
                targetId: 505057,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/channels/{channel_id}/targets/{target_id}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.channels.targets.update({
                channelId: 597129,
                targetId: 344620,
                channelTargetUpdateRequest: {
                  agentId: 1,
                  channelId: 1,
                  target: "+19995551234",
                  targetMode: "email",
                  fallbackTarget: "+19995551235",
                  id: 1,
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/conversations/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.conversations.list({
                page: 0,
                searchFields: [
                  "llm_model",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/custom_messages/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.customMessages.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/custom_messages/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.customMessages.create({
                name: "Customer service greeting",
                text: "Hello and thank you for calling customer service. How can I help you today?",
                label: "Customer service",
                rules: [
                  {
                    description: "Closed on New Year's Day",
                    timeRangeStart: "09:00",
                    timeRangeEnd: "17:00",
                    date: "2025-01-01",
                    daysOfWeek: [
                      "mo",
                      "tu",
                      "we",
                      "th",
                      "fr",
                    ],
                    invert: false,
                    text: "Hello, thank you for calling. Sorry, we're closed today.",
                  },
                  {
                    description: "Closed on New Year's Day",
                    timeRangeStart: "09:00",
                    timeRangeEnd: "17:00",
                    date: "2025-01-01",
                    daysOfWeek: [
                      "mo",
                      "tu",
                      "we",
                      "th",
                      "fr",
                    ],
                    invert: false,
                    text: "Hello, thank you for calling. Sorry, we're closed today.",
                  },
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/custom_messages/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.customMessages.update({
                name: "Customer service greeting",
                text: "Hello and thank you for calling customer service. How can I help you today?",
                label: "Customer service",
                rules: [
                  {
                    description: "Closed on New Year's Day",
                    timeRangeStart: "09:00",
                    timeRangeEnd: "17:00",
                    date: "2025-01-01",
                    daysOfWeek: [
                      "mo",
                      "tu",
                      "we",
                      "th",
                      "fr",
                    ],
                    invert: false,
                    text: "Hello, thank you for calling. Sorry, we're closed today.",
                  },
                  {
                    description: "Closed on New Year's Day",
                    timeRangeStart: "09:00",
                    timeRangeEnd: "17:00",
                    date: "2025-01-01",
                    daysOfWeek: [
                      "mo",
                      "tu",
                      "we",
                      "th",
                      "fr",
                    ],
                    invert: false,
                    text: "Hello, thank you for calling. Sorry, we're closed today.",
                  },
                ],
                id: 1,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/custom_messages/{custom_message_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.customMessages.delete({
                customMessageId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/custom_messages/{custom_message_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.customMessages.getById({
                customMessageId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/dashboards/fetch_info"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dashboards.postGetDashboard({
                dashboardName: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/dashboards/list"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dashboards.postListDashboard({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/data_sources/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dataSources.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/data_sources/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dataSources.create({
                name: "Rain",
                description: "Information about rain.",
                labels: [
                  "Weather Info",
                ],
                chunk: false,
                chunkDelimiter: "",
                text: "The following are names and addresses of pizza shops.\n" +
                "\n" +
                "Cool Pizza, 123 Main St.\n" +
                "\n" +
                "Really Good Pizza, 456 Water St.\n" +
                "\n" +
                "The Best Pizza, 789 Circle Dr.",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/data_sources/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dataSources.update({
                name: "Rain",
                description: "Information about rain.",
                labels: [
                  "Weather Info",
                ],
                chunk: false,
                chunkDelimiter: "",
                id: 1,
                editComments: "Added new info",
                text: "The following are names and addresses of pizza shops.\n" +
                "\n" +
                "Cool Pizza, 123 Main St.\n" +
                "\n" +
                "Really Good Pizza, 456 Water St.\n" +
                "\n" +
                "The Best Pizza, 789 Circle Dr.",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/data_sources/{data_source_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dataSources.delete({
                dataSourceId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/data_sources/{data_source_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.dataSources.getById({
                dataSourceId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/events/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.events.list({
                page: 0,
                searchFields: [
                  "user_id",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/incidents/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.incidents.list({
                page: 0,
                searchFields: [
                  "start_datetime",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/incidents/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.incidents.create({
                description: "Service outage in region X",
                startDatetime: new Date("2023-10-01T08:00:00Z"),
                resolutionDatetime: new Date("2023-10-01T12:00:00Z"),
                impactCategory: "High",
                sessionsImpacted: 1500,
                markdown: "**Incident Details**",
                organizationId: 123,
                subOrganizationId: 456,
                subOrganization: "SubOrg A",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/incidents/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.incidents.update({
                description: "Service outage in region X",
                startDatetime: new Date("2023-10-01T08:00:00Z"),
                resolutionDatetime: new Date("2023-10-01T12:00:00Z"),
                impactCategory: "High",
                sessionsImpacted: 1500,
                markdown: "**Incident Details**",
                organizationId: 123,
                subOrganizationId: 456,
                subOrganization: "SubOrg A",
                id: 1,
                createdAt: new Date("2023-10-01T08:00:00Z"),
                updatedAt: new Date("2023-10-01T08:00:00Z"),
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/incidents/organizations"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.incidents.incidentGetOrganizations();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/incidents/{incident_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.incidents.delete({
                incidentId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/incidents/{incident_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.incidents.getById({
                incidentId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.list({
                page: 0,
                searchFields: [
                  "insight_key",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.create({
                name: "customer-complaints",
                label: "support",
                description: "Call recordings related to customer complaints",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/{folder_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.delete({
                folderId: 545907,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/{folder_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.getById({
                folderId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/{folder_id}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.update({
                folderId: 857478,
                insightsFolderInput: {
                  name: "customer-complaints",
                  label: "support",
                  description: "Call recordings related to customer complaints",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/{folder_id}/files"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.listFiles({
                folderId: 74439,
                page: 0,
                searchFields: [
                  "start_time",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/{folder_id}/move-files"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.moveFiles({
                folderId: 623467,
                insightsFolderFileMove: {
                  destinationFolderId: 182764,
                  fileIdList: [
                    [12334,23445,34556],
                  ],
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/folders/{folder_id}/upload-file"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.folders.uploadFile({
                folderId: 209119,
                callId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tool-configurations"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tool-configurations"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.create({
                name: "summary-tool",
                description: "This tool uses GPT4.1 to generate a summary of the call",
                version: 1,
                toolArguments: {
                  "prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded",
                },
                insightToolDefinitionId: 1,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tool-configurations/{tool_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.delete({
                toolId: 545907,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tool-configurations/{tool_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.getById({
                toolId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tool-configurations/{tool_id}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.update({
                toolId: 857478,
                insightToolInput: {
                  name: "summary-tool",
                  description: "This tool uses GPT4.1 to generate a summary of the call",
                  version: 1,
                  toolArguments: {
                    "prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded",
                  },
                  insightToolDefinitionId: 1,
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tool-definitions"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.insightToolGetDefinitions();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/tools-test"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.tools.insightsToolTest({
                toolName: "summary-tool",
                sessionId: 283467,
                uploadFileId: 283467,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.create({
                name: "summary-workflow",
                source: "transfer",
                description: "Default workflow - generates a summary of the call",
                insightToolIds: [
                  1,
                ],
                conditions: {
                  minDuration: 120,
                  maxDuration: 600,
                  sampleRate: 2,
                  agentList: [
                    "866324",
                    "826325",
                  ],
                  promptList: [
                    "123324",
                  ],
                  folderList: [
                    16754,
                    67535,
                  ],
                },
                startDatetime: new Date("2025-05-27T00:00:00Z"),
                endDatetime: new Date("2025-05-28T00:00:00Z"),
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/queue-work"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.queueWork({
                workflowName: "summary-workflow",
                sessionIdList: [
                  [12334,23445,34556],
                ],
                fileIdList: [
                  [1234,1678,2224],
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/{workflow_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.delete({
                workflowId: 545907,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/{workflow_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.getById({
                workflowId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/{workflow_id}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.update({
                workflowId: 991464,
                insightWorkflowInput: {
                  name: "summary-workflow",
                  source: "manual",
                  description: "Default workflow - generates a summary of the call",
                  insightToolIds: [
                    1,
                  ],
                  conditions: {
                    minDuration: 120,
                    maxDuration: 600,
                    sampleRate: 2,
                    agentList: [
                      "866324",
                      "826325",
                    ],
                    promptList: [
                      "123324",
                    ],
                    folderList: [
                      16754,
                      67535,
                    ],
                  },
                  startDatetime: new Date("2025-05-27T00:00:00Z"),
                  endDatetime: new Date("2025-05-28T00:00:00Z"),
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/{workflow_id}/activate"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.activate({
                workflowId: 537910,
                insightWorkflowActivate: {
                  isAcknowledged: true,
                  estimate: {
                    backfillCount: 100,
                    backfillDuration: 1000,
                    estimatedDailyCount: 10,
                    estimatedDailyDuration: 3674.11,
                    estimatedDailyCost: 45.25,
                    estimatedBackfillCost: 4561.00,
                  },
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/insights/workflows/{workflow_id}/inactivate"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.insights.workflows.inactivate({
                workflowId: 550727,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/language_groups/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.languageGroups.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/language_groups/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.languageGroups.create({
                name: "Call Center 1 Languages",
                description: "Languages spoken by operators at Call Center 1",
                languageConfigs: [
                  {
                    languageCode: "en-US",
                    voiceProvider: "OpenAI",
                    voiceDisplayName: "Alloy",
                    voiceSpeed: 1,
                    voicePitch: 0,
                    dtmfCode: 1,
                  },
                  {
                    languageCode: "es-US",
                    voiceProvider: "Google",
                    voiceDisplayName: "Alejandro",
                    voiceSpeed: 1,
                    voicePitch: 0,
                    dtmfCode: 1,
                  },
                ],
                skipCurrentLanguageInMessage: true,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/language_groups/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.languageGroups.update({
                name: "Call Center 1 Languages",
                description: "Languages spoken by operators at Call Center 1",
                languageConfigs: [
                  {
                    languageCode: "en-US",
                    voiceProvider: "OpenAI",
                    voiceDisplayName: "Alloy",
                    voiceSpeed: 1,
                    voicePitch: 0,
                    dtmfCode: 1,
                  },
                  {
                    languageCode: "es-US",
                    voiceProvider: "Google",
                    voiceDisplayName: "Alejandro",
                    voiceSpeed: 1,
                    voicePitch: 0,
                    dtmfCode: 1,
                  },
                ],
                skipCurrentLanguageInMessage: true,
                id: 1,
                editComments: "Added Spanish support.",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/language_groups/voices/sample"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.languageGroups.languageGroupsCreateVoiceSample({
                languageCode: "en-US",
                voiceProvider: "OpenAI",
                voiceDisplayName: "Onyx",
                voiceSpeed: 1,
                voicePitch: 0,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/language_groups/{language_group_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.languageGroups.delete({
                languageGroupId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/language_groups/{language_group_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.languageGroups.getById({
                languageGroupId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.list({
                page: 0,
                searchFields: [
                  "expires_on",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.create({
                batchId: "20250528.9",
                campaignId: 1,
                expiresOn: new Date("2025-05-29T00:00:00Z"),
                paused: true,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.delete({
                batchId: "<id>",
                bodyOutboundBatchDelete: {
                  deleteReason: "<value>",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.getById({
                batchId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.update({
                batchId: "<id>",
                communicationBatchUpdate: {
                  paused: false,
                  expiresOn: new Date("2027-01-01T06:00:00Z"),
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}/remove-requests"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.remove({
                batchId: "<id>",
                requestBody: [
                  "<value>",
                  "<value>",
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}/requests"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.add({
                batchId: "<id>",
                communicationRequest: {
                  referenceId: "12345",
                  target: "+15125551234",
                  requestVariables: {
                    "key": "<value>",
                    "key1": "<value>",
                  },
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}/results"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.results({
                batchId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/batches/{batch_id}/upload_batch"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.batches.upload({
                batchId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/campaigns"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.campaigns.list({
                page: 0,
                searchFields: [
                  "caller_id",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/campaigns"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.campaigns.create({
                campaignName: "Outbound Campaign 1",
                description: "This is a test campaign",
                label: "test",
                campaignVariables: {
                  "key": "value",
                  "key2": "value2",
                },
                dailyStartTime: "09:00:00",
                dailyEndTime: "17:00:00",
                source: "account@email.com",
                callerId: "19995551234",
                retryInterval: "12h",
                activeDays: [
                  "mon",
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/campaigns/{campaign_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.campaigns.delete({
                campaignId: 545907,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/campaigns/{campaign_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.campaigns.getById({
                campaignId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/outbound/campaigns/{campaign_id}"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.outbound.campaigns.update({
                campaignId: 627690,
                outboundCampaignInput: {
                  campaignName: "Outbound Campaign 1",
                  description: "This is a test campaign",
                  label: "demo",
                  campaignVariables: {
                    "key": "value",
                    "key2": "value2",
                  },
                  dailyStartTime: "09:00:00",
                  dailyEndTime: "17:00:00",
                  source: "account@email.com",
                  callerId: "19995551234",
                  retryInterval: "12h",
                  activeDays: [
                    "sun",
                  ],
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/permissions/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.permissions.list();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.create({
                name: "Weather Agent Prompt",
                description: "Prompt for a weather agent.",
                type: "prompt_v1",
                context: "You are a weather agent. Answer the user's questions about weather and nothing else.",
                tools: [
                  "summary",
                  "hangup",
                ],
                llmConfig: {
                  version: "2024-05-13",
                  apiVersion: "2024-06-01",
                  temperature: 1,
                  seed: 123,
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.update({
                name: "Weather Agent Prompt",
                description: "Prompt for a weather agent.",
                type: "prompt_v1",
                context: "You are a weather agent. Answer the user's questions about weather and nothing else.",
                tools: [
                  "summary",
                  "hangup",
                ],
                llmConfig: {
                  version: "2024-05-13",
                  apiVersion: "2024-06-01",
                  temperature: 1,
                  seed: 123,
                },
                id: 1,
                editComments: "Updated prompt text to include requirement to not answer questions that aren't about weather.",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/llms/supported"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.promptGetSupportedLlms();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/{prompt_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.delete({
                promptId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/{prompt_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.getById({
                promptId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/prompts/{prompt_id}/history"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.prompts.promptsHistory({
                promptId: 627932,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/services/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.services.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/services/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.services.create({
                name: "Weather tools",
                description: "Service containing tools for fetching weather information",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/services/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.services.update({
                name: "Weather tools",
                description: "Service containing tools for fetching weather information",
                id: 1,
                lastUpdatedComments: "Updated description to correct typo",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/services/{service_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.services.delete({
                serviceId: 545907,
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/services/{service_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.services.getById({
                serviceId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/session_debug/session_id/{session_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessionDebug.getSessionDataBySessionId({
                sessionId: 744354,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/session_debug/sid/{channel_manager_service}/{channel_manager_sid}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessionDebug.getSessionDataBySid({
                channelManagerService: "<value>",
                channelManagerSid: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/session_debug/tool_result/{session_id}/{tool_call_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessionDebug.getSessionToolCallResultById({
                sessionId: 187795,
                toolCallId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/session_labels/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessionLabels.list({
                page: 0,
                searchFields: [
                  "issue_categories",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/session_labels/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessionLabels.create({
                sessionId: 1,
                type: "auto-rating",
                code: "BAD",
                userEmail: "user@email.com",
                issueCategories: [
                  "Silent treatment",
                ],
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/session_labels/{session_label_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessionLabels.getById({
                sessionLabelId: 931598,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.list({
                page: 0,
                searchFields: [
                  "target",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/full-summary/{session_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.fullSummary.getById({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/latency/{session_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.latency.getById({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/recording/stream"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.sessionRecordingStream({
                token: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/recording/{session_id}"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.generateSessionRecordingUrls({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/transcript/{session_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.transcript.getById({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/sessions/{session_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.sessions.getById({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/takeouts/create"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.takeouts.create();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/takeouts/get/{job_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.takeouts.takeoutsGetByJobId({
                jobId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/takeouts/get/{job_id}/file/{file_name}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.takeouts.takeoutsGetFile({
                jobId: "<id>",
                fileName: "example.file",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/tools/"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.tools.list({
                page: 0,
                searchFields: [
                  "name",
                ],
                searchFieldValues: [
                  "Some Object Name",
                ],
                startDatetime: "2023-01-01T00:00:00Z",
                endDatetime: "2024-01-01T00:00:00Z",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/tools/"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.tools.create({
                name: "Weather Fetcher",
                definition: {
                  type: "endpoint",
                  tool: {
                    function: {
                      name: "get_weather",
                      description: "Get the weather for a city",
                      parameters: {

                      },
                    },
                  },
                  endpoint: {
                    url: "https://api.example.com",
                    method: "get",
                    argumentLocation: "path",
                  },
                  defaults: "<value>",
                  staticParameters: [
                    {
                      name: "temperature_unit",
                      description: "Whether the temperature information should be fetched in celsius or fahrenheit.",
                      required: true,
                      type: "string",
                      default: "fahrenheit",
                    },
                  ],
                },
                serviceId: 1,
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/tools/"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.tools.update({
                name: "Weather Fetcher",
                definition: {
                  type: "endpoint",
                  tool: {
                    function: {
                      name: "get_weather",
                      description: "Get the weather for a city",
                      parameters: {

                      },
                    },
                  },
                  endpoint: {
                    url: "https://api.example.com",
                    method: "post",
                    argumentLocation: "path",
                  },
                  defaults: "<value>",
                  staticParameters: [
                    {
                      name: "temperature_unit",
                      description: "Whether the temperature information should be fetched in celsius or fahrenheit.",
                      required: true,
                      type: "string",
                      default: "fahrenheit",
                    },
                  ],
                },
                serviceId: 1,
                id: 1,
                lastUpdatedComments: "Updated to use new API endpoint",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/tools/{tool_name}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.tools.delete({
                toolName: "<value>",
                reason: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/tools/{tool_name}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.tools.getByName({
                toolName: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/api/v1/users/delete_account"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.users.usersDeleteAccount();

              // Handle the result
              console.log(result);
            }

            run();
        - lang: typescript
          label: Typescript (SDK)
          source: |-
            import { SyllableSDK } from "syllable-sdk";

            const syllableSDK = new SyllableSDK({
              apiKeyHeader: process.env["SYLLABLESDK_API_KEY_HEADER"] ?? "",
            });

            async function run() {
              const result = await syllableSDK.v1.usersDeleteAccount();

              // Handle the result
              console.log(result);
            }

            run();
