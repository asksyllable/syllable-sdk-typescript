openapi: "3.1.0"
info:
  title: "SyllableSDK"
  description: "\n# Syllable Platform SDK\n\nSyllable SDK gives you the power of awesome AI agentry. \U0001F680\n\n## Overview\n\nThe Syllable SDK provides a comprehensive set of tools and APIs to integrate powerful AI\ncapabilities into your communication applications. Whether you're building chatbots, virtual\nassistants, or any other AI-driven solutions, Syllable SDK has got you covered.\n\n## Features\n\n- **Natural Language Processing (NLP)**: Understand and generate human language with ease.\n- **Machine Learning Models**: Leverage pre-trained models or train your own custom models.\n- **Speech Recognition**: Convert speech to text and vice versa.\n- **Data Analytics**: Analyze and visualize data to gain insights.\n- **Integration**: Seamlessly integrate with other services and platforms.\n\n"
  version: "0.0.2"
servers:
  - url: "https://api.syllable.cloud"
    description: "API server"
paths:
  "/api/v1/agents/":
    get:
      tags:
        - "agents"
      summary: "Agent List"
      description: "List the existing agents"
      operationId: "agent_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/AgentProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/AgentProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/AgentProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_AgentResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "agents"
      summary: "Create Agent"
      description: "Create a new agent"
      operationId: "agent_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AgentCreate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AgentResponse"}
        "400":
          description: "Bad Request"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "agents"
      summary: "Update Agent"
      description: "Update an existing agent"
      operationId: "agent_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/AgentUpdate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AgentResponse"}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/agents/{agent_id}":
    get:
      tags:
        - "agents"
      summary: "Get Agent By Id"
      description: "Get an agent by ID."
      operationId: "agent_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "agent_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Agent Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/AgentResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "agents"
      summary: "Delete Agent"
      operationId: "agent_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "agent_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Agent Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/agents/voices/available":
    get:
      tags:
        - "agents"
      summary: "Get Available Agent Voices"
      description: "Get available agent voices."
      operationId: "agent_get_available_voices"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                items: {"$ref": "#/components/schemas/AgentVoice"}
                type: "array"
                title: "Response Agent Get Available Voices"
      security:
        - APIKeyHeader: []
  "/api/v1/channels/":
    get:
      tags:
        - "channels"
      summary: "Get Channels"
      operationId: "channels_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/ChannelProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ChannelProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ChannelProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_Channel_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/twilio/{channel_id}":
    get:
      tags:
        - "channels.twilio"
      summary: "Get Twilio Channel By Id"
      operationId: "channels_twilio_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Channel Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Channel"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/twilio/":
    put:
      tags:
        - "channels.twilio"
      summary: "Update Twilio Channel"
      operationId: "channels_twilio_update"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TwilioChannelUpdateRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Channel"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
    post:
      tags:
        - "channels.twilio"
      summary: "Create Twilio Channel"
      operationId: "channels_twilio_create"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TwilioChannelCreateRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Channel"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
  "/api/v1/channels/twilio/{channel_id}/numbers":
    post:
      tags:
        - "channels.twilio.numbers"
      summary: "Add Twilio Number"
      description: "Purchase a Twilio number and associate it with a channel."
      operationId: "channels_twilio_numbers_add"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Channel Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TwilioNumberAddRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TwilioNumberAddResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/agents/test/messages":
    post:
      tags:
        - "agents.test"
      summary: "Send New Message"
      description: "Send a new message"
      operationId: "send_test_message"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/TestMessage"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TestMessageResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
  "/api/v1/conversations/":
    get:
      tags:
        - "conversations"
      summary: "Conversations List"
      operationId: "conversations_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/ConversationProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ConversationProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ConversationProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_Conversation_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/data_sources/":
    get:
      tags:
        - "data_sources"
      summary: "List Data Sources"
      description: "Fetch metadata about all data sources, not including their text."
      operationId: "data_sources_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/DataSourceProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/DataSourceProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/DataSourceProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_DataSourceMetadataResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "data_sources"
      summary: "Create Data Source"
      description: "Create a new data source."
      operationId: "data_sources_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DataSourceCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceDetailResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "data_sources"
      summary: "Update Data Source"
      description: "Update an existing data source."
      operationId: "data_sources_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DataSourceUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceDetailResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/data_sources/{data_source_id}":
    get:
      tags:
        - "data_sources"
      summary: "Get Data Source"
      description: "Fetch a given data source, including its text."
      operationId: "data_sources_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "data_source_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Data Source Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DataSourceDetailResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "data_sources"
      summary: "Delete Data Source"
      description: "Delete a given data source."
      operationId: "data_sources_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "data_source_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Data Source Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/events/":
    get:
      tags:
        - "events"
      summary: "Events List"
      operationId: "events_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/EventProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/EventProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/EventProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_Event_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/incidents/":
    get:
      tags:
        - "incidents"
      summary: "List Incidents"
      description: "List service incidents with pagination and filtering"
      operationId: "incident_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/IncidentProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/IncidentProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/IncidentProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_IncidentResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "incidents"
      summary: "Create Incident"
      description: "Create a new incident"
      operationId: "incident_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/IncidentCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/IncidentResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "incidents"
      summary: "Update Incident"
      description: "Update an existing incident"
      operationId: "incident_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/IncidentUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/IncidentResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/incidents/organizations":
    get:
      tags:
        - "incidents"
      summary: "Get Organizations"
      description: "Get all organizations"
      operationId: "incident_get_organizations"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                items: {"$ref": "#/components/schemas/IncidentOrganizationResponse"}
                type: "array"
                title: "Response Incident Get Organizations"
      security:
        - APIKeyHeader: []
  "/api/v1/incidents/{incident_id}":
    get:
      tags:
        - "incidents"
      summary: "Get Incident By Id"
      description: "Get incident by ID"
      operationId: "incident_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "incident_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Incident Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/IncidentResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "incidents"
      summary: "Delete Incident"
      description: "Delete an incident by ID"
      operationId: "incident_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "incident_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Incident Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/":
    get:
      tags:
        - "insights"
      summary: "Insights List"
      description: "List the evaluated insights for sessions."
      operationId: "insights_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/InsightsProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/InsightsProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/InsightsProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_InsightsOutput_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/folders/":
    get:
      tags:
        - "insights.folders"
      summary: "List Insights Upload Folders"
      operationId: "insights_folder_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/InsightsFolderProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/InsightsFolderProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/InsightsFolderProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_InsightsFolder_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "insights.folders"
      summary: "Create Insights Upload Folder"
      operationId: "insights_folder_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightsFolderInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/InsightsFolder"}
                  - type: "null"
                title: "Response Insights Folder Create"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/folders/{folder_id}":
    get:
      tags:
        - "insights.folders"
      summary: "Get Insights Folder Details"
      operationId: "insights_folder_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "folder_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Folder Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/FolderDetails"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "insights.folders"
      summary: "Update Insights Folder"
      operationId: "insights_folder_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "folder_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Folder Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightsFolderInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightsFolder"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/folders/{folder_id}/upload-file":
    post:
      tags:
        - "insights.folders"
      summary: "Upload Insights  Upload Folder"
      operationId: "insights_folder_upload_file"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "folder_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Folder Id"
        - name: "call_id"
          in: "query"
          required: true
          schema:
            type: "string"
            description: "A unique identifier for the call"
            title: "Call Id"
          description: "A unique identifier for the call"
        - name: "agent_number"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The phone number or ID of the agent involved."
            title: "Agent Number"
          description: "The phone number or ID of the agent involved."
        - name: "customer_number"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The phone number or ID of the customer."
            title: "Customer Number"
          description: "The phone number or ID of the customer."
        - name: "start_time"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date-time"
              - type: "null"
            description: "The timestamp of the call's beginning"
            title: "Start Time"
          description: "The timestamp of the call's beginning"
        - name: "end_time"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
                format: "date-time"
              - type: "null"
            description: "The timestamp of the call's end."
            title: "End Time"
          description: "The timestamp of the call's end."
        - name: "duration"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "number"
              - type: "null"
            description: "The call duration in seconds."
            title: "Duration"
          description: "The call duration in seconds."
        - name: "metadata"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Metadata"
      requestBody:
        content:
          "multipart/form-data":
            schema: {"$ref": "#/components/schemas/Body_insights_folder_upload_file"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightsUploadFile"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/folders/{folder_id}/files":
    get:
      tags:
        - "insights.folders"
      summary: "Fetch Insights Upload Files"
      operationId: "insights_upload_list_files"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "folder_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Folder Id"
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/InsightsUploadFileProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/InsightsUploadFileProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/InsightsUploadFileProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_InsightsUploadFile_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/workflows/":
    get:
      tags:
        - "insights.workflows"
      summary: "Insight Workflow List"
      description: "List the existing insight_workflows"
      operationId: "insights_workflow_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/InsightWorkflowProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/InsightWorkflowProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/InsightWorkflowProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_InsightWorkflowOutput_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "insights.workflows"
      summary: "Create Insight Workflow"
      description: "Create a new tool in the insights"
      operationId: "insights_workflow_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightWorkflowInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightWorkflowOutput"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/workflows/{workflow_id}":
    get:
      tags:
        - "insights.workflows"
      summary: "Get Insight Workflow By Id"
      description: "Get a InsightWorkflow by ID."
      operationId: "insights_workflow_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "workflow_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Workflow Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightWorkflowOutput"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "insights.workflows"
      summary: "Update Insights Workflow"
      description: "Update a InsightWorkflow."
      operationId: "insights_workflow_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "workflow_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Workflow Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightWorkflowInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightWorkflowOutput"}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "412":
          description: "Precondition Failed"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "insights.workflows"
      summary: "Delete Insights Workflow"
      description: "Delete a Insights workflow."
      operationId: "insights_workflow_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "workflow_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Workflow Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/workflows/{workflow_id}/inactivate":
    put:
      tags:
        - "insights.workflows"
      summary: "Update Insights Workflow"
      description: "Update a InsightWorkflow."
      operationId: "insights_workflow_inactivate"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "workflow_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Workflow Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightWorkflowOutput"}
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/workflows/{workflow_id}/activate":
    put:
      tags:
        - "insights.workflows"
      summary: "Update Insights Workflow"
      description: "Update a InsightWorkflow."
      operationId: "insights_workflow_activate"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "workflow_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Workflow Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightWorkflowActivate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightWorkflowOutput"}
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/workflows/queue-work":
    post:
      tags:
        - "insights.workflows"
      summary: "Queue Insights Workflow For Sessions/Files"
      description: "Manually queue sessions for insights workflow evaluation."
      operationId: "insights_workflow_queue_work"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightsWorkflowQueueSession"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
  "/api/v1/insights/tools":
    get:
      tags:
        - "insights.tools"
      summary: "Insight Tool List"
      description: "List the existing insight_tools"
      operationId: "insight_tool_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/InsightToolProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/InsightToolProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/InsightToolProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_InsightToolOutput_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "insights.tools"
      summary: "Create Insight Tool"
      description: "Create a new insight tool."
      operationId: "insights_tool_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightToolInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightToolOutput"}
        "400":
          description: "Bad Request"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/tools/{tool_id}":
    get:
      tags:
        - "insights.tools"
      summary: "Get Insight Tool By Id"
      description: "Get a InsightTool by Name."
      operationId: "insight_tool_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "tool_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Tool Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightToolOutput"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "insights.tools"
      summary: "Update Insights Tool"
      description: "Update an Insights tool."
      operationId: "insights_tool_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "tool_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Tool Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightToolInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InsightToolOutput"}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "412":
          description: "Precondition Failed"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/insights/tools-test":
    post:
      tags:
        - "insights.tools"
      summary: "Test Insights Tool"
      description: "Manually run the given insight tool against a session and return the response."
      operationId: "insights_tool_test"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/InsightToolTestInput"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
  "/api/v1/insights/tool-definitions":
    get:
      tags:
        - "insights.tools"
      summary: "Get Insight Tool Definitions"
      description: "Get a InsightTool by Name."
      operationId: "insight_tool_get_definitions"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                items: {"$ref": "#/components/schemas/InsightToolDefinition"}
                type: "array"
                title: "Response Insight Tool Get Definitions"
      security:
        - APIKeyHeader: []
  "/api/v1/custom_messages/":
    get:
      tags:
        - "custom_messages"
      summary: "Custom Messages List"
      description: "List the existing custom_messages"
      operationId: "custom_messages_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/CustomMessageProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/CustomMessageProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CustomMessageProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_CustomMessageResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "custom_messages"
      summary: "Create Custom Message"
      description: "Create a new custom message"
      operationId: "custom_messages_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomMessageCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomMessageResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "custom_messages"
      summary: "Update Custom Message"
      description: "Update a custom message"
      operationId: "custom_messages_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CustomMessageUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomMessageResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/custom_messages/{custom_message_id}":
    get:
      tags:
        - "custom_messages"
      summary: "Get Custom Message By Id"
      description: "Get the custom message by its ID"
      operationId: "custom_message_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "custom_message_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Custom Message Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CustomMessageResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "custom_messages"
      summary: "Delete Custom Message"
      description: "Delete custom message by ID"
      operationId: "custom_messages_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "custom_message_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Custom Message Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/prompts/":
    get:
      tags:
        - "prompts"
      summary: "Prompt List"
      description: "List the existing prompts"
      operationId: "prompts_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/PromptProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/PromptProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/PromptProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_PromptResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "prompts"
      summary: "Create Prompt"
      description: "Create a new prompt"
      operationId: "prompts_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/PromptCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/PromptResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "prompts"
      summary: "Update Prompt"
      description: "Update an existing prompt"
      operationId: "prompts_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/PromptUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/PromptResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/prompts/{prompt_id}":
    get:
      tags:
        - "prompts"
      summary: "Get Prompt By Id"
      description: "Get a prompt by ID"
      operationId: "prompts_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "prompt_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Prompt Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/PromptResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "prompts"
      summary: "Delete Prompt"
      description: "Delete a prompt"
      operationId: "prompts_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "prompt_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Prompt Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/prompts/{prompt_id}/history":
    get:
      tags:
        - "prompts"
      summary: "Get Prompt History"
      description: "Get a prompt by ID"
      operationId: "prompts_history"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "prompt_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Prompt Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/PromptHistory"}
                title: "Response Prompts History"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/prompts/llms/supported":
    get:
      tags:
        - "prompts"
      summary: "Get Supported Llm Configs"
      description: "Get supported LLM configs."
      operationId: "prompt_get_supported_llms"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                items: {"$ref": "#/components/schemas/SupportedLlm"}
                type: "array"
                title: "Response Prompt Get Supported Llms"
      security:
        - APIKeyHeader: []
  "/api/v1/services/":
    get:
      tags:
        - "services"
      summary: "Service List"
      description: "List the existing services"
      operationId: "service_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/ServiceProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ServiceProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ServiceProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_ServiceResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "services"
      summary: "Create Service"
      description: "Create a new service."
      operationId: "service_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ServiceCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ServiceResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "services"
      summary: "Update Service"
      description: "Update an existing service."
      operationId: "service_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ServiceUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ServiceResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/services/{service_id}":
    get:
      tags:
        - "services"
      summary: "Get Service By Id"
      description: "Get a service by its ID"
      operationId: "services_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "service_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Service Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ServiceResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "services"
      summary: "Delete Service"
      description: "Delete a service. A service with linked tools cannot be deleted."
      operationId: "service_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "service_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Service Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/session_labels/{session_label_id}":
    get:
      tags:
        - "session_labels"
      summary: "Get Label By Id"
      operationId: "session_label_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_label_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Session Label Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionLabel"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/session_labels/":
    post:
      tags:
        - "session_labels"
      summary: "Create Label"
      description: "Create a new label"
      operationId: "session_label_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/SessionLabelCreate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionLabel"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    get:
      tags:
        - "session_labels"
      summary: "Session Labels List"
      operationId: "session_labels_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/SessionLabelProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/SessionLabelProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/SessionLabelProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_SessionLabel_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/":
    get:
      tags:
        - "sessions"
      summary: "Sessions List"
      operationId: "sessions_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/SessionProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/SessionProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/SessionProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_Session_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/{session_id}":
    get:
      tags:
        - "sessions"
      summary: "Get A Single Session By Id"
      operationId: "session_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Session Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Session"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/recording/{session_id}":
    post:
      tags:
        - "sessions"
      summary: "Generate Recording Urls"
      operationId: "generate_session_recording_urls"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Session Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionRecordingResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/recording/stream":
    get:
      tags:
        - "sessions"
      summary: "Stream Recording"
      operationId: "session_recording_stream"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "token"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Token"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/octet-stream":
              schema:
                type: "string"
                title: "bytes"
                format: "binary"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/transcript/{session_id}":
    get:
      tags:
        - "sessions.transcript"
      summary: "Get Session Transcript By Id"
      operationId: "session_transcript_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Session Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionTranscriptionResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/full-summary/{session_id}":
    get:
      tags:
        - "sessions.full-summary"
      summary: "Get Full Session Summary By Id"
      operationId: "session_full_summary_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Session Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionSummaryResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/sessions/latency/{session_id}":
    get:
      tags:
        - "sessions.latency"
      summary: "Inspect Latency For Session"
      operationId: "session_latency_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Session Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/InspectLatencyResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/session_debug/sid/{channel_manager_service}/{channel_manager_sid}":
    get:
      tags:
        - "session_debug"
      summary: "Get Session Data By Sid"
      operationId: "get_session_data_by_sid"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_manager_service"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Channel Manager Service"
        - name: "channel_manager_sid"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Channel Manager Sid"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionData"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/session_debug/session_id/{session_id}":
    get:
      tags:
        - "session_debug"
      summary: "Get Session Data By Session Id"
      operationId: "get_session_data_by_session_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Session Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/SessionData"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/session_debug/tool_result/{session_id}/{tool_call_id}":
    get:
      tags:
        - "session_debug"
      summary: "Get Session Tool Call Result By Id"
      operationId: "get_session_tool_call_result_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "session_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Session Id"
        - name: "tool_call_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Tool Call Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ToolResultData"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/tools/":
    get:
      tags:
        - "tools"
      summary: "Tool List"
      description: "List the existing tools"
      operationId: "tool_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/ToolProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ToolProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ToolProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_ToolResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "tools"
      summary: "Create Tool"
      description: "Create a new tool"
      operationId: "tool_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ToolCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ToolResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "tools"
      summary: "Update Tool"
      description: "Update an existing tool"
      operationId: "tool_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ToolUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ToolResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/tools/{tool_name}":
    get:
      tags:
        - "tools"
      summary: "Tool Info"
      description: "Get the details of a specific tool"
      operationId: "tool_get_by_name"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "tool_name"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Tool Name"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ToolDetailResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "tools"
      summary: "Delete Tool"
      description: "Delete a tool."
      operationId: "tool_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "tool_name"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Tool Name"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/available-targets":
    get:
      tags:
        - "channels.targets"
      summary: "Available Targets List"
      description: "List the available phone numbers"
      operationId: "available_targets"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/AvailableTargetProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/AvailableTargetProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/AvailableTargetProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_AvailableTarget_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/targets":
    get:
      tags:
        - "channels.targets"
      summary: "Get Channel Targets"
      operationId: "channel_targets_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/ChannelTargetProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/ChannelTargetProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/ChannelTargetProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_ChannelTargetResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/{channel_id}/targets":
    post:
      tags:
        - "channels.targets"
      summary: "Assign A Channel Target"
      operationId: "channel_targets_create"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Channel Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ChannelTargetCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ChannelTargetResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/{channel_id}/targets/{target_id}":
    get:
      tags:
        - "channels.targets"
      summary: "Get A Channel Target"
      operationId: "channel_targets_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Channel Id"
        - name: "target_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Target Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ChannelTargetResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "channels.targets"
      summary: "Edit Channel Target"
      description: "Update channel target by ID"
      operationId: "channel_targets_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Channel Id"
        - name: "target_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Target Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/ChannelTargetUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ChannelTargetResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/channels/{channel_id}":
    delete:
      tags:
        - "channels"
      summary: "Delete Channel Target"
      description: "Hard-delete a channel target by ID"
      operationId: "channel_targets_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "channel_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Channel Id"
        - name: "target_id"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Target Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/directory_members/":
    get:
      tags:
        - "directory"
      summary: "Directory Member List"
      description: "List the existing directory_members"
      operationId: "directory_member_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/DirectoryMemberProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/DirectoryMemberProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/DirectoryMemberProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_DirectoryMember_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-ignore: true
    post:
      tags:
        - "directory"
      summary: "Create Directory Member"
      description: "Create a new member in the directory"
      operationId: "directory_member_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DirectoryMemberCreate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DirectoryMember"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-ignore: true
  "/api/v1/directory_members/{member_id}":
    get:
      tags:
        - "directory"
      summary: "Get Directory Member By Id"
      description: "Get a DirectoryMember by ID."
      operationId: "directory_member_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "member_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Member Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DirectoryMember"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-ignore: true
    put:
      tags:
        - "directory"
      summary: "Update Directory Member"
      description: "Update a DirectoryMember."
      operationId: "directory_member_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "member_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Member Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/DirectoryMember"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DirectoryMember"}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "412":
          description: "Precondition Failed"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-ignore: true
    delete:
      tags:
        - "directory"
      summary: "Delete Directory Member"
      description: "Delete a DirectoryMember."
      operationId: "directory_member_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "member_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Member Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      x-speakeasy-ignore: true
  "/api/v1/directory_members/upload/":
    put:
      tags:
        - "directory"
      summary: "Bulk Load Directory Members"
      description: "Update Directory Members in chunks of 100."
      operationId: "directory_member_bulk_load"
      requestBody:
        content:
          "multipart/form-data":
            schema: {"$ref": "#/components/schemas/Body_directory_member_bulk_load"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "400":
          description: "Bad Request"
        "404":
          description: "Not Found"
        "412":
          description: "Precondition Failed"
        "500":
          description: "Internal Server Error"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
      x-speakeasy-ignore: true
  "/api/v1/directory_members/download/":
    get:
      tags:
        - "directory"
      summary: "Download Directory Members"
      description: "Download the entire directory as a JSON file."
      operationId: "directory_member_download"
      responses:
        "200":
          description: "Directory downloaded successfully"
          content:
            "application/json":
              schema: {}
        "500":
          description: "Internal Server Error"
      security:
        - APIKeyHeader: []
      x-speakeasy-ignore: true
  "/api/v1/dashboards/list":
    post:
      tags:
        - "dashboards"
      summary: "Post List Dashboards"
      description: "METHOD: POST\nURL: /dashboard/list\nARGUMENTS: None\nRETURNS: List of dashboards"
      operationId: "post_list_dashboard"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/DashboardProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/DashboardProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/DashboardProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_DashboardResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/dashboards/fetch_info":
    post:
      tags:
        - "dashboards"
      summary: "Post Fetch Info"
      description: "METHOD: POST\nURL: /dashboard/fetch_info\nARGUMENTS: None\nRETURNS: Dashboard info for embedding"
      operationId: "post_get_dashboard"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "dashboard_name"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Dashboard Name"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/DashboardTokenResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/dashboards/session_events":
    post:
      tags:
        - "dashboards"
      summary: "Post Session Events"
      description: "METHOD: POST\nURL: /dashboard/session_events\nARGUMENTS: None\nRETURNS: Dashboard info for embedding\nDEPRECATED: This endpoint is deprecated. Please use /dashboard/list instead"
      operationId: "post_session_events_dashboard"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Dashboard"}
      deprecated: true
      security:
        - APIKeyHeader: []
  "/api/v1/dashboards/session_summary":
    post:
      tags:
        - "dashboards"
      summary: "Post Session Summary"
      description: "METHOD: POST\nURL: /dashboard/session_summary\nARGUMENTS: None\nRETURNS: Dashboard info for embedding\nDEPRECATED: This endpoint is deprecated. Please use /dashboard/list instead"
      operationId: "post_session_summary_dashboard"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Dashboard"}
      deprecated: true
      security:
        - APIKeyHeader: []
  "/api/v1/dashboards/session_transfers":
    post:
      tags:
        - "dashboards"
      summary: "Post Session Transfers"
      description: "METHOD: POST\nURL: /dashboard/session_transfers\nARGUMENTS: None\nRETURNS: Dashboard info for embedding\nDEPRECATED: This endpoint is deprecated. Please use /dashboard/list instead"
      operationId: "post_session_transfers_dashboard"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Dashboard"}
      deprecated: true
      security:
        - APIKeyHeader: []
  "/api/v1/dashboards/sessions":
    post:
      tags:
        - "dashboards"
      summary: "Post Sessions"
      description: "METHOD: POST\nURL: /dashboard/sessions\nARGUMENTS: None\nRETURNS: Dashboard info for embedding\nDEPRECATED: This endpoint is deprecated. Please use /dashboard/list instead"
      operationId: "post_sessions_dashboard"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/Dashboard"}
      deprecated: true
      security:
        - APIKeyHeader: []
  "/api/v1/outbound/batches":
    get:
      tags:
        - "outbound.batches"
      summary: "List Outbound Communication Batches"
      operationId: "outbound_batch_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/BatchProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/BatchProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/BatchProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_CommunicationBatch_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "outbound.batches"
      summary: "Create Outbound Communication Batch"
      operationId: "outbound_batch_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CommunicationBatchInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/CommunicationBatch"}
                  - type: "null"
                title: "Response Outbound Batch Create"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/batches/{batch_id}":
    get:
      tags:
        - "outbound.batches"
      summary: "Get Outbound Communication Batch"
      operationId: "outbound_batch_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/BatchDetails"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "outbound.batches"
      summary: "Update Outbound Communication Batch"
      operationId: "outbound_batch_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CommunicationBatchUpdate"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CommunicationBatch"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "outbound.batches"
      summary: "Delete Outbound Communication Batch"
      operationId: "outbound_batch_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
      requestBody:
        required: true
        content:
          "application/x-www-form-urlencoded":
            schema: {"$ref": "#/components/schemas/Body_outbound_batch_delete"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/batches/{batch_id}/upload_batch":
    post:
      tags:
        - "outbound.batches"
      summary: "Upload Outbound Communication Batch"
      operationId: "outbound_batch_upload"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
      requestBody:
        content:
          "multipart/form-data":
            schema: {"$ref": "#/components/schemas/Body_outbound_batch_upload"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/batches/{batch_id}/results":
    get:
      tags:
        - "outbound.batches"
      summary: "Fetch Outbound Communication Batch Results"
      operationId: "outbound_batch_results"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
        - name: "reference_id"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Reference Id"
        - name: "status"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Status"
        - name: "insights_status"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            title: "Insights Status"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                type: "array"
                items: {"$ref": "#/components/schemas/CommunicationRequestResult"}
                title: "Response Outbound Batch Results"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/batches/{batch_id}/requests":
    post:
      tags:
        - "outbound.batches"
      summary: "Create Outbound Communication Request"
      operationId: "outbound_batch_add"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/CommunicationRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/batches/{batch_id}/remove-requests":
    post:
      tags:
        - "outbound.batches"
      summary: "Delete Requests By List Of Reference Ids"
      operationId: "outbound_batch_remove"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "batch_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Batch Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              type: "array"
              items:
                type: "string"
              title: "Reference Ids"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/campaigns":
    get:
      tags:
        - "outbound.campaigns"
      summary: "List Outbound Communication Campaigns"
      operationId: "outbound_campaign_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/CampaignProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/CampaignProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/CampaignProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/ListResponse_OutboundCampaign_"}
                  - type: "null"
                title: "Response Outbound Campaign List"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "outbound.campaigns"
      summary: "Create Outbound Communication Campaign"
      operationId: "outbound_campaign_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/OutboundCampaignInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema:
                anyOf:
                  - {"$ref": "#/components/schemas/OutboundCampaign"}
                  - type: "null"
                title: "Response Outbound Campaign Create"
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/outbound/campaigns/{campaign_id}":
    get:
      tags:
        - "outbound.campaigns"
      summary: "Get Outbound Communication Campaign"
      operationId: "outbound_campaign_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "campaign_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Campaign Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OutboundCampaign"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "outbound.campaigns"
      summary: "Update Outbound Communication Campaign"
      operationId: "outbound_campaign_update"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "campaign_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Campaign Id"
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/OutboundCampaignInput"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/OutboundCampaign"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/language_groups/":
    get:
      tags:
        - "language_groups"
      summary: "List Language Groups"
      description: "Fetch language groups."
      operationId: "language_groups_list"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "integer"
                minimum: 0
              - type: "null"
            description: "The page number from which to start (0-based)"
            examples:
              - 0
            default: 0
            title: "Page"
          description: "The page number from which to start (0-based)"
        - name: "limit"
          in: "query"
          required: false
          schema:
            type: "integer"
            minimum: 0
            description: "The maximum number of items to return"
            examples:
              - 25
            default: 25
            title: "Limit"
          description: "The maximum number of items to return"
        - name: "search_fields"
          in: "query"
          required: false
          schema:
            type: "array"
            items: {"$ref": "#/components/schemas/LanguageGroupProperties"}
            description: "String names of fields to search. Correspond by index to search field values"
            examples:
              - "name"
            default: []
            title: "Search Fields"
          description: "String names of fields to search. Correspond by index to search field values"
        - name: "search_field_values"
          in: "query"
          required: false
          schema:
            type: "array"
            items:
              type: "string"
            description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
            examples:
              - "Some Object Name"
            default: []
            title: "Search Field Values"
          description: "Values of fields to search. Correspond by index to search fields. Unless field name contains \"list\", an individual search field value cannot be a list"
        - name: "order_by"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/LanguageGroupProperties"}
              - type: "null"
            description: "The field whose value should be used to order the results"
            examples:
              - "name"
            title: "Order By"
          description: "The field whose value should be used to order the results"
        - name: "order_by_direction"
          in: "query"
          required: false
          schema:
            anyOf:
              - {"$ref": "#/components/schemas/OrderByDirection"}
              - type: "null"
            description: "The direction in which to order the results"
            title: "Order By Direction"
          description: "The direction in which to order the results"
        - name: "fields"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "array"
                items: {"$ref": "#/components/schemas/LanguageGroupProperties"}
              - type: "null"
            description: "The fields to include in the response"
            default: []
            title: "Fields"
          description: "The fields to include in the response"
        - name: "start_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The start datetime for filtering results"
            examples:
              - "2023-01-01T00:00:00Z"
            title: "Start Datetime"
          description: "The start datetime for filtering results"
        - name: "end_datetime"
          in: "query"
          required: false
          schema:
            anyOf:
              - type: "string"
              - type: "null"
            description: "The end datetime for filtering results"
            examples:
              - "2024-01-01T00:00:00Z"
            title: "End Datetime"
          description: "The end datetime for filtering results"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/ListResponse_LanguageGroupResponse_"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    post:
      tags:
        - "language_groups"
      summary: "Create Language Group"
      description: "Create a new language group."
      operationId: "language_groups_create"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LanguageGroupCreateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LanguageGroupResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    put:
      tags:
        - "language_groups"
      summary: "Update Language Group"
      description: "Update an existing language group"
      operationId: "language_groups_update"
      security:
        - APIKeyHeader: []
      requestBody:
        required: true
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/LanguageGroupUpdateRequest"}
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LanguageGroupResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/language_groups/{language_group_id}":
    get:
      tags:
        - "language_groups"
      summary: "Get Language Group"
      description: "Fetch a given language group."
      operationId: "language_groups_get_by_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "language_group_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Language Group Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/LanguageGroupResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
    delete:
      tags:
        - "language_groups"
      summary: "Delete Language Group"
      description: "Delete a language group."
      operationId: "language_groups_delete"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "language_group_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Language Group Id"
        - name: "reason"
          in: "query"
          required: true
          schema:
            type: "string"
            title: "Reason"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/language_groups/voices/sample":
    post:
      tags:
        - "language_groups"
      summary: "Create Voice Sample"
      description: "Generate voice sample."
      operationId: "language_groups_create_voice_sample"
      requestBody:
        content:
          "application/json":
            schema: {"$ref": "#/components/schemas/VoiceSampleCreateRequest"}
        required: true
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
      security:
        - APIKeyHeader: []
  "/api/v1/takeouts/create":
    post:
      tags:
        - "takeouts"
      summary: "Create Takeout"
      operationId: "takeouts_create"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/CreateTakeoutResponse"}
      security:
        - APIKeyHeader: []
  "/api/v1/takeouts/get/{job_id}":
    get:
      tags:
        - "takeouts"
      summary: "Get Takeout"
      operationId: "takeouts_get_by_job_id"
      security:
        - APIKeyHeader: []
      parameters:
        - name: "job_id"
          in: "path"
          required: true
          schema:
            type: "string"
            title: "Job Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/TakeoutStatusResponse"}
        "422":
          description: "Validation Error"
          content:
            "application/json":
              schema: {"$ref": "#/components/schemas/HTTPValidationError"}
  "/api/v1/users/delete_account":
    delete:
      tags:
        - "users"
        - "V1"
      summary: "Request Removal Of This Account"
      operationId: "users_delete_account"
      responses:
        "200":
          description: "Successful Response"
          content:
            "application/json":
              schema: {}
      security:
        - APIKeyHeader: []
components:
  schemas:
    "AgentCreate":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The agent name"
          examples:
            - "Weather agent"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The agent description"
          examples:
            - "Agent for answering questions about weather."
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "The agent label"
          examples:
            - "Information"
        "type":
          type: "string"
          title: "Type"
          description: "The agent type. Must be \"ca_v1\" currently."
          examples:
            - "ca_v1"
        "prompt_id":
          type: "integer"
          title: "Prompt Id"
          description: "ID of the prompt associated with the agent"
          examples:
            - 1
        "custom_message_id":
          type: "integer"
          title: "Custom Message Id"
          description: "Internal ID of the custom message that should be delivered at the beginning of a conversation with the agent"
          examples:
            - 1
        "language_group_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Language Group Id"
          description: "Internal ID of the language group associated with the agent"
          examples:
            - 1
        "timezone":
          type: "string"
          title: "Timezone"
          description: "The time zone in which the agent operates"
          examples:
            - "America/New_York"
            - "America/Chicago"
        "prompt_tool_defaults":
          items: {"$ref": "#/components/schemas/AgentToolDefaults"}
          type: "array"
          title: "Prompt Tool Defaults"
          description: "Agent-level static parameter values for the agent's tools, overriding any tool-level defaults"
          examples:
            - {"default_values": [{"default_value": "fahrenheit", "field_name": "temperature_unit"}], "tool_name": "get_weather"}
        "languages":
          items:
            type: "string"
          type: "array"
          title: "Languages"
          description: "BCP 47 codes of languages the agent supports. (DEPRECATED - pass an empty list here and use language group ID to link agent to a language group instead.)"
          deprecated: true
          examples:
            - ["en-US", "es-US"]
        "variables":
          additionalProperties:
            type: "string"
          type: "object"
          title: "Variables"
          description: "Custom context variables for the conversation session. Keys should be prefixed with \"vars.\"."
          examples:
            - {"vars.location_name": "Main Street Pizza"}
        "tool_headers":
          anyOf:
            - additionalProperties:
                type: "string"
              type: "object"
            - type: "null"
          title: "Tool Headers"
          description: "Optional headers to include in tool calls for agent."
          examples:
            - {"Authorization": "Basic sometoken"}
        "agent_initiated":
          type: "boolean"
          title: "Agent Initiated"
          description: "Whether the agent initiates conversation with a user after the custom message is delivered"
          default: false
          examples:
            - false
        "stt_provider":
          anyOf:
            - {"$ref": "#/components/schemas/AgentSttProvider"}
            - type: "null"
          description: "Speech-to-text provider for the agent."
          examples:
            - "Google STT V1"
            - "Google STT V2"
            - "Deepgram Nova 2"
        "wait_sound":
          anyOf:
            - {"$ref": "#/components/schemas/AgentWaitSound"}
            - type: "null"
          description: "Sound to play while waiting for a response from the LLM."
          examples:
            - "No Sound"
            - "Keyboard 1"
            - "Keyboard 2"
            - "Call Center"
      type: "object"
      required:
        - "name"
        - "type"
        - "prompt_id"
        - "custom_message_id"
        - "timezone"
        - "variables"
        - "tool_headers"
      title: "AgentCreate"
      description: "Request model to create an agent."
    "AgentLanguage":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Name of the language"
          examples:
            - "English"
        "code": {"$ref": "#/components/schemas/LanguageCode", "description": "BCP 47 code of the language", "examples": ["en-US"]}
      type: "object"
      required:
        - "name"
        - "code"
      title: "AgentLanguage"
      description: "Language option for an agent."
    "AgentProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "name_exact"
        - "description"
        - "label"
        - "name_description"
        - "type"
        - "timezone"
        - "prompt_id"
        - "prompt_id_list"
        - "custom_message_id"
        - "languages"
        - "variables"
        - "prompt_tool_defaults"
        - "tool_headers"
        - "updated_at"
        - "last_updated_by"
      title: "AgentProperties"
      description: "Names of agent fields supported for filtering/sorting on list endpoint."
    "AgentResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The agent name"
          examples:
            - "Weather agent"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The agent description"
          examples:
            - "Agent for answering questions about weather."
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "The agent label"
          examples:
            - "Information"
        "type":
          type: "string"
          title: "Type"
          description: "The agent type. Must be \"ca_v1\" currently."
          examples:
            - "ca_v1"
        "prompt_id":
          type: "integer"
          title: "Prompt Id"
          description: "ID of the prompt associated with the agent"
          examples:
            - 1
        "custom_message_id":
          type: "integer"
          title: "Custom Message Id"
          description: "Internal ID of the custom message that should be delivered at the beginning of a conversation with the agent"
          examples:
            - 1
        "language_group_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Language Group Id"
          description: "Internal ID of the language group associated with the agent"
          examples:
            - 1
        "timezone":
          type: "string"
          title: "Timezone"
          description: "The time zone in which the agent operates"
          examples:
            - "America/New_York"
            - "America/Chicago"
        "prompt_tool_defaults":
          items: {"$ref": "#/components/schemas/AgentToolDefaults"}
          type: "array"
          title: "Prompt Tool Defaults"
          description: "Agent-level static parameter values for the agent's tools, overriding any tool-level defaults"
          examples:
            - {"default_values": [{"default_value": "fahrenheit", "field_name": "temperature_unit"}], "tool_name": "get_weather"}
        "languages":
          items:
            type: "string"
          type: "array"
          title: "Languages"
          description: "BCP 47 codes of languages the agent supports. (DEPRECATED - pass an empty list here and use language group ID to link agent to a language group instead.)"
          deprecated: true
          examples:
            - ["en-US", "es-US"]
        "variables":
          additionalProperties:
            type: "string"
          type: "object"
          title: "Variables"
          description: "Custom context variables for the conversation session. Keys should be prefixed with \"vars.\"."
          examples:
            - {"vars.location_name": "Main Street Pizza"}
        "tool_headers":
          anyOf:
            - additionalProperties:
                type: "string"
              type: "object"
            - type: "null"
          title: "Tool Headers"
          description: "Optional headers to include in tool calls for agent."
          examples:
            - {"Authorization": "Basic sometoken"}
        "agent_initiated":
          type: "boolean"
          title: "Agent Initiated"
          description: "Whether the agent initiates conversation with a user after the custom_message is delivered"
          default: false
          examples:
            - false
        "stt_provider":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Stt Provider"
          description: "Speech-to-text provider for the agent."
          examples:
            - "Google STT V1"
            - "Google STT V2"
            - "Deepgram Nova 2"
        "wait_sound":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Wait Sound"
          description: "Sound to play while waiting for a response from the LLM."
          examples:
            - "No Sound"
            - "Keyboard 1"
            - "Keyboard 2"
            - "Call Center"
        "id":
          type: "integer"
          title: "Id"
          description: "Internal ID of the agent"
          examples:
            - 1
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of most recent update"
          examples:
            - "2024-01-01T00:00:00Z"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
          description: "Email of the user who last updated the agent"
          examples:
            - "user@email.com"
        "prompt":
          anyOf:
            - {"$ref": "#/components/schemas/PromptResponse"}
            - type: "null"
          description: "The prompt associated with the agent."
        "custom_message":
          anyOf:
            - {"$ref": "#/components/schemas/CustomMessageResponse"}
            - type: "null"
          description: "The message associated with the agent. Will be delivered as a greeting at the beginning of a conversation."
        "channel_targets":
          anyOf:
            - items: {"$ref": "#/components/schemas/ChannelTargetResponse"}
              type: "array"
            - type: "null"
          title: "Channel Targets"
          description: "Channel targets associated with the agent"
        "tools":
          anyOf:
            - items: {"$ref": "#/components/schemas/ToolResponse"}
              type: "array"
            - type: "null"
          title: "Tools"
          description: "Tools associated with the agent"
        "language_group":
          anyOf:
            - {"$ref": "#/components/schemas/LanguageGroupResponse"}
            - type: "null"
          description: "The language group associated with the agent"
      type: "object"
      required:
        - "name"
        - "type"
        - "prompt_id"
        - "custom_message_id"
        - "timezone"
        - "variables"
        - "tool_headers"
        - "id"
        - "updated_at"
        - "last_updated_by"
      title: "AgentResponse"
      description: "Response model for agent operations.\nWhen a user interacts with the Syllable system, they do so by communicating with an agent.\nAn agent is linked to a prompt, a custom message, and one or more channel targets to define its\nbehavior and capabilities. For more information, see\n[Console docs](https://docs.syllable.ai/workspaces/Agents)."
    "AgentSttProvider":
      type: "string"
      enum:
        - "Google STT V1"
        - "Google STT V2"
        - "Deepgram Nova 2"
      title: "AgentSttProvider"
      description: "Speech-to-text providers supported by agents."
    "AgentToolDefaults":
      properties:
        "tool_name":
          type: "string"
          title: "Tool Name"
          description: "The name of the tool"
          examples:
            - "get_weather"
        "default_values":
          items: {"$ref": "#/components/schemas/AgentToolFieldDefault"}
          type: "array"
          title: "Default Values"
          description: "The default values for fields used in the tool"
          examples:
            - [{"default_value": "fahrenheit", "field_name": "temperature_unit"}]
      type: "object"
      required:
        - "tool_name"
        - "default_values"
      title: "AgentToolDefaults"
      description: "Agent-level static parameter values for a tool, overriding any tool-level defaults."
    "AgentToolFieldDefault":
      properties:
        "field_name":
          type: "string"
          title: "Field Name"
          description: "The name of the field"
          examples:
            - "temperature_unit"
        "default_value":
          title: "Default Value"
          description: "The default value for the field"
          examples:
            - "fahrenheit"
      type: "object"
      required:
        - "field_name"
        - "default_value"
      title: "AgentToolFieldDefault"
      description: "Agent-level value for a static parameter on a tool, overriding the tool-level default if one\nexists."
    "AgentUpdate":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The agent name"
          examples:
            - "Weather agent"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The agent description"
          examples:
            - "Agent for answering questions about weather."
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "The agent label"
          examples:
            - "Information"
        "type":
          type: "string"
          title: "Type"
          description: "The agent type. Must be \"ca_v1\" currently."
          examples:
            - "ca_v1"
        "prompt_id":
          type: "integer"
          title: "Prompt Id"
          description: "ID of the prompt associated with the agent"
          examples:
            - 1
        "custom_message_id":
          type: "integer"
          title: "Custom Message Id"
          description: "Internal ID of the custom message that should be delivered at the beginning of a conversation with the agent"
          examples:
            - 1
        "language_group_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Language Group Id"
          description: "Internal ID of the language group associated with the agent"
          examples:
            - 1
        "timezone":
          type: "string"
          title: "Timezone"
          description: "The time zone in which the agent operates"
          examples:
            - "America/New_York"
            - "America/Chicago"
        "prompt_tool_defaults":
          items: {"$ref": "#/components/schemas/AgentToolDefaults"}
          type: "array"
          title: "Prompt Tool Defaults"
          description: "Agent-level static parameter values for the agent's tools, overriding any tool-level defaults"
          examples:
            - {"default_values": [{"default_value": "fahrenheit", "field_name": "temperature_unit"}], "tool_name": "get_weather"}
        "languages":
          items:
            type: "string"
          type: "array"
          title: "Languages"
          description: "BCP 47 codes of languages the agent supports. (DEPRECATED - pass an empty list here and use language group ID to link agent to a language group instead.)"
          deprecated: true
          examples:
            - ["en-US", "es-US"]
        "variables":
          additionalProperties:
            type: "string"
          type: "object"
          title: "Variables"
          description: "Custom context variables for the conversation session. Keys should be prefixed with \"vars.\"."
          examples:
            - {"vars.location_name": "Main Street Pizza"}
        "tool_headers":
          anyOf:
            - additionalProperties:
                type: "string"
              type: "object"
            - type: "null"
          title: "Tool Headers"
          description: "Optional headers to include in tool calls for agent."
          examples:
            - {"Authorization": "Basic sometoken"}
        "agent_initiated":
          type: "boolean"
          title: "Agent Initiated"
          description: "Whether the agent initiates conversation with a user after the custom message is delivered"
          default: false
          examples:
            - false
        "stt_provider":
          anyOf:
            - {"$ref": "#/components/schemas/AgentSttProvider"}
            - type: "null"
          description: "Speech-to-text provider for the agent."
          examples:
            - "Google STT V1"
            - "Google STT V2"
            - "Deepgram Nova 2"
        "wait_sound":
          anyOf:
            - {"$ref": "#/components/schemas/AgentWaitSound"}
            - type: "null"
          description: "Sound to play while waiting for a response from the LLM."
          examples:
            - "No Sound"
            - "Keyboard 1"
            - "Keyboard 2"
            - "Call Center"
        "id":
          type: "integer"
          title: "Id"
          description: "Internal ID of the agent"
          examples:
            - 1
      type: "object"
      required:
        - "name"
        - "type"
        - "prompt_id"
        - "custom_message_id"
        - "timezone"
        - "variables"
        - "tool_headers"
        - "id"
      title: "AgentUpdate"
      description: "Request model to update an existing agent."
    "AgentVoice":
      properties:
        "provider": {"$ref": "#/components/schemas/TtsProvider", "description": "The provider for the voice", "examples": ["Google"]}
        "display_name": {"$ref": "#/components/schemas/AgentVoiceDisplayName", "description": "The display name of the voice", "examples": ["Alejandro"]}
        "var_name": {"$ref": "#/components/schemas/AgentVoiceVarName", "description": "The variable name of the voice (used when processing messages)", "deprecated": true, "examples": ["wavenet:male/es-US-Neural2-B"]}
        "gender": {"$ref": "#/components/schemas/AgentVoiceGender", "description": "The gender of the voice", "examples": ["male"]}
        "model": {"$ref": "#/components/schemas/AgentVoiceModel", "description": "The model of the voice", "examples": ["WaveNet"]}
        "supported_languages":
          items: {"$ref": "#/components/schemas/AgentLanguage"}
          type: "array"
          title: "Supported Languages"
          description: "Languages supported by the voice"
          examples:
            - {"code": "es-US", "name": "Spanish"}
        "deprecated":
          type: "boolean"
          title: "Deprecated"
          description: "Whether the voice is deprecated and should not be used"
          examples:
            - false
      type: "object"
      required:
        - "provider"
        - "display_name"
        - "var_name"
        - "gender"
        - "model"
        - "supported_languages"
        - "deprecated"
      title: "AgentVoice"
      description: "Voice option for an agent."
    "AgentVoiceDisplayName":
      type: "string"
      enum:
        - "Alejandro"
        - "Alice"
        - "Alloy"
        - "Ash"
        - "Bill"
        - "Brian"
        - "Callum"
        - "Charlie"
        - "Charlotte"
        - "Chris"
        - "Clara"
        - "Coral"
        - "Daniel"
        - "Echo"
        - "Eric"
        - "Fable"
        - "George"
        - "Isabella"
        - "Jerry"
        - "Jessica"
        - "Laura"
        - "Liam"
        - "Lily"
        - "Lina"
        - "Mark"
        - "Matilda"
        - "Melanie"
        - "Mila"
        - "Nova"
        - "Onyx"
        - "River"
        - "Roger"
        - "Sarah"
        - "Sage"
        - "Shimmer"
        - "Sienna"
        - "Tara"
        - "Will"
      title: "AgentVoiceDisplayName"
      description: "Display names of voices that Syllable supports."
    "AgentVoiceGender":
      type: "string"
      enum:
        - "female"
        - "male"
      title: "AgentVoiceGender"
      description: "Gender for an agent voice."
    "AgentVoiceModel":
      type: "string"
      enum:
        - "eleven_flash_v2_5"
        - "Neural2"
        - "Standard"
        - "Studio"
        - "WaveNet"
        - "tts-1"
        - "gpt-4o-mini-tts"
      title: "AgentVoiceModel"
      description: "Model for an agent voice."
    "AgentVoiceVarName":
      type: "string"
      enum:
        - "openai:alloy"
        - "openai:ash"
        - "openai:coral"
        - "openai:echo"
        - "openai:fable"
        - "openai:nova"
        - "openai:onyx"
        - "openai:sage"
        - "openai:shimmer"
        - "elevenlabs:Alice"
        - "elevenlabs:Bill"
        - "elevenlabs:Brian"
        - "elevenlabs:Callum"
        - "elevenlabs:Charlie"
        - "elevenlabs:Charlotte"
        - "elevenlabs:Chris"
        - "elevenlabs:Daniel"
        - "elevenlabs:Eric"
        - "elevenlabs:George"
        - "elevenlabs:Jessica"
        - "elevenlabs:Laura"
        - "elevenlabs:Liam"
        - "elevenlabs:Lily"
        - "elevenlabs:Matilda"
        - "elevenlabs:River"
        - "elevenlabs:Roger"
        - "elevenlabs:Sarah"
        - "elevenlabs:Will"
        - "wavenet:male/es-US-Neural2-B"
        - "wavenet:female/en-US-Neural2-F"
        - "wavenet:female/es-US-Neural2-A"
        - "wavenet:male/en-US-Neural2-D"
        - "wavenet:female/cmn-TW-Wavenet-A"
        - "wavenet:male/en-US-Neural2-J"
        - "wavenet:female/yue-HK-Standard-C"
        - "wavenet:female/en-US-Studio-O"
        - "wavenet:female/ko-KR-Neural2-A"
        - "wavenet:female/vi-VN-Neural2-A"
      title: "AgentVoiceVarName"
      description: "The variable name of an agent voice (used when procesing messages)."
    "AgentWaitSound":
      type: "string"
      enum:
        - "No Sound"
        - "Keyboard 1"
        - "Keyboard 2"
        - "Call Center"
      title: "AgentWaitSound"
      description: "Wait sounds supported by agents."
    "AvailableTarget":
      properties:
        "organization_id":
          type: "integer"
          title: "Organization Id"
          description: "Internal ID of the org with which the target is associated."
          examples:
            - 1
        "channel_id":
          type: "integer"
          title: "Channel Id"
          description: "Internal ID of the channel with which the target is associated."
          examples:
            - 1
        "channel_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel Name"
          description: "Name of the channel with which the target is associated."
          examples:
            - "Twilio"
        "target":
          type: "string"
          title: "Target"
          description: "Org-level target."
          examples:
            - "+19995551234"
      type: "object"
      required:
        - "organization_id"
        - "channel_id"
        - "channel_name"
        - "target"
      title: "AvailableTarget"
      description: "An available organization-level channel target (i.e., one for which a channel target has not\nbeen created in the current suborg)."
    "AvailableTargetProperties":
      type: "string"
      enum:
        - "channel_id"
        - "channel_name"
        - "target"
      title: "AvailableTargetProperties"
      description: "Names of target fields supported for filtering/sorting on available targets list endpoint."
    "BatchDetails":
      properties:
        "batch_id":
          type: "string"
          title: "Batch Id"
          description: "Unique ID for conversation batch"
          examples:
            - "20250503.9"
        "campaign_id":
          type: "integer"
          title: "Campaign Id"
          description: "Unique ID for campaign"
          examples:
            - 1
        "expires_on":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires On"
          description: "Timestamp of batch expiration"
          examples:
            - "2025-05-04T00:00:00Z"
        "paused":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Paused"
          description: "Whether the batch is on HOLD. When on HOLD, no outreach will be made."
          examples:
            - true
            - false
        "status": {"$ref": "#/components/schemas/BatchStatus", "description": "Status of batch", "default": "PENDING", "examples": ["PENDING", "ACTIVE", "PAUSED", "FAILED", "CANCELED", "EXPIRED"]}
        "upload_filename":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Upload Filename"
          description: "Name of file used to create batch"
          examples:
            - "LATE_PAYMENTS_20250401.csv"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp of batch creation"
          examples:
            - "2025-05-03T00:00:00Z"
        "deleted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deleted At"
          description: "Timestamp of batch deletion"
          examples:
            - "2025-05-03T00:00:00Z"
        "deleted_reason":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deleted Reason"
          description: "Reason for batch deletion"
          examples:
            - "User request"
        "last_updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Updated At"
          description: "Timestamp of last change to batch"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated campaign"
          examples:
            - "user@email.com"
        "error_message":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error Message"
          description: "Error message if batch upload failed"
          examples:
            - "Invalid file format"
            - "Missing required fields"
        "status_counts":
          anyOf:
            - additionalProperties:
                type: "integer"
              type: "object"
            - type: "null"
          title: "Status Counts"
          description: "Counts of requests by status"
          examples:
            - {"CANCELED": 7, "CONNECTED": 100, "DUPLICATE": 5, "FAILED": 10, "INITIATED": 20, "PENDING": 10}
      type: "object"
      required:
        - "batch_id"
        - "campaign_id"
        - "last_updated_by"
      title: "BatchDetails"
    "BatchProperties":
      type: "string"
      enum:
        - "batch_id"
        - "campaign_id"
        - "status"
        - "expires_on"
        - "last_updated_at"
      title: "BatchProperties"
    "BatchStatus":
      type: "string"
      enum:
        - "PENDING"
        - "ACTIVE"
        - "PAUSED"
        - "FAILED"
        - "CANCELED"
        - "EXPIRED"
      title: "BatchStatus"
      description: "Status of a communication batch."
    "Body_directory_member_bulk_load":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      required:
        - "file"
      title: "Body_directory_member_bulk_load"
    "Body_insights_folder_upload_file":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      title: "Body_insights_folder_upload_file"
    "Body_outbound_batch_delete":
      properties:
        "delete_reason":
          type: "string"
          title: "Delete Reason"
      type: "object"
      required:
        - "delete_reason"
      title: "Body_outbound_batch_delete"
    "Body_outbound_batch_upload":
      properties:
        "file":
          type: "string"
          format: "binary"
          title: "File"
      type: "object"
      title: "Body_outbound_batch_upload"
    "CampaignProperties":
      type: "string"
      enum:
        - "id"
        - "campaign_name"
        - "campaign_variables"
        - "daily_start_time"
        - "daily_end_time"
        - "source"
        - "caller_id"
        - "updated_at"
        - "label"
      title: "CampaignProperties"
    "Channel":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The channel name"
          examples:
            - "syllable-webchat"
        "channel_service": {"$ref": "#/components/schemas/ChannelServices", "description": "The service that facilitates communication on the channel", "examples": ["webchat"]}
        "supported_modes":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Supported Modes"
          description: "The comma-delimited list of supported modes for the channel, which defines the       possible communication methods for channel targets linked to it."
          examples:
            - ["chat", "voice"]
        "is_system_channel":
          type: "boolean"
          title: "Is System Channel"
          description: "Whether the channel is a built-in system channel (i.e., is not customizable)"
          default: true
          examples:
            - false
        "id":
          type: "integer"
          title: "Id"
          description: "The channel ID"
      type: "object"
      required:
        - "name"
        - "channel_service"
        - "id"
      title: "Channel"
    "ChannelProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "channel_service"
        - "supported_modes"
      title: "ChannelProperties"
      description: "Names of channel fields supported for filtering/sorting on list endpoint."
    "ChannelServices":
      type: "string"
      enum:
        - "sip"
        - "twilio"
        - "email"
        - "webchat"
      title: "ChannelServices"
      description: "The communication service for a channel."
    "ChannelTargetCreateRequest":
      properties:
        "agent_id":
          type: "integer"
          title: "Agent Id"
          description: "The internal ID of the agent associated with the channel target"
          examples:
            - 1
        "channel_id":
          type: "integer"
          title: "Channel Id"
          description: "The internal ID of the channel associated with the channel target"
          examples:
            - 1
        "target":
          type: "string"
          title: "Target"
          description: "The name of the channel target. Must correspond to an organization-level target (available targets can be fetched from `/channels/available-targets`)."
          examples:
            - "+19995551234"
        "target_mode": {"$ref": "#/components/schemas/TargetModes", "description": "The mode of the channel target (must match one of the supported modes of the associated channel)", "examples": ["voice"]}
        "fallback_target":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fallback Target"
          description: "The fallback for the channel target (currently only supported for \"voice\" mode)"
          examples:
            - "+19995551235"
        "is_test":
          type: "boolean"
          title: "Is Test"
          description: "Whether the channel target is intended for testing. If true, any sessions created through this target will be labeled as a test session (i.e., will not be included in dashboard data and can easily be filtered out in the Sessions screen in the SyllableConsole)."
          default: false
          examples:
            - true
      type: "object"
      required:
        - "agent_id"
        - "channel_id"
        - "target"
        - "target_mode"
      title: "ChannelTargetCreateRequest"
      description: "Request model to create a channel target."
    "ChannelTargetProperties":
      type: "string"
      enum:
        - "id"
        - "channel_id"
        - "channel_name"
        - "agent_id"
        - "target"
        - "target_mode"
        - "fallback_target"
        - "is_test"
        - "updated_at"
      title: "ChannelTargetProperties"
      description: "Names of channel target fields supported for filtering/sorting on full channel targets list\nendpoint."
    "ChannelTargetResponse":
      properties:
        "agent_id":
          type: "integer"
          title: "Agent Id"
          description: "The internal ID of the agent associated with the channel target"
          examples:
            - 1
        "channel_id":
          type: "integer"
          title: "Channel Id"
          description: "The internal ID of the channel associated with the channel target"
          examples:
            - 1
        "target":
          type: "string"
          title: "Target"
          description: "The name of the channel target. Must correspond to an organization-level target (available targets can be fetched from `/channels/available-targets`)."
          examples:
            - "+19995551234"
        "target_mode": {"$ref": "#/components/schemas/TargetModes", "description": "The mode of the channel target (must match one of the supported modes of the associated channel)", "examples": ["voice"]}
        "fallback_target":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fallback Target"
          description: "The fallback for the channel target (currently only supported for \"voice\" mode)"
          examples:
            - "+19995551235"
        "is_test":
          type: "boolean"
          title: "Is Test"
          description: "Whether the channel target is intended for testing. If true, any sessions created through this target will be labeled as a test session (i.e., will not be included in dashboard data and can easily be filtered out in the Sessions screen in the SyllableConsole)."
          default: false
          examples:
            - true
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the channel target"
          examples:
            - 1
        "channel_name":
          type: "string"
          title: "Channel Name"
          description: "The name of the channel associated with the channel target"
          examples:
            - "+19995551234"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of the most recent update to the channel target"
          examples:
            - "2024-01-01T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of the user who last updated the channel target"
          examples:
            - "user@email.com"
        "agent":
          anyOf:
            - {"$ref": "#/components/schemas/AgentResponse"}
            - type: "null"
          description: "Definition of the agent with which the channel target is associated."
      type: "object"
      required:
        - "agent_id"
        - "channel_id"
        - "target"
        - "target_mode"
        - "id"
        - "channel_name"
        - "updated_at"
        - "last_updated_by"
      title: "ChannelTargetResponse"
      description: "Response model for channel target operations.\nA channel target links a channel to an agent, allowing users to communicate with the agent\nthrough that channel. For more information, see\n[Console docs](https://docs.syllable.ai/Resources/Channels)."
    "ChannelTargetUpdateRequest":
      properties:
        "agent_id":
          type: "integer"
          title: "Agent Id"
          description: "The internal ID of the agent associated with the channel target"
          examples:
            - 1
        "channel_id":
          type: "integer"
          title: "Channel Id"
          description: "The internal ID of the channel associated with the channel target"
          examples:
            - 1
        "target":
          type: "string"
          title: "Target"
          description: "The name of the channel target. Must correspond to an organization-level target (available targets can be fetched from `/channels/available-targets`)."
          examples:
            - "+19995551234"
        "target_mode": {"$ref": "#/components/schemas/TargetModes", "description": "The mode of the channel target (must match one of the supported modes of the associated channel)", "examples": ["voice"]}
        "fallback_target":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Fallback Target"
          description: "The fallback for the channel target (currently only supported for \"voice\" mode)"
          examples:
            - "+19995551235"
        "is_test":
          type: "boolean"
          title: "Is Test"
          description: "Whether the channel target is intended for testing. If true, any sessions created through this target will be labeled as a test session (i.e., will not be included in dashboard data and can easily be filtered out in the Sessions screen in the SyllableConsole)."
          default: false
          examples:
            - true
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the channel target"
          examples:
            - 1
      type: "object"
      required:
        - "agent_id"
        - "channel_id"
        - "target"
        - "target_mode"
        - "id"
      title: "ChannelTargetUpdateRequest"
      description: "Request model to update a channel target."
    "CommunicationBatch":
      properties:
        "batch_id":
          type: "string"
          title: "Batch Id"
          description: "Unique ID for conversation batch"
          examples:
            - "20250503.9"
        "campaign_id":
          type: "integer"
          title: "Campaign Id"
          description: "Unique ID for campaign"
          examples:
            - 1
        "expires_on":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires On"
          description: "Timestamp of batch expiration"
          examples:
            - "2025-05-04T00:00:00Z"
        "paused":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Paused"
          description: "Whether the batch is on HOLD. When on HOLD, no outreach will be made."
          examples:
            - true
            - false
        "status": {"$ref": "#/components/schemas/BatchStatus", "description": "Status of batch", "default": "PENDING", "examples": ["PENDING", "ACTIVE", "PAUSED", "FAILED", "CANCELED", "EXPIRED"]}
        "upload_filename":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Upload Filename"
          description: "Name of file used to create batch"
          examples:
            - "LATE_PAYMENTS_20250401.csv"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp of batch creation"
          examples:
            - "2025-05-03T00:00:00Z"
        "deleted_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Deleted At"
          description: "Timestamp of batch deletion"
          examples:
            - "2025-05-03T00:00:00Z"
        "deleted_reason":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Deleted Reason"
          description: "Reason for batch deletion"
          examples:
            - "User request"
        "last_updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Last Updated At"
          description: "Timestamp of last change to batch"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated campaign"
          examples:
            - "user@email.com"
        "error_message":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error Message"
          description: "Error message if batch upload failed"
          examples:
            - "Invalid file format"
            - "Missing required fields"
      type: "object"
      required:
        - "batch_id"
        - "campaign_id"
        - "last_updated_by"
      title: "CommunicationBatch"
    "CommunicationBatchInput":
      properties:
        "batch_id":
          type: "string"
          title: "Batch Id"
          description: "Unique ID for conversation batch"
          examples:
            - "20250503.9"
        "campaign_id":
          type: "integer"
          title: "Campaign Id"
          description: "Unique ID for campaign"
          examples:
            - 1
        "expires_on":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires On"
          description: "Timestamp of batch expiration"
          examples:
            - "2025-05-04T00:00:00Z"
        "paused":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Paused"
          description: "Whether the batch is on HOLD. When on HOLD, no outreach will be made."
          examples:
            - true
            - false
      type: "object"
      required:
        - "batch_id"
        - "campaign_id"
      title: "CommunicationBatchInput"
    "CommunicationBatchUpdate":
      properties:
        "paused":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Paused"
          description: "Whether the batch is on HOLD. When on HOLD, no outreach will be made."
          examples:
            - true
            - false
        "expires_on":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Expires On"
          description: "Timestamp of batch expiration"
          examples:
            - "2027-01-01T06:00:00Z"
      type: "object"
      title: "CommunicationBatchUpdate"
    "CommunicationRequest":
      properties:
        "reference_id":
          type: "string"
          title: "Reference Id"
          description: "ID for target outreach (unique within batch)"
          examples:
            - "12345"
        "target":
          type: "string"
          title: "Target"
          description: "Target phone number or email address"
          examples:
            - "user@email.com"
        "request_variables":
          type: "object"
          title: "Request Variables"
          description: "Variables for request"
      type: "object"
      required:
        - "reference_id"
        - "target"
        - "request_variables"
      title: "CommunicationRequest"
    "CommunicationRequestResult":
      properties:
        "reference_id":
          type: "string"
          title: "Reference Id"
          description: "ID for target outreach (unique within batch)"
          examples:
            - "12345"
        "target":
          type: "string"
          title: "Target"
          description: "Target phone number or email address"
          examples:
            - "user@email.com"
        "request_variables":
          type: "object"
          title: "Request Variables"
          description: "Variables for request"
        "channel_manager_sid":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel Manager Sid"
          description: "Channel manager SID"
          examples:
            - "LMc4b16a9df2ce33d84b3d30581fe6598c"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp of request creation"
          examples:
            - "2025-05-02T00:00:00Z"
        "sent_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Sent At"
          description: "Timestamp at which request was sent"
          examples:
            - "2025-05-03T00:00:00Z"
        "attempt_count":
          type: "integer"
          title: "Attempt Count"
          description: "Number of attempts for request"
          default: 0
          examples:
            - 0
        "session_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Session Id"
          description: "Unique ID for call session"
          examples:
            - 1
        "conversation_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Conversation Id"
          description: "Unique ID for conversation"
          examples:
            - 1
        "request_status": {"$ref": "#/components/schemas/RequestStatus", "description": "Status of request", "default": "PENDING", "examples": ["PENDING", "DUPLICATE", "INITIATED", "CONNECTED", "FAILED", "CANCELED"]}
        "channel_manager_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel Manager Status"
          description: "Status of request in channel manager"
          examples:
            - "COMPLETED"
            - "FAILED"
            - "NO_ANSWER"
            - "BUSY"
        "insights_status":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Insights Status"
          description: "Status of session in insight workflow"
          examples:
            - "PENDING"
            - "PROCESSING"
            - "COMPLETED"
            - "FAILED"
        "insights":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Insights"
          description: "Insights from call"
          examples:
            - {"rating": "Good", "summary": "The customer service agent successfully assisted the caller with their inquiry and the call ended positively."}
      type: "object"
      required:
        - "reference_id"
        - "target"
        - "request_variables"
      title: "CommunicationRequestResult"
    "Conversation":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Timestamp of the conversation"
        "conversation_id":
          type: "string"
          title: "Conversation Id"
          description: "ID of the conversation"
        "agent_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Id"
          description: "ID of the agent with which the conversation occurred"
        "agent_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Name"
          description: "Name of the agent with which the conversation occurred"
        "agent_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Type"
          description: "Value of the \"type\" field of the agent with which the conversation occurred"
        "prompt_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Id"
          description: "ID of the prompt used in the conversation"
        "prompt_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Name"
          description: "Name of the prompt used in the conversation"
        "prompt_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Version"
          description: "Version of the prompt used in the conversation"
        "llm_provider":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Llm Provider"
          description: "Provider for the LLM used in the conversation (see PromptResponse.llm_config.provider)"
        "llm_model":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Llm Model"
          description: "Model for the LLM used in the conversation (see PromptResponse.llm_config.model)"
        "llm_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Llm Version"
          description: "Version for the LLM used in the conversation (see PromptResponse.llm_config.version)"
        "llm_temperature":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Llm Temperature"
          description: "Temperature for the LLM used in the conversation (see PromptResponse.llm_config.temperature)"
        "llm_seed":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Llm Seed"
          description: "Seed for the LLM used in the conversation (see PromptResponse.llm_config.seed)."
        "is_legacy":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Legacy"
          description: "Whether the conversation occurred on the legacy Syllable system"
      type: "object"
      required:
        - "timestamp"
        - "conversation_id"
      title: "Conversation"
      description: "A conversation is a record of messages between a user and an agent, and is composed of one or\nmore sessions."
    "ConversationProperties":
      type: "string"
      enum:
        - "timestamp"
        - "agent_type"
        - "agent_id"
        - "agent_name"
        - "prompt_id"
        - "prompt_name"
        - "llm_provider"
        - "llm_model"
        - "llm_version"
        - "is_legacy"
      title: "ConversationProperties"
    "CreateTakeoutResponse":
      properties:
        "job_id":
          type: "string"
          title: "Job Id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
      type: "object"
      required:
        - "job_id"
        - "created_at"
      title: "CreateTakeoutResponse"
    "CustomMessageCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the custom message"
          examples:
            - "Customer service greeting"
        "text":
          type: "string"
          title: "Text"
          description: "The default message that the agent will deliver if no rules are set or no rules match the current timestamp."
          examples:
            - "Hello and thank you for calling customer service. How can I help you today?"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "The label of the custom message"
          examples:
            - "Customer service"
        "rules":
          items: {"$ref": "#/components/schemas/CustomMessageRule"}
          type: "array"
          title: "Rules"
          description: "Rules for time-specific message variants"
          default: []
          examples:
            - [{"date": "2025-01-01", "description": "Closed on New Year's Day", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today.", "time_range_end": "17:00", "time_range_start": "09:00"}, {"days_of_week": ["sa", "su"], "description": "Closed on weekends", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends.", "time_range_end": "17:00", "time_range_start": "09:00"}]
        "type":
          type: "string"
          title: "Type"
          description: "Type of the custom message (must be \"greeting\" for now)"
          default: "greeting"
          examples:
            - "greeting"
      type: "object"
      required:
        - "name"
        - "text"
      title: "CustomMessageCreateRequest"
      description: "Request model to create a custom message."
    "CustomMessageProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "name_exact"
        - "text"
        - "label"
        - "updated_at"
      title: "CustomMessageProperties"
    "CustomMessageResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the custom message"
          examples:
            - "Customer service greeting"
        "text":
          type: "string"
          title: "Text"
          description: "The default message that the agent will deliver if no rules are set or no rules match the current timestamp."
          examples:
            - "Hello and thank you for calling customer service. How can I help you today?"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "The label of the custom message"
          examples:
            - "Customer service"
        "rules":
          items: {"$ref": "#/components/schemas/CustomMessageRule"}
          type: "array"
          title: "Rules"
          description: "Rules for time-specific message variants"
          default: []
          examples:
            - [{"date": "2025-01-01", "description": "Closed on New Year's Day", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today.", "time_range_end": "17:00", "time_range_start": "09:00"}, {"days_of_week": ["sa", "su"], "description": "Closed on weekends", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends.", "time_range_end": "17:00", "time_range_start": "09:00"}]
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the custom message"
          examples:
            - 1
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of the most recent update to the custom message"
          examples:
            - "2024-01-01T00:00:00Z"
        "agent_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Agent Count"
          description: "The number of agents using the custom message"
          examples:
            - 1
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "The email address of the user who most recently updated the custom message"
          examples:
            - "user@email.com"
        "type":
          type: "string"
          title: "Type"
          description: "Type of the custom message (must be \"greeting\" for now)"
          default: "greeting"
          examples:
            - "greeting"
      type: "object"
      required:
        - "name"
        - "text"
        - "id"
        - "updated_at"
        - "last_updated_by"
      title: "CustomMessageResponse"
      description: "Response model for custom message operations.\nA custom message is a pre-configured message delivered by an agent as a greeting at the\nbeginning of a conversation. Multiple agents can use the same custom mesasage. A custom message\nhas one or more rules defined, which allow for different messages to be dynamically selected and\ndelivered at runtime based on the current time and either date or day of the week. For more\ninformation, see [Console docs](https://docs.syllable.ai/Resources/Messages)."
    "CustomMessageRule":
      properties:
        "description":
          type: "string"
          title: "Description"
          description: "The description of the rule"
          examples:
            - "Closed on New Year's Day"
        "time_range_start":
          anyOf:
            - type: "string"
              pattern: "^([01]\\d|2[0-3]):[0-5]\\d$"
            - type: "null"
          title: "Time Range Start"
          description: "The start of the time range for the rule in 24-hour format hh:mm (should be null for \"all day\" cases)"
          examples:
            - "09:00"
        "time_range_end":
          anyOf:
            - type: "string"
              pattern: "^([01]\\d|2[0-3]):[0-5]\\d$"
            - type: "null"
          title: "Time Range End"
          description: "The end of the time range for the rule in 24-hour format hh:mm (should be null for \"all day\" cases)"
          examples:
            - "17:00"
        "date":
          anyOf:
            - type: "string"
              pattern: "\\b(19|20)\\d{2}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])\\b"
            - type: "null"
          title: "Date"
          description: "The date for the rule in YYYY-MM-DD format"
          examples:
            - "2025-01-01"
        "days_of_week":
          anyOf:
            - items: {"$ref": "#/components/schemas/DayOfWeek"}
              type: "array"
            - type: "null"
          title: "Days Of Week"
          description: "The days of the week for the rule"
          examples:
            - ["mo", "tu", "we", "th", "fr"]
        "invert":
          type: "boolean"
          title: "Invert"
          description: "Whether the rule logic should be inverted (i.e. \"not\")"
          examples:
            - false
        "text":
          type: "string"
          title: "Text"
          description: "Message text associated with the rule"
          examples:
            - "Hello, thank you for calling. Sorry, we're closed today."
      type: "object"
      required:
        - "description"
        - "invert"
        - "text"
      title: "CustomMessageRule"
      description: "A rule used to determine whether a custom message should present a variant message based on\nthe current timestamp."
    "CustomMessageUpdateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the custom message"
          examples:
            - "Customer service greeting"
        "text":
          type: "string"
          title: "Text"
          description: "The default message that the agent will deliver if no rules are set or no rules match the current timestamp."
          examples:
            - "Hello and thank you for calling customer service. How can I help you today?"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "The label of the custom message"
          examples:
            - "Customer service"
        "rules":
          items: {"$ref": "#/components/schemas/CustomMessageRule"}
          type: "array"
          title: "Rules"
          description: "Rules for time-specific message variants"
          default: []
          examples:
            - [{"date": "2025-01-01", "description": "Closed on New Year's Day", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed today.", "time_range_end": "17:00", "time_range_start": "09:00"}, {"days_of_week": ["sa", "su"], "description": "Closed on weekends", "invert": false, "text": "Hello, thank you for calling. Sorry, we're closed on weekends.", "time_range_end": "17:00", "time_range_start": "09:00"}]
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the custom message"
          examples:
            - 1
        "type":
          type: "string"
          title: "Type"
          description: "Type of the custom message (must be \"greeting\" for now)"
          default: "greeting"
          examples:
            - "greeting"
      type: "object"
      required:
        - "name"
        - "text"
        - "id"
      title: "CustomMessageUpdateRequest"
      description: "Request model to update an existing custom message."
    "Dashboard":
      properties:
        "embedded_id":
          type: "string"
          title: "Embedded Id"
          description: "Superset embedded ID of the dashboard"
        "guest_token":
          type: "string"
          title: "Guest Token"
          description: "Superset guest token of the dashboard"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the dashboard"
        "superset_url":
          type: "string"
          title: "Superset Url"
          description: "Superset URL of the dashboard"
      type: "object"
      required:
        - "embedded_id"
        - "guest_token"
        - "name"
        - "superset_url"
      title: "Dashboard"
      description: "Deprecated.  Please update to use DashboardTokenResponse.\nBasic information about a dashboard."
    "DashboardProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "display_name"
        - "rank"
        - "label"
      title: "DashboardProperties"
      description: "Names of dashboard fields supported for filtering/sorting on list endpoint."
    "DashboardResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Name of the dashboard"
          examples:
            - "session_summary"
        "display_name":
          type: "string"
          title: "Display Name"
          description: "Display name of the dashboard"
          examples:
            - "Session Summary"
        "rank":
          type: "integer"
          title: "Rank"
          description: "Dashboard importance (0 is the highest)"
          examples:
            - 0
        "label":
          type: "string"
          title: "Label"
          description: "Dashboard label. Typically \"report\" or \"dashboard\""
          examples:
            - "dashboard"
      type: "object"
      required:
        - "name"
        - "display_name"
        - "rank"
        - "label"
      title: "DashboardResponse"
      description: "Basic information about a dashboard with a description."
    "DashboardTokenResponse":
      properties:
        "embedded_id":
          type: "string"
          title: "Embedded Id"
          description: "Superset embedded ID of the dashboard"
          examples:
            - "976ef486-d1ea-49c7-ba81-18e955d80286"
        "guest_token":
          type: "string"
          title: "Guest Token"
          description: "Superset guest token of the dashboard"
          examples:
            - "some-guest-token"
        "name":
          type: "string"
          title: "Name"
          description: "Name of the dashboard"
          examples:
            - "session_summary"
        "display_name":
          type: "string"
          title: "Display Name"
          description: "Display name of the dashboard"
          examples:
            - "Session Summary"
        "superset_url":
          type: "string"
          title: "Superset Url"
          description: "Base Superset URL of the dashboard"
          examples:
            - "https://somesuperseturl.com"
        "rank":
          type: "integer"
          title: "Rank"
          description: "Dashboard importance (0 is the highest)"
          examples:
            - 0
        "label":
          type: "string"
          title: "Label"
          description: "Dashboard label. Typically \"report\" or \"dashboard\""
          examples:
            - "dashboard"
      type: "object"
      required:
        - "embedded_id"
        - "guest_token"
        - "name"
        - "display_name"
        - "superset_url"
        - "rank"
        - "label"
      title: "DashboardTokenResponse"
      description: "Basic information about a dashboard."
    "DataSourceCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The data source name. Must be unique within suborg. Cannot contain whitespace."
          examples:
            - "Rain"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the data source."
          examples:
            - "Information about rain."
        "labels":
          items:
            type: "string"
          type: "array"
          title: "Labels"
          description: "Searchable labels for the data source. Can be included in agent.prompt_tool_defaults for a given tool to give the agent access to data sources with those labels when calling that tool."
          default: []
          examples:
            - ["Weather Info"]
        "chunk":
          type: "boolean"
          title: "Chunk"
          description: "Whether the content should be split into smaller chunks. (This feature is coming in the future - currently this value will always be treated as False.)"
          examples:
            - false
        "chunk_delimiter":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Chunk Delimiter"
          description: "String that should be treated as delimiter between intended chunks. (This feature is coming in the future - currently this value will always be treated as None.)"
          examples:
            - ""
        "text":
          type: "string"
          title: "Text"
          description: "Information that the data source will provide to the agent accessing it. It is recommended to include a sentence at the beginning providing context to the LLM for the information in the data source."
          examples:
            - "The following are names and addresses of pizza shops.\n\nCool Pizza, 123 Main St.\n\nReally Good Pizza, 456 Water St.\n\nThe Best Pizza, 789 Circle Dr."
      type: "object"
      required:
        - "name"
        - "chunk"
        - "text"
      title: "DataSourceCreateRequest"
      description: "Request model to create a data source."
    "DataSourceDetailResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The data source name. Must be unique within suborg. Cannot contain whitespace."
          examples:
            - "Rain"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the data source."
          examples:
            - "Information about rain."
        "labels":
          items:
            type: "string"
          type: "array"
          title: "Labels"
          description: "Searchable labels for the data source. Can be included in agent.prompt_tool_defaults for a given tool to give the agent access to data sources with those labels when calling that tool."
          default: []
          examples:
            - ["Weather Info"]
        "chunk":
          type: "boolean"
          title: "Chunk"
          description: "Whether the content should be split into smaller chunks. (This feature is coming in the future - currently this value will always be treated as False.)"
          examples:
            - false
        "chunk_delimiter":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Chunk Delimiter"
          description: "String that should be treated as delimiter between intended chunks. (This feature is coming in the future - currently this value will always be treated as None.)"
          examples:
            - ""
        "id":
          type: "integer"
          title: "Id"
          description: "The data source ID."
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "The comments for the most recent edit to the data source"
          examples:
            - "Added new info"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of most recent update"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
          description: "Email of the user who last updated the data source"
          examples:
            - "user@email.com"
        "text":
          type: "string"
          title: "Text"
          description: "Information that the data source will provide to the agent accessing it."
      type: "object"
      required:
        - "name"
        - "chunk"
        - "id"
        - "updated_at"
        - "last_updated_by"
        - "text"
      title: "DataSourceDetailResponse"
      description: "Metadata about a data source, along with the text. A data source is a blob of text that\ncan be made available to an agent's general info tools to provide more context to the agent when\ngenerating its responses. For more information, see\n[Console docs](https://docs.syllable.ai/Resources/DataSources)."
    "DataSourceMetadataResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The data source name. Must be unique within suborg. Cannot contain whitespace."
          examples:
            - "Rain"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the data source."
          examples:
            - "Information about rain."
        "labels":
          items:
            type: "string"
          type: "array"
          title: "Labels"
          description: "Searchable labels for the data source. Can be included in agent.prompt_tool_defaults for a given tool to give the agent access to data sources with those labels when calling that tool."
          default: []
          examples:
            - ["Weather Info"]
        "chunk":
          type: "boolean"
          title: "Chunk"
          description: "Whether the content should be split into smaller chunks. (This feature is coming in the future - currently this value will always be treated as False.)"
          examples:
            - false
        "chunk_delimiter":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Chunk Delimiter"
          description: "String that should be treated as delimiter between intended chunks. (This feature is coming in the future - currently this value will always be treated as None.)"
          examples:
            - ""
        "id":
          type: "integer"
          title: "Id"
          description: "The data source ID."
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "The comments for the most recent edit to the data source"
          examples:
            - "Added new info"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of most recent update"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
          description: "Email of the user who last updated the data source"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "name"
        - "chunk"
        - "id"
        - "updated_at"
        - "last_updated_by"
      title: "DataSourceMetadataResponse"
      description: "Metadata about a data source, not including the text. A data source is a blob of text that\ncan be made available to an agent's general info tools to provide more context to the agent when\ngenerating its responses. For more information, see\n[Console docs](https://docs.syllable.ai/Resources/DataSources)."
    "DataSourceProperties":
      type: "string"
      enum:
        - "name"
        - "description"
        - "labels"
        - "chunk"
        - "chunk_delimiter"
        - "updated_at"
        - "last_updated_by"
      title: "DataSourceProperties"
      description: "Names of data source fields supported for filtering/sorting on list endpoint."
    "DataSourceUpdateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The data source name. Must be unique within suborg. Cannot contain whitespace."
          examples:
            - "Rain"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the data source."
          examples:
            - "Information about rain."
        "labels":
          items:
            type: "string"
          type: "array"
          title: "Labels"
          description: "Searchable labels for the data source. Can be included in agent.prompt_tool_defaults for a given tool to give the agent access to data sources with those labels when calling that tool."
          default: []
          examples:
            - ["Weather Info"]
        "chunk":
          type: "boolean"
          title: "Chunk"
          description: "Whether the content should be split into smaller chunks. (This feature is coming in the future - currently this value will always be treated as False.)"
          examples:
            - false
        "chunk_delimiter":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Chunk Delimiter"
          description: "String that should be treated as delimiter between intended chunks. (This feature is coming in the future - currently this value will always be treated as None.)"
          examples:
            - ""
        "id":
          type: "integer"
          title: "Id"
          description: "The data source ID."
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "The comments for the most recent edit to the data source"
          examples:
            - "Added new info"
        "text":
          type: "string"
          title: "Text"
          description: "Information that the data source will provide to the agent accessing it. It is recommended to include a sentence at the beginning providing context to the LLM for the information in the data source."
          examples:
            - "The following are names and addresses of pizza shops.\n\nCool Pizza, 123 Main St.\n\nReally Good Pizza, 456 Water St.\n\nThe Best Pizza, 789 Circle Dr."
      type: "object"
      required:
        - "name"
        - "chunk"
        - "id"
        - "text"
      title: "DataSourceUpdateRequest"
      description: "Request model to update an existing data source."
    "DayOfWeek":
      type: "string"
      enum:
        - "mo"
        - "tu"
        - "we"
        - "th"
        - "fr"
        - "sa"
        - "su"
      title: "DayOfWeek"
      description: "Available options for day of the week for use in message rules."
    "DaysOfWeek":
      type: "string"
      enum:
        - "mon"
        - "tue"
        - "wed"
        - "thu"
        - "fri"
        - "sat"
        - "sun"
      title: "DaysOfWeek"
      description: "Enum representing days of the week."
    "DialogMessage":
      properties:
        "text":
          type: "string"
          title: "Text"
          description: "Dialog message text"
          examples:
            - "Tell me about Syllable.ai!"
      type: "object"
      required:
        - "text"
      title: "DialogMessage"
    "DialogRole":
      type: "string"
      enum:
        - "agent"
        - "user"
      title: "DialogRole"
      description: "Role of dialog"
    "DialogToolCall":
      properties:
        "tool_call_id":
          type: "string"
          title: "Tool Call Id"
          description: "Tool call ID"
          examples:
            - "call_arbitrary_id"
        "tool_name":
          type: "string"
          title: "Tool Name"
          description: "Tool name"
          examples:
            - "general_information_web"
        "tool_arguments":
          title: "Tool Arguments"
          description: "Tool arguments"
          examples:
            - {"question": "Tell me about Syllable.ai!"}
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Tool call timestamp"
          examples:
            - "2024-06-19T00:00:00"
      type: "object"
      required:
        - "tool_call_id"
        - "tool_name"
        - "tool_arguments"
        - "timestamp"
      title: "DialogToolCall"
    "DirectoryExtension":
      properties:
        "name":
          type: "string"
          title: "Name"
        "numbers":
          anyOf:
            - items:
                type: "object"
              type: "array"
            - type: "null"
          title: "Numbers"
      type: "object"
      required:
        - "name"
      title: "DirectoryExtension"
    "DirectoryMember":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Name of the directory member"
          examples:
            - "Jane Doe"
        "type":
          type: "string"
          title: "Type"
          description: "Type of the directory member"
          examples:
            - "contact"
        "extensions":
          anyOf:
            - items: {"$ref": "#/components/schemas/DirectoryExtension"}
              type: "array"
            - type: "null"
          title: "Extensions"
          description: "List of extensions for the directory member"
          examples:
            - [{"name": "work", "numbers": [{"number": "+1234567890", "rules": [{"language": "en"}]}]}]
        "contact_tags":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Contact Tags"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
        "id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Id"
          description: "Internal ID of the directory member"
          examples:
            - 1
      type: "object"
      required:
        - "name"
        - "type"
      title: "DirectoryMember"
      description: "Model for a directory member (i.e. a contact)."
    "DirectoryMemberCreate":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Name of the directory member"
          examples:
            - "Jane Doe"
        "type":
          type: "string"
          title: "Type"
          description: "Type of the directory member"
          examples:
            - "contact"
        "extensions":
          anyOf:
            - items: {"$ref": "#/components/schemas/DirectoryExtension"}
              type: "array"
            - type: "null"
          title: "Extensions"
          description: "List of extensions for the directory member"
          examples:
            - [{"name": "work", "numbers": [{"number": "+1234567890", "rules": [{"language": "en"}]}]}]
        "contact_tags":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Contact Tags"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
      type: "object"
      required:
        - "name"
        - "type"
      title: "DirectoryMemberCreate"
      description: "Request model to create a directory member."
    "DirectoryMemberProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "type"
        - "extensions"
        - "contact_tags"
        - "updated_at"
      title: "DirectoryMemberProperties"
    "Event":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Timestamp at which the event occurred"
        "session_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Session Id"
          description: "ID of the session in which the event occurred"
        "conversation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Conversation Id"
          description: "ID of the conversation associated with the session in which the event occurred"
        "source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source"
          description: "Source of the event (either a tool call or an LLM prompt)"
          examples:
            - "tool-call"
        "source_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source Id"
          description: "ID of the source of the event (either a tool ID or a prompt ID)"
        "category":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Category"
          description: "Broad categorization of the event"
          examples:
            - "automation"
        "type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Type"
          description: "More specific class of the event"
          examples:
            - "phone-transfer"
        "user_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "User Id"
          description: "ID of the user interacting with the system when the event occurred (e.g., their       phone number)"
          examples:
            - "+18042221111"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Human-readable description of the event"
          examples:
            - "Transfer to phone number +18042221111"
        "attributes":
          anyOf:
            - type: "object"
            - type: "null"
          title: "Attributes"
          description: "Arbitrary additional metadata for the event"
      type: "object"
      required:
        - "timestamp"
      title: "Event"
      description: "An event represents a specific occurrence during a session."
    "EventProperties":
      type: "string"
      enum:
        - "timestamp"
        - "session_id"
        - "conversation_id"
        - "source"
        - "source_id"
        - "category"
        - "type"
        - "user_id"
        - "description"
        - "attributes"
      title: "EventProperties"
    "FolderDetails":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human-readable name of insight folder"
          examples:
            - "customer-complaints"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "optional label assigned to insight folder"
          examples:
            - "support"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Text description of insight upload folder"
          examples:
            - "Call recordings related to customer complaints"
        "id":
          type: "integer"
          title: "Id"
          description: "System-assign folder ID"
          examples:
            - 182764
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp at which insight upload folder was created"
          examples:
            - "2025-05-02T00:00:00Z"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp at which insight upload folder was last updated"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated upload folder"
          examples:
            - "user@email.com"
        "folder_stats":
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "number"
          type: "object"
          title: "Folder Stats"
          description: "Meta-data of insight upload files associated with the folder"
          examples:
            - {"count": 10, "total_duration": "10:00:00", "total_size": "213MB"}
      type: "object"
      required:
        - "name"
        - "id"
        - "last_updated_by"
        - "folder_stats"
      title: "FolderDetails"
      description: "Response model for an insight upload folder details."
    "HTTPValidationError":
      properties:
        "detail":
          items: {"$ref": "#/components/schemas/ValidationError"}
          type: "array"
          title: "Detail"
      type: "object"
      title: "HTTPValidationError"
    "IncidentCreateRequest":
      properties:
        "description":
          type: "string"
          title: "Description"
          description: "Description of the service incident"
          examples:
            - "Service outage in region X"
        "start_datetime":
          type: "string"
          format: "date-time"
          title: "Start Datetime"
          description: "Start time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
        "resolution_datetime":
          type: "string"
          format: "date-time"
          title: "Resolution Datetime"
          description: "Resolution time of the incident"
          examples:
            - "2023-10-01T12:00:00Z"
        "impact_category":
          type: "string"
          title: "Impact Category"
          description: "Category of the impact"
          examples:
            - "High"
        "sessions_impacted":
          type: "integer"
          title: "Sessions Impacted"
          description: "Number of sessions impacted"
          examples:
            - 1500
        "markdown":
          type: "string"
          title: "Markdown"
          description: "Detailed markdown description of the incident"
          examples:
            - "**Incident Details**"
        "organization_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization"
          examples:
            - 123
        "sub_organization_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Sub Organization Id"
          description: "The ID of the sub-organization"
          examples:
            - 456
        "sub_organization":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sub Organization"
          description: "The name of the sub-organization"
          examples:
            - "SubOrg A"
      type: "object"
      required:
        - "description"
        - "start_datetime"
        - "resolution_datetime"
        - "impact_category"
        - "sessions_impacted"
        - "markdown"
      title: "IncidentCreateRequest"
      description: "Request model to create a service incident."
    "IncidentOrganizationResponse":
      properties:
        "id":
          type: "integer"
          title: "Id"
        "name":
          type: "string"
          title: "Name"
        "display_name":
          type: "string"
          title: "Display Name"
      type: "object"
      required:
        - "id"
        - "name"
        - "display_name"
      title: "IncidentOrganizationResponse"
    "IncidentProperties":
      type: "string"
      enum:
        - "id"
        - "description"
        - "impact_category"
        - "sessions_impacted"
        - "markdown"
        - "created_at"
        - "updated_at"
        - "organization_id"
        - "sub_organization_id"
        - "start_datetime"
        - "end_datetime"
        - "resolution_datetime"
      title: "IncidentProperties"
      description: "Names of agent fields supported for filtering/sorting on list endpoint."
    "IncidentResponse":
      properties:
        "description":
          type: "string"
          title: "Description"
          description: "Description of the service incident"
          examples:
            - "Service outage in region X"
        "start_datetime":
          type: "string"
          format: "date-time"
          title: "Start Datetime"
          description: "Start time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
        "resolution_datetime":
          type: "string"
          format: "date-time"
          title: "Resolution Datetime"
          description: "Resolution time of the incident"
          examples:
            - "2023-10-01T12:00:00Z"
        "impact_category":
          type: "string"
          title: "Impact Category"
          description: "Category of the impact"
          examples:
            - "High"
        "sessions_impacted":
          type: "integer"
          title: "Sessions Impacted"
          description: "Number of sessions impacted"
          examples:
            - 1500
        "markdown":
          type: "string"
          title: "Markdown"
          description: "Detailed markdown description of the incident"
          examples:
            - "**Incident Details**"
        "organization_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization"
          examples:
            - 123
        "sub_organization_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Sub Organization Id"
          description: "The ID of the sub-organization"
          examples:
            - 456
        "sub_organization":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sub Organization"
          description: "The name of the sub-organization"
          examples:
            - "SubOrg A"
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the incident to update"
          examples:
            - 1
        "created_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Created At"
          description: "Creation time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Last update time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
          description: "The email of the user who last updated the incident"
          examples:
            - "user@mail.com"
      type: "object"
      required:
        - "description"
        - "start_datetime"
        - "resolution_datetime"
        - "impact_category"
        - "sessions_impacted"
        - "markdown"
        - "id"
        - "last_updated_by"
      title: "IncidentResponse"
      description: "Response model for service incident operations."
    "IncidentUpdateRequest":
      properties:
        "description":
          type: "string"
          title: "Description"
          description: "Description of the service incident"
          examples:
            - "Service outage in region X"
        "start_datetime":
          type: "string"
          format: "date-time"
          title: "Start Datetime"
          description: "Start time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
        "resolution_datetime":
          type: "string"
          format: "date-time"
          title: "Resolution Datetime"
          description: "Resolution time of the incident"
          examples:
            - "2023-10-01T12:00:00Z"
        "impact_category":
          type: "string"
          title: "Impact Category"
          description: "Category of the impact"
          examples:
            - "High"
        "sessions_impacted":
          type: "integer"
          title: "Sessions Impacted"
          description: "Number of sessions impacted"
          examples:
            - 1500
        "markdown":
          type: "string"
          title: "Markdown"
          description: "Detailed markdown description of the incident"
          examples:
            - "**Incident Details**"
        "organization_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Organization Id"
          description: "The ID of the organization"
          examples:
            - 123
        "sub_organization_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Sub Organization Id"
          description: "The ID of the sub-organization"
          examples:
            - 456
        "sub_organization":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sub Organization"
          description: "The name of the sub-organization"
          examples:
            - "SubOrg A"
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the incident to update"
          examples:
            - 1
        "created_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Created At"
          description: "Creation time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
        "updated_at":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Updated At"
          description: "Last update time of the incident"
          examples:
            - "2023-10-01T08:00:00Z"
      type: "object"
      required:
        - "description"
        - "start_datetime"
        - "resolution_datetime"
        - "impact_category"
        - "sessions_impacted"
        - "markdown"
        - "id"
      title: "IncidentUpdateRequest"
      description: "Request model to update an existing service incident."
    "InsightToolDefinition":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "Unique ID for insight tool definition"
          examples:
            - 1
        "name":
          type: "string"
          title: "Name"
          description: "Human-readable name of insight tool definition"
          examples:
            - "llm_tool"
        "type":
          type: "string"
          title: "Type"
          description: "Type of insight tool definition"
        "description":
          type: "string"
          title: "Description"
          description: "Text description of insight tool definition"
          examples:
            - "An LLM tool evaluates a transcript with a given prompt"
        "tool_parameters":
          title: "Tool Parameters"
          description: "Parameters for tools that use this definition and their associated types"
          examples:
            - {"prompt": "string"}
        "tool_result_set":
          title: "Tool Result Set"
          description: "Result key/types for insight tool definition"
          examples:
            - {"summary": "string"}
      type: "object"
      required:
        - "id"
        - "name"
        - "type"
        - "description"
        - "tool_parameters"
        - "tool_result_set"
      title: "InsightToolDefinition"
      description: "Model for an insight tool definition. This is a template that can be used by multiple insight\ntools, each providing their own parameter values."
    "InsightToolInput":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human readable name of insight tool"
          examples:
            - "summary-tool"
        "description":
          type: "string"
          title: "Description"
          description: "Text description of insight tool"
          examples:
            - "Default tool - generates a summary of the call"
        "version":
          type: "integer"
          title: "Version"
          description: "Version number of insight tool"
          examples:
            - 1
        "tool_arguments":
          title: "Tool Arguments"
          description: "Arguments for calling the insight tool"
          examples:
            - {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}
        "insight_tool_definition_id":
          type: "integer"
          title: "Insight Tool Definition Id"
          description: "Internal ID for the definition used by the insight tool"
          examples:
            - 1
      type: "object"
      required:
        - "name"
        - "description"
        - "version"
        - "tool_arguments"
        - "insight_tool_definition_id"
      title: "InsightToolInput"
      description: "Request model to create/update an insight tool."
    "InsightToolOutput":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human readable name of insight tool"
          examples:
            - "summary-tool"
        "description":
          type: "string"
          title: "Description"
          description: "Text description of insight tool"
          examples:
            - "Default tool - generates a summary of the call"
        "version":
          type: "integer"
          title: "Version"
          description: "Version of insight tool"
          examples:
            - 1
        "tool_arguments":
          title: "Tool Arguments"
          description: "Arguments for calling the insight tool"
          examples:
            - {"prompt": "Provide a concise, accurate summary of the conversation's key points, focusing on the user's goal and how the agent responded"}
        "insight_tool_definition_id":
          type: "integer"
          title: "Insight Tool Definition Id"
          description: "Unique ID for insight tool definition used by insight tool"
          examples:
            - 1
        "id":
          type: "integer"
          title: "Id"
          description: "Unique ID for insight tool"
          examples:
            - 1
        "insight_tool_definition":
          anyOf:
            - {"$ref": "#/components/schemas/InsightToolDefinition"}
            - type: "null"
          description: "Insight Tool Definition"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp of at which insight tool was created"
          examples:
            - "2025-05-02T00:00:00Z"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp at which insight tool was last updated"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated insight tool"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "name"
        - "description"
        - "version"
        - "tool_arguments"
        - "insight_tool_definition_id"
        - "id"
        - "last_updated_by"
      title: "InsightToolOutput"
      description: "Response model for an insight tool."
    "InsightToolProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "description"
        - "tool_arguments"
        - "insight_tool_definition_id"
        - "updated_at"
      title: "InsightToolProperties"
    "InsightToolTestInput":
      properties:
        "tool_name":
          type: "string"
          title: "Tool Name"
          description: "Human readable name of insight tool"
          examples:
            - "summary-tool"
        "session_id":
          type: "integer"
          title: "Session Id"
          description: "The session ID of the session to run the tool against"
          examples:
            - "283467"
      type: "object"
      required:
        - "tool_name"
        - "session_id"
      title: "InsightToolTestInput"
      description: "Request model to test an insight tool."
    "InsightWorkflowActivate":
      properties:
        "is_acknowledged":
          type: "boolean"
          title: "Is Acknowledged"
          description: "Flag to indicate if the user has acknowledged the estimate"
          examples:
            - true
        "estimate": {"$ref": "#/components/schemas/InsightWorkflowEstimate", "description": "Estimate of the number of calls that will be processed by the workflow"}
      type: "object"
      required:
        - "is_acknowledged"
        - "estimate"
      title: "InsightWorkflowActivate"
      description: "Request model to activate an insight workflow."
    "InsightWorkflowCondition":
      properties:
        "min_duration":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Min Duration"
          description: "Minimum duration of the calls in seconds"
          examples:
            - 120
        "max_duration":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Max Duration"
          description: "Maximum duration of the calls in seconds"
          examples:
            - 600
        "sample_rate":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Sample Rate"
          description: "Sample rate as a percentage of calls"
          examples:
            - 2
        "agent_list":
          anyOf:
            - items:
                type: "integer"
              type: "array"
            - type: "null"
          title: "Agent List"
          description: "List of agent IDs"
          examples:
            - [866324, 826325]
        "prompt_list":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Prompt List"
          description: "List of prompts IDs"
          examples:
            - [123324]
        "folder_list":
          anyOf:
            - items:
                type: "integer"
              type: "array"
            - type: "null"
          title: "Folder List"
          description: "List of folder IDs"
          examples:
            - [16754, 67535]
      type: "object"
      title: "InsightWorkflowCondition"
      description: "Model for the conditions that trigger an insight workflow."
    "InsightWorkflowEstimate":
      properties:
        "backfill_count":
          type: "integer"
          title: "Backfill Count"
          description: "Number of extant calls that will be processed by the workflow"
          examples:
            - 100
        "backfill_duration":
          type: "number"
          title: "Backfill Duration"
          description: "Estimated duration of the calls that will be processed by the workflow"
          examples:
            - 1000
        "estimated_daily_count":
          type: "integer"
          title: "Estimated Daily Count"
          description: "Estimated number of calls that will be processed by the workflow daily"
          examples:
            - 10
        "estimated_daily_duration":
          type: "number"
          title: "Estimated Daily Duration"
          description: "Estimated duration of the calls that will be processed by the workflow daily"
          examples:
            - "3674.11"
        "estimated_daily_cost":
          type: "number"
          title: "Estimated Daily Cost"
          description: "Estimated cost of the calls that will be processed by the workflow daily"
          examples:
            - "45.25"
        "estimated_backfill_cost":
          type: "number"
          title: "Estimated Backfill Cost"
          description: "Estimated cost of the backfill of the calls that will be processed by the workflow"
          examples:
            - "4561.00"
      type: "object"
      required:
        - "backfill_count"
        - "backfill_duration"
        - "estimated_daily_count"
        - "estimated_daily_duration"
        - "estimated_daily_cost"
        - "estimated_backfill_cost"
      title: "InsightWorkflowEstimate"
      description: "Response model for an insight workflow."
    "InsightWorkflowInput":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human-readable name of insight workflow"
          examples:
            - "summary-workflow"
        "source":
          type: "string"
          title: "Source"
          description: "Source of the insight workflow"
          examples:
            - "agent"
            - "transfer"
            - "upload"
            - "manual"
        "description":
          type: "string"
          title: "Description"
          description: "Text description of insight workflow"
          examples:
            - "Default workflow - generates a summary of the call"
        "insight_tool_ids":
          items:
            type: "integer"
          type: "array"
          title: "Insight Tool Ids"
          description: "List of IDs of insight tools used in the workflow"
          examples:
            - [1]
        "conditions": {"$ref": "#/components/schemas/InsightWorkflowCondition", "description": "Conditions for insight workflow to trigger on a given call recording."}
        "start_datetime":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Start Datetime"
          description: "Timestamp for when the insight workflow should start. An empty value indicates start on activation"
          examples:
            - "2025-05-02T00:00:00Z"
        "end_datetime":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "End Datetime"
          description: "Timestamp of when the insight workflow should end. An empty value indicates no end"
          examples:
            - "2025-05-03T00:00:00Z"
      type: "object"
      required:
        - "name"
        - "source"
        - "description"
        - "insight_tool_ids"
        - "conditions"
      title: "InsightWorkflowInput"
      description: "Request model to create/update an insight workflow."
    "InsightWorkflowOutput":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human-readable name of insight workflow"
          examples:
            - "summary-workflow"
        "source":
          type: "string"
          title: "Source"
          description: "Source of the insight workflow"
          examples:
            - "agent"
            - "transfer"
            - "upload"
            - "manual"
        "description":
          type: "string"
          title: "Description"
          description: "Text description of insight workflow"
          examples:
            - "Default workflow - generates a summary of the call"
        "insight_tool_ids":
          items:
            type: "integer"
          type: "array"
          title: "Insight Tool Ids"
          description: "List of IDs of insight tools used in the workflow"
          examples:
            - [1]
        "conditions": {"$ref": "#/components/schemas/InsightWorkflowCondition", "description": "Conditions for insight workflow to trigger on a given call recording."}
        "start_datetime":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Start Datetime"
          description: "Timestamp for when the insight workflow should start. An empty value indicates start on activation"
          examples:
            - "2025-05-02T00:00:00Z"
        "end_datetime":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "End Datetime"
          description: "Timestamp of when the insight workflow should end. An empty value indicates no end"
          examples:
            - "2025-05-03T00:00:00Z"
        "id":
          type: "integer"
          title: "Id"
          description: "Internal ID of the insight workflow"
          examples:
            - 1
        "insight_tools":
          items: {"$ref": "#/components/schemas/InsightToolOutput"}
          type: "array"
          title: "Insight Tools"
          description: "List of insight tools used in the workflow"
        "status":
          type: "string"
          title: "Status"
          description: "Status of the insight workflow"
          examples:
            - "ACTIVE"
            - "INACTIVE"
        "estimate": {"$ref": "#/components/schemas/InsightWorkflowEstimate", "description": "Estimate of the number of calls that will be processed by the workflow"}
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp at which the insight workflow was created"
          examples:
            - "2025-05-02T00:00:00Z"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of most recent update to the insight workflow"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated Insight Workflow"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "name"
        - "source"
        - "description"
        - "insight_tool_ids"
        - "conditions"
        - "id"
        - "insight_tools"
        - "status"
        - "estimate"
        - "last_updated_by"
      title: "InsightWorkflowOutput"
      description: "Response model for an insight workflow."
    "InsightWorkflowProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "description"
        - "status"
        - "conditions"
        - "insight_tool_ids"
        - "updated_at"
      title: "InsightWorkflowProperties"
    "InsightsFolder":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human-readable name of insight folder"
          examples:
            - "customer-complaints"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "optional label assigned to insight folder"
          examples:
            - "support"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Text description of insight upload folder"
          examples:
            - "Call recordings related to customer complaints"
        "id":
          type: "integer"
          title: "Id"
          description: "System-assign folder ID"
          examples:
            - 182764
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp at which insight upload folder was created"
          examples:
            - "2025-05-02T00:00:00Z"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp at which insight upload folder was last updated"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated upload folder"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "name"
        - "id"
        - "last_updated_by"
      title: "InsightsFolder"
      description: "Response model for an insight upload folder."
    "InsightsFolderInput":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "Human-readable name of insight folder"
          examples:
            - "customer-complaints"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "optional label assigned to insight folder"
          examples:
            - "support"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Text description of insight upload folder"
          examples:
            - "Call recordings related to customer complaints"
      type: "object"
      required:
        - "name"
      title: "InsightsFolderInput"
      description: "Request model to create/update an insight upload folder."
    "InsightsFolderProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "label"
        - "updated_at"
      title: "InsightsFolderProperties"
    "InsightsOutput":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "Unique ID for insight tool"
          examples:
            - 1
        "session_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Session Id"
          description: "Unique ID for session"
          examples:
            - 12341
        "upload_file_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Upload File Id"
          description: "Unique ID for uploaded file"
          examples:
            - 12535
        "insight_tool_id":
          type: "integer"
          title: "Insight Tool Id"
          description: "Unique ID for insight tool"
          examples:
            - 34531
        "insight_tool_version":
          type: "integer"
          title: "Insight Tool Version"
          description: "Version of insight tool"
          examples:
            - 1
        "insight_key":
          type: "string"
          title: "Insight Key"
          description: "Key for insight tool result"
          examples:
            - "summary"
        "string_value":
          anyOf:
            - type: "string"
            - type: "null"
          title: "String Value"
          description: "String value of insight tool result"
          examples:
            - "This is a summary of the call"
        "numeric_value":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Numeric Value"
          description: "Numeric value of insight tool result"
          examples:
            - 1
        "json_value":
          additionalProperties:
            anyOf:
              - type: "string"
              - type: "integer"
              - type: "number"
          type: "object"
          title: "Json Value"
          description: "JSON value of insight tool result"
          examples:
            - {"content": " was there anything else that I can assist you with other than this", "role": "assistant", "start_time": 289}
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp at which insight tool result was created"
          examples:
            - "2025-05-02T00:00:00Z"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp at which insight tool result was last updated"
          examples:
            - "2025-05-03T00:00:00Z"
      type: "object"
      required:
        - "id"
        - "insight_tool_id"
        - "insight_tool_version"
        - "insight_key"
        - "json_value"
      title: "InsightsOutput"
      description: "Response model for an insight tool."
    "InsightsProperties":
      type: "string"
      enum:
        - "id"
        - "session_id"
        - "upload_file_id"
        - "workflow_id"
        - "upload_folder_id"
        - "insight_key"
        - "insight_tool_id"
      title: "InsightsProperties"
    "InsightsUploadFile":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "System-assigned ID for the upload file"
          examples:
            - 182764
        "folder_id":
          type: "integer"
          title: "Folder Id"
          description: "System-assigned ID for the folder to which the file belongs"
          examples:
            - 182764
        "filename":
          type: "string"
          title: "Filename"
          description: "Name of the uploaded file"
          examples:
            - "customer-complaints.wav"
        "object_key":
          type: "string"
          title: "Object Key"
          description: "Object-store key of the uploaded file"
          examples:
            - "UPLOAD_CALL_ID/recording/2025/04/22/15/00/ce7d212e-80b0-4f0b-9e01-74322f146611.mp3"
        "call_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Call Id"
          description: "Unique identifier for the call associated with the uploaded file"
          examples:
            - "12345"
        "agent_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Number"
          description: "Agent number associated with the uploaded file"
          examples:
            - "1234567890"
        "customer_number":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Customer Number"
          description: "Customer number associated with the uploaded file"
          examples:
            - "0987654321"
        "duration":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Duration"
          description: "Length in seconds of the uploaded recording"
          examples:
            - 305.5
        "start_time":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "Start Time"
          description: "Start time of the uploaded file"
          examples:
            - "2025-05-02T00:00:00Z"
        "end_time":
          anyOf:
            - type: "string"
              format: "date-time"
            - type: "null"
          title: "End Time"
          description: "End time of the uploaded file"
          examples:
            - "2025-05-03T00:00:00Z"
        "error_message":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Error Message"
          description: "Error message associated with the uploaded file"
          examples:
            - "File not found"
        "metadata":
          anyOf:
            - additionalProperties:
                anyOf:
                  - type: "string"
                  - type: "integer"
                  - type: "number"
              type: "object"
            - type: "null"
          title: "Metadata"
          description: "Meta-data associated with the uploaded file"
          examples:
            - {"duration": "00:10:00", "size": "10MB"}
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp at which insight upload file was created"
          examples:
            - "2025-05-02T00:00:00Z"
      type: "object"
      required:
        - "id"
        - "folder_id"
        - "filename"
        - "object_key"
      title: "InsightsUploadFile"
      description: "Response model for an insight upload file."
    "InsightsUploadFileProperties":
      type: "string"
      enum:
        - "filename"
        - "call_id"
        - "agent_number"
        - "customer_number"
        - "duration"
        - "start_time"
        - "end_time"
        - "created_at"
      title: "InsightsUploadFileProperties"
    "InsightsWorkflowQueueSession":
      properties:
        "workflow_name":
          type: "string"
          title: "Workflow Name"
          description: "Unique name for workflow"
          examples:
            - "summary-workflow"
        "session_id_list":
          anyOf:
            - items:
                type: "integer"
              type: "array"
            - type: "null"
          title: "Session Id List"
          description: "List of session identifiers"
          examples:
            - "[12334,23445,34556]"
        "file_id_list":
          anyOf:
            - items:
                type: "integer"
              type: "array"
            - type: "null"
          title: "File Id List"
          description: "List of file IDs to be processed. This is only applicable for upload folders"
          examples:
            - "[1234,1678,2224]"
      type: "object"
      required:
        - "workflow_name"
      title: "InsightsWorkflowQueueSession"
      description: "Session identifier for workflow queue."
    "InspectLatencyResponse":
      properties:
        "session_id":
          type: "string"
          title: "Session Id"
        "timeline":
          items: {"$ref": "#/components/schemas/LatencyEntry"}
          type: "array"
          title: "Timeline"
        "summary":
          items: {"$ref": "#/components/schemas/SummaryEntry"}
          type: "array"
          title: "Summary"
      type: "object"
      required:
        - "session_id"
        - "timeline"
      title: "InspectLatencyResponse"
      description: "This is a report of the time spent in each operation during this session. It contains a timeline,\nwhich lists the operations in the order they were executed, and a summary, which aggregates the\noperations by category and sub-category."
    "InternalTool":
      properties:
        "type":
          type: "string"
          const: "function"
          title: "Type"
          description: "Always `function`."
          default: "function"
          examples:
            - "function"
        "function": {"$ref": "#/components/schemas/ToolFunction", "description": "The tool function definition, including the JSON Schema of its parameters.", "examples": []}
      type: "object"
      required:
        - "function"
      title: "InternalTool"
      description: "A tool definition to be used by the OpenAI API."
    "LanguageCode":
      type: "string"
      enum:
        - "yue-HK"
        - "en-US"
        - "ko-KR"
        - "zh-CN"
        - "es-US"
        - "th-TH"
        - "vi-VN"
      title: "LanguageCode"
      description: "BCP 47 codes of languages that Syllable supports."
    "LanguageConfig":
      properties:
        "language_code": {"$ref": "#/components/schemas/LanguageCode", "description": "BCP 47 code of the language", "examples": ["en-US"]}
        "voice_provider": {"$ref": "#/components/schemas/TtsProvider", "description": "TTS provider of the voice to use for the language", "examples": ["OpenAI"]}
        "voice_display_name": {"$ref": "#/components/schemas/AgentVoiceDisplayName", "description": "Display name of the voice to use for the language", "examples": ["Alloy"]}
        "voice_speed":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Voice Speed"
          description: "Speed of the voice in the range of 0.25 to 4.0 (OpenAI and Google) or 0.7 to 1.2 (ElevenLabs). Standard speed is 1.0."
          examples:
            - 1
        "voice_pitch":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Voice Pitch"
          description: "Pitch of the voice in the range of -20.0 to 20.0. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch. 0 means use the original pitch. Only supported for Google configs."
          examples:
            - 0
        "dtmf_code":
          type: "integer"
          title: "Dtmf Code"
          description: "DTMF code that should be used for the language in the menu generated from the language group."
          examples:
            - 1
      type: "object"
      required:
        - "language_code"
        - "voice_provider"
        - "voice_display_name"
        - "dtmf_code"
      title: "LanguageConfig"
      description: "Voice and DTMF configurations for a language in a language group. List of available voices\nand their supported languages can be fetched from `GET /agents/voices/available/`."
    "LanguageGroupAgentInfo":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the agent"
          examples:
            - 1
        "name":
          type: "string"
          title: "Name"
          description: "The name of the agent"
          examples:
            - "Test Agent"
      type: "object"
      required:
        - "id"
        - "name"
      title: "LanguageGroupAgentInfo"
      description: "Information about an agent linked to a language group."
    "LanguageGroupCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the language group."
          examples:
            - "Call Center 1 Languages"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the language group."
          examples:
            - "Languages spoken by operators at Call Center 1"
        "language_configs":
          items: {"$ref": "#/components/schemas/LanguageConfig"}
          type: "array"
          title: "Language Configs"
          description: "Voice and DTMF configurations for each language in the group."
          examples:
            - [{"dtmf_code": 1, "language_code": "en-US", "voice_display_name": "Alloy", "voice_provider": "OpenAI"}, {"dtmf_code": 2, "language_code": "es-US", "voice_display_name": "Alejandro", "voice_provider": "Google"}]
        "skip_current_language_in_message":
          type: "boolean"
          title: "Skip Current Language In Message"
          description: "Whether a custom message using the language group to generate a language DTMF menu should skip the agent's current language in the menu."
          examples:
            - true
      type: "object"
      required:
        - "name"
        - "language_configs"
        - "skip_current_language_in_message"
      title: "LanguageGroupCreateRequest"
      description: "Request model to create a language group."
    "LanguageGroupProperties":
      type: "string"
      enum:
        - "name"
        - "description"
        - "skip_current_language_in_message"
        - "updated_at"
        - "last_updated_by"
      title: "LanguageGroupProperties"
      description: "Names of language group fields supported for filtering/sorting on list endpoint."
    "LanguageGroupResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the language group."
          examples:
            - "Call Center 1 Languages"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the language group."
          examples:
            - "Languages spoken by operators at Call Center 1"
        "language_configs":
          items: {"$ref": "#/components/schemas/LanguageConfig"}
          type: "array"
          title: "Language Configs"
          description: "Voice and DTMF configurations for each language in the group."
          examples:
            - [{"dtmf_code": 1, "language_code": "en-US", "voice_display_name": "Alloy", "voice_provider": "OpenAI"}, {"dtmf_code": 2, "language_code": "es-US", "voice_display_name": "Alejandro", "voice_provider": "Google"}]
        "skip_current_language_in_message":
          type: "boolean"
          title: "Skip Current Language In Message"
          description: "Whether a custom message using the language group to generate a language DTMF menu should skip the agent's current language in the menu."
          examples:
            - true
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the language group to update."
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "Comments for the most recent edit to the language group."
          examples:
            - "Added Spanish support."
        "agents_info":
          anyOf:
            - items: {"$ref": "#/components/schemas/LanguageGroupAgentInfo"}
              type: "array"
            - type: "null"
          title: "Agents Info"
          description: "IDs and names of the agents linked to the language group"
          examples:
            - [{"id": 1, "name": "Test Agent"}]
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of the last update to the language group."
          examples:
            - "2024-01-01T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of the user who last updated the language group."
          examples:
            - "user@mail.com"
      type: "object"
      required:
        - "name"
        - "language_configs"
        - "skip_current_language_in_message"
        - "id"
        - "updated_at"
        - "last_updated_by"
      title: "LanguageGroupResponse"
      description: "Response model for language group operations.\nA language group is a collection of language, voice, and DTMF configuration that can be\nlinked to an agent to define the languages and voices it supports. For more information, see\n[Console docs](https://docs.syllable.ai/Resources/LanguageGroups)."
    "LanguageGroupUpdateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the language group."
          examples:
            - "Call Center 1 Languages"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of the language group."
          examples:
            - "Languages spoken by operators at Call Center 1"
        "language_configs":
          items: {"$ref": "#/components/schemas/LanguageConfig"}
          type: "array"
          title: "Language Configs"
          description: "Voice and DTMF configurations for each language in the group."
          examples:
            - [{"dtmf_code": 1, "language_code": "en-US", "voice_display_name": "Alloy", "voice_provider": "OpenAI"}, {"dtmf_code": 2, "language_code": "es-US", "voice_display_name": "Alejandro", "voice_provider": "Google"}]
        "skip_current_language_in_message":
          type: "boolean"
          title: "Skip Current Language In Message"
          description: "Whether a custom message using the language group to generate a language DTMF menu should skip the agent's current language in the menu."
          examples:
            - true
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the language group to update."
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "Comments for the most recent edit to the language group."
          examples:
            - "Added Spanish support."
      type: "object"
      required:
        - "name"
        - "language_configs"
        - "skip_current_language_in_message"
        - "id"
      title: "LanguageGroupUpdateRequest"
      description: "Request model to update an existing language group."
    "LatencyCategory":
      type: "string"
      enum:
        - "tts"
        - "stt"
        - "llm"
        - "tool"
        - "http"
      title: "LatencyCategory"
    "LatencyEntry":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
        "measurement_start":
          type: "string"
          format: "date-time"
          title: "Measurement Start"
        "category": {"$ref": "#/components/schemas/LatencyCategory"}
        "label":
          type: "string"
          title: "Label"
        "metadata":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Metadata"
        "unit_type": {"$ref": "#/components/schemas/LatencyUnitType"}
        "value":
          type: "number"
          title: "Value"
        "value_str":
          type: "string"
          title: "Value Str"
        "time_delta":
          type: "string"
          title: "Time Delta"
      type: "object"
      required:
        - "timestamp"
        - "measurement_start"
        - "category"
        - "label"
        - "unit_type"
        - "value"
        - "value_str"
        - "time_delta"
      title: "LatencyEntry"
      description: "Data model for latency entries."
    "LatencyUnitType":
      type: "string"
      enum:
        - "minutes"
        - "seconds"
        - "milliseconds"
        - "microseconds"
        - "nanoseconds"
      title: "LatencyUnitType"
    "ListResponse_AgentResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/AgentResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[AgentResponse]"
    "ListResponse_AvailableTarget_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/AvailableTarget"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[AvailableTarget]"
    "ListResponse_ChannelTargetResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/ChannelTargetResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[ChannelTargetResponse]"
    "ListResponse_Channel_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/Channel"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[Channel]"
    "ListResponse_CommunicationBatch_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/CommunicationBatch"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[CommunicationBatch]"
    "ListResponse_Conversation_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/Conversation"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[Conversation]"
    "ListResponse_CustomMessageResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/CustomMessageResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[CustomMessageResponse]"
    "ListResponse_DashboardResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/DashboardResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[DashboardResponse]"
    "ListResponse_DataSourceMetadataResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/DataSourceMetadataResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[DataSourceMetadataResponse]"
    "ListResponse_DirectoryMember_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/DirectoryMember"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[DirectoryMember]"
    "ListResponse_Event_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/Event"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[Event]"
    "ListResponse_IncidentResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/IncidentResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[IncidentResponse]"
    "ListResponse_InsightToolOutput_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/InsightToolOutput"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[InsightToolOutput]"
    "ListResponse_InsightWorkflowOutput_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/InsightWorkflowOutput"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[InsightWorkflowOutput]"
    "ListResponse_InsightsFolder_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/InsightsFolder"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[InsightsFolder]"
    "ListResponse_InsightsOutput_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/InsightsOutput"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[InsightsOutput]"
    "ListResponse_InsightsUploadFile_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/InsightsUploadFile"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[InsightsUploadFile]"
    "ListResponse_LanguageGroupResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/LanguageGroupResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[LanguageGroupResponse]"
    "ListResponse_OutboundCampaign_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/OutboundCampaign"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[OutboundCampaign]"
    "ListResponse_PromptResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/PromptResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[PromptResponse]"
    "ListResponse_ServiceResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/ServiceResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[ServiceResponse]"
    "ListResponse_SessionLabel_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/SessionLabel"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[SessionLabel]"
    "ListResponse_Session_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/Session"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[Session]"
    "ListResponse_ToolResponse_":
      properties:
        "items":
          items: {"$ref": "#/components/schemas/ToolResponse"}
          type: "array"
          title: "Items"
          description: "List of items returned from the query"
        "page":
          type: "integer"
          title: "Page"
          description: "The page number of the results (0-based)"
          examples:
            - 0
        "page_size":
          type: "integer"
          title: "Page Size"
          description: "The number of items returned per page"
          examples:
            - 25
        "total_pages":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Pages"
          description: "The total number of pages of results given the indicated page size"
          examples:
            - 4
        "total_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Total Count"
          description: "The total number of items returned from the query"
          examples:
            - 100
      type: "object"
      required:
        - "items"
        - "page"
        - "page_size"
      title: "ListResponse[ToolResponse]"
    "OrderByDirection":
      type: "string"
      enum:
        - "asc"
        - "desc"
      title: "OrderByDirection"
      description: "The direction in which to order list results, either ascending or descending."
    "OutboundCampaign":
      properties:
        "campaign_name":
          type: "string"
          title: "Campaign Name"
          description: "Human readable name of campaign"
          examples:
            - "Outbound Campaign 1"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of campaign"
          examples:
            - "This is a test campaign"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "Label for campaign"
          examples:
            - "test"
            - "demo"
        "campaign_variables":
          additionalProperties:
            type: "string"
          type: "object"
          title: "Campaign Variables"
          description: "Variables for campaign"
          examples:
            - {"key": "value", "key2": "value2"}
        "daily_start_time":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Daily Start Time"
          description: "Start time of campaign each day"
          examples:
            - "09:00:00"
        "daily_end_time":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Daily End Time"
          description: "End time of campaign each day"
          examples:
            - "17:00:00"
        "source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source"
          description: "Source phone number, email, or SMS number"
          examples:
            - "+19032900844"
            - "account@email.com"
        "caller_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Caller Id"
          description: "Caller ID for call"
          examples:
            - 19995551234
        "hourly_rate":
          type: "integer"
          title: "Hourly Rate"
          description: "Target number of outreach calls per hour"
          default: 1
          examples:
            - 25
        "retry_count":
          type: "integer"
          title: "Retry Count"
          description: "Number of retries per target"
          default: 0
          examples:
            - 1
        "retry_interval":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Retry Interval"
          description: "How long to wait before retrying"
          examples:
            - "30m"
            - "12h"
            - "7d"
        "active_days":
          items: {"$ref": "#/components/schemas/DaysOfWeek"}
          type: "array"
          title: "Active Days"
          description: "Days of the week when campaign is active"
          examples:
            - "[\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"]"
        "id":
          type: "integer"
          title: "Id"
          description: "Unique ID for campaign"
          examples:
            - 1
        "agent_id":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Agent Id"
          description: "ID of agent assigned to campaign"
          examples:
            - "agent_id"
        "created_at":
          type: "string"
          format: "date-time"
          title: "Created At"
          description: "Timestamp of campaign creation"
          examples:
            - "2025-05-03T00:00:00Z"
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
          description: "Timestamp of campaign update"
          examples:
            - "2025-05-03T00:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "Email of user who last updated campaign"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "campaign_name"
        - "campaign_variables"
        - "caller_id"
        - "active_days"
        - "id"
        - "last_updated_by"
      title: "OutboundCampaign"
    "OutboundCampaignInput":
      properties:
        "campaign_name":
          type: "string"
          title: "Campaign Name"
          description: "Human readable name of campaign"
          examples:
            - "Outbound Campaign 1"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "Description of campaign"
          examples:
            - "This is a test campaign"
        "label":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Label"
          description: "Label for campaign"
          examples:
            - "test"
            - "demo"
        "campaign_variables":
          additionalProperties:
            type: "string"
          type: "object"
          title: "Campaign Variables"
          description: "Variables for campaign"
          examples:
            - {"key": "value", "key2": "value2"}
        "daily_start_time":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Daily Start Time"
          description: "Start time of campaign each day"
          examples:
            - "09:00:00"
        "daily_end_time":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Daily End Time"
          description: "End time of campaign each day"
          examples:
            - "17:00:00"
        "source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source"
          description: "Source phone number, email, or SMS number"
          examples:
            - "+19032900844"
            - "account@email.com"
        "caller_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Caller Id"
          description: "Caller ID for call"
          examples:
            - 19995551234
        "hourly_rate":
          type: "integer"
          title: "Hourly Rate"
          description: "Target number of outreach calls per hour"
          default: 1
          examples:
            - 25
        "retry_count":
          type: "integer"
          title: "Retry Count"
          description: "Number of retries per target"
          default: 0
          examples:
            - 1
        "retry_interval":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Retry Interval"
          description: "How long to wait before retrying"
          examples:
            - "30m"
            - "12h"
            - "7d"
        "active_days":
          items: {"$ref": "#/components/schemas/DaysOfWeek"}
          type: "array"
          title: "Active Days"
          description: "Days of the week when campaign is active"
          examples:
            - "[\"mon\", \"tue\", \"wed\", \"thu\", \"fri\"]"
      type: "object"
      required:
        - "campaign_name"
        - "campaign_variables"
        - "caller_id"
        - "active_days"
      title: "OutboundCampaignInput"
    "PromptCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The prompt name"
          examples:
            - "Weather Agent Prompt"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the prompt"
          examples:
            - "Prompt for a weather agent."
        "type":
          type: "string"
          title: "Type"
          description: "The type of the prompt"
          examples:
            - "prompt_v1"
        "context":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Context"
          description: "The prompt text that will be sent to the LLM at the beginning of the conversation"
          examples:
            - "You are a weather agent. Answer the user's questions about weather and nothing else."
        "tools":
          items:
            type: "string"
          type: "array"
          title: "Tools"
          description: "Names of tools to which the prompt has access"
          default: []
          examples:
            - ["summary", "hangup"]
        "llm_config": {"$ref": "#/components/schemas/PromptLlmConfig", "description": "The configuration for the LLM that the prompt uses", "examples": [{"model": "gpt-4o", "provider": "openai", "version": "2024-08-06"}]}
        "include_default_tools":
          type: "boolean"
          title: "Include Default Tools"
          description: "Whether to include the default tools (`hangup`) in the list of tools for the prompt. If you disable this during creation, you might want to disable it during updates as well, otherwise the default tools will be added when updating the prompt."
          default: true
          examples:
            - true
      type: "object"
      required:
        - "name"
        - "type"
        - "llm_config"
      title: "PromptCreateRequest"
      description: "Request model to create a prompt."
    "PromptHistory":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Timestamp of the change"
          examples:
            - "2024-01-01T12:00:00Z"
        "prompt_id":
          type: "string"
          title: "Prompt Id"
          description: "ID of the prompt"
          examples:
            - "1"
        "prompt_text":
          type: "string"
          title: "Prompt Text"
          description: "Text of the prompt"
          examples:
            - "You are a weather agent. Answer the user's questions about weather and nothing else."
        "prompt_description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Description"
          description: "Description of the prompt"
          examples:
            - "Prompt for a weather agent."
        "prompt_name":
          type: "string"
          title: "Prompt Name"
          description: "Name of the prompt"
          examples:
            - "Weather Agent Prompt"
        "llm_config":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Llm Config"
          description: "String representation of LLM config for the prompt"
        "comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comments"
          description: "Comments describing the change"
          examples:
            - "Updated prompt text to include requirement to not answer questions that aren't about weather."
        "user_email":
          type: "string"
          title: "User Email"
          description: "Email address of the user who made the change"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "timestamp"
        - "prompt_id"
        - "prompt_text"
        - "prompt_name"
        - "user_email"
      title: "PromptHistory"
      description: "Record of a change to a prompt. Values reflect post-change state."
    "PromptLlmConfig":
      properties:
        "provider": {"$ref": "#/components/schemas/PromptLlmProvider", "description": "Provider of the LLM model.", "default": "azure_openai", "examples": ["azure_openai", "google", "openai"]}
        "model":
          type: "string"
          title: "Model"
          description: "Name of the model. Must match the deployment name in Azure AI Studio."
          default: "gpt-4o"
          examples:
            - "gpt-4o"
        "version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Version"
          description: "Optional model version."
          examples:
            - "2024-05-13"
        "api_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Api Version"
          description: "Version of the provider's API."
          examples:
            - "2024-06-01"
        "temperature":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Temperature"
          description: "Temperature parameter for the model. Determines randomness of responses - higher is more random, lower is more focused. Must be between 0.0 and 2.0, inclusive."
          examples:
            - 1
        "seed":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Seed"
          description: "Controls the reproducibility of the job. The LLM will give the same or similar responses given the same inputs in multiple conversations with the same seed."
          examples:
            - 123
      type: "object"
      title: "PromptLlmConfig"
      description: "LLM configuration for a prompt."
    "PromptLlmProvider":
      type: "string"
      enum:
        - "azure_openai"
        - "google"
        - "openai"
      title: "PromptLlmProvider"
      description: "LLM API provider."
    "PromptProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "name_exact"
        - "description"
        - "name_description"
        - "context"
        - "tools"
        - "llm_config"
        - "last_updated"
        - "last_updated_by"
        - "agent_count"
      title: "PromptProperties"
      description: "Names of prompt fields supported for filtering/sorting on list endpoint."
    "PromptResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The prompt name"
          examples:
            - "Weather Agent Prompt"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the prompt"
          examples:
            - "Prompt for a weather agent."
        "type":
          type: "string"
          title: "Type"
          description: "The type of the prompt"
          examples:
            - "prompt_v1"
        "context":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Context"
          description: "The prompt text that will be sent to the LLM at the beginning of the conversation"
          examples:
            - "You are a weather agent. Answer the user's questions about weather and nothing else."
        "tools":
          items:
            type: "string"
          type: "array"
          title: "Tools"
          description: "Names of the tools to which the prompt has access (DEPRECATED - use information from full tools field instead)"
          default: []
          deprecated: true
          examples:
            - "hangup"
            - "summary"
        "llm_config": {"$ref": "#/components/schemas/PromptLlmConfig", "description": "The configuration for the LLM that the prompt uses", "examples": [{"model": "gpt-4o", "provider": "openai", "version": "2024-08-06"}]}
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the prompt"
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "The comments for the most recent edit to the prompt"
          examples:
            - "Updated prompt text to include requirement to not answer questions that aren't about weather."
        "last_updated":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated"
          description: "The last updated date of the prompt"
          examples:
            - "2024-01-01T12:00:00Z"
        "last_updated_by":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated By"
          description: "Email address of the user who most recently updated the prompt"
          examples:
            - "user@email.com"
        "agent_count":
          anyOf:
            - type: "integer"
            - type: "null"
          title: "Agent Count"
          description: "The number of agents using the prompt"
          examples:
            - 5
        "tools_full":
          anyOf:
            - items: {"$ref": "#/components/schemas/ToolResponse"}
              type: "array"
            - type: "null"
          title: "Tools Full"
          description: "Full definitions of tools to which the prompt has access"
      type: "object"
      required:
        - "name"
        - "type"
        - "llm_config"
        - "id"
        - "last_updated"
      title: "PromptResponse"
      description: "Response model for prompt operations.\nA prompt defines the behavior of an agent by delivering instructions to the LLM about how the\nagent should behave. A prompt can be linked to one or more agents. A prompt can also be linked to\ntools to allow an agent using it to use those tools. For more information, see\n[Console docs](https://docs.syllable.ai/Resources/Prompts)."
    "PromptUpdateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The prompt name"
          examples:
            - "Weather Agent Prompt"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the prompt"
          examples:
            - "Prompt for a weather agent."
        "type":
          type: "string"
          title: "Type"
          description: "The type of the prompt"
          examples:
            - "prompt_v1"
        "context":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Context"
          description: "The prompt text that will be sent to the LLM at the beginning of the conversation"
          examples:
            - "You are a weather agent. Answer the user's questions about weather and nothing else."
        "tools":
          items:
            type: "string"
          type: "array"
          title: "Tools"
          description: "Names of tools to which the prompt has access"
          default: []
          examples:
            - ["summary", "hangup"]
        "llm_config": {"$ref": "#/components/schemas/PromptLlmConfig", "description": "The configuration for the LLM that the prompt uses", "examples": [{"model": "gpt-4o", "provider": "openai", "version": "2024-08-06"}]}
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the prompt"
          examples:
            - 1
        "edit_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Edit Comments"
          description: "The comments for the most recent edit to the prompt"
          examples:
            - "Updated prompt text to include requirement to not answer questions that aren't about weather."
        "include_default_tools":
          type: "boolean"
          title: "Include Default Tools"
          description: "Whether to include the default tools (`hangup`) in the list of tools for the prompt. If you remove one of the default tools from your prompt, you might want to disable this option so that the tool is not added again when updated."
          default: true
          examples:
            - true
      type: "object"
      required:
        - "name"
        - "type"
        - "llm_config"
        - "id"
      title: "PromptUpdateRequest"
      description: "Request model to update an existing prompt."
    "RequestStatus":
      type: "string"
      enum:
        - "PENDING"
        - "DUPLICATE"
        - "INITIATED"
        - "CONNECTED"
        - "FAILED"
        - "CANCELED"
      title: "RequestStatus"
      description: "Status of a communication request."
    "ServiceCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the service"
          examples:
            - "Weather tools"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the service"
          examples:
            - "Service containing tools for fetching weather information"
      type: "object"
      required:
        - "name"
        - "description"
      title: "ServiceCreateRequest"
      description: "Request model to create a service."
    "ServiceProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "description"
        - "updated_at"
        - "last_updated_by"
      title: "ServiceProperties"
      description: "Names of service fields supported for filtering/sorting on list endpoint."
    "ServiceResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the service"
          examples:
            - "Weather tools"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the service"
          examples:
            - "Service containing tools for fetching weather information"
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the service"
          examples:
            - 1
        "last_updated_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated Comments"
          description: "Free text providing comment about what was updated"
          examples:
            - "Updated description to correct typo"
        "last_updated":
          type: "string"
          format: "date-time"
          title: "Last Updated"
          description: "The timestamp of the most recent update to the service"
          examples:
            - "2024-01-01T12:00:00Z"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "The email of the user who last updated the service"
          examples:
            - "user@email.com"
        "tools":
          items:
            type: "string"
          type: "array"
          title: "Tools"
          description: "Names of tools that belong to the service"
          examples:
            - ["hangup", "summary"]
      type: "object"
      required:
        - "name"
        - "description"
        - "id"
        - "last_updated"
        - "last_updated_by"
        - "tools"
      title: "ServiceResponse"
      description: "Response model for service operations. A service is a collection of tools."
    "ServiceUpdateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the service"
          examples:
            - "Weather tools"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the service"
          examples:
            - "Service containing tools for fetching weather information"
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the service"
          examples:
            - 1
        "last_updated_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated Comments"
          description: "Free text providing comment about what was updated"
          examples:
            - "Updated description to correct typo"
      type: "object"
      required:
        - "name"
        - "description"
        - "id"
      title: "ServiceUpdateRequest"
      description: "Request model to update an existing service."
    "Session":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Timestamp of the session"
        "session_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Session Id"
          description: "Internal ID of the session, generated based on interaction details"
        "conversation_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Conversation Id"
          description: "ID of the conversation of which the session is a part"
        "channel_manager_service":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel Manager Service"
          description: "Name of the service used to facilitate the session"
          examples:
            - "hedy"
            - "console"
        "channel_manager_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel Manager Type"
          description: "Type of the service used to facilitate the session"
          examples:
            - "voice_sip_v1"
            - "voice_twilio_v1"
            - "web_chat_v1"
        "channel_manager_sid":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Channel Manager Sid"
          description: "Channel-manager-side ID of the session (different from session_id)"
        "agent_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Id"
          description: "ID of the agent with which the session occurred"
        "agent_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Name"
          description: "Name of the agent with which the session occurred"
        "agent_type":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Type"
          description: "Type of the agent with which the session occurred"
        "agent_timezone":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Agent Timezone"
          description: "Timezone of the agent with which the session occurred"
        "prompt_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Id"
          description: "ID of the prompt used by the agent with which the session occurred"
        "prompt_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Name"
          description: "Name of the prompt used by the agent with which the session occurred"
        "prompt_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Prompt Version"
          description: "Version of the prompt used by the agent with which the session occurred"
        "duration":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Duration"
          description: "Duration of the session in seconds"
        "session_label_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Session Label Id"
          description: "ID of the label (listing the quality of the session and any issues that occurred) associated with the session"
        "source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source"
          description: "Source of the session (e.g., for an inbound session, the user's phone number/username/email)"
          examples:
            - "+18042221111"
            - "user@email.com"
        "target":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Target"
          description: "The name of the channel target associated with the agent at the time of the session (see ChannelTargetResponse.target)"
        "is_legacy":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Legacy"
          description: "Whether the session occurred on the legacy Syllable system"
        "is_test":
          anyOf:
            - type: "boolean"
            - type: "null"
          title: "Is Test"
          description: "Whether the session is a test session"
      type: "object"
      required:
        - "timestamp"
      title: "Session"
      description: "A session is a building block of a conversation."
    "SessionAction":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Timestamp of the tool invocation"
        "tool_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tool Name"
          description: "Name of the tool that was invoked"
        "tool_request":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tool Request"
          description: "Request sent to the tool API, if applicable"
        "tool_result":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tool Result"
          description: "Response received from the tool API, if applicable"
        "tool_error":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Tool Error"
          description: "Error received from the tool API, if applicable"
      type: "object"
      required:
        - "timestamp"
      title: "SessionAction"
      description: "Information about a given tool invocation as part of a session."
    "SessionData":
      properties:
        "session_id":
          type: "integer"
          title: "Session Id"
          description: "Session ID"
          examples:
            - "123"
        "source":
          type: "string"
          title: "Source"
          description: "Session source"
          examples:
            - "+1234567890"
        "target":
          type: "string"
          title: "Target"
          description: "Session target"
          examples:
            - "+1239876543"
        "is_test":
          type: "boolean"
          title: "Is Test"
          description: "Is test session"
          examples:
            - false
        "messages":
          items: {"$ref": "#/components/schemas/SessionMessage"}
          type: "array"
          title: "Messages"
          description: "Session messages"
      type: "object"
      required:
        - "session_id"
        - "source"
        - "target"
        - "is_test"
        - "messages"
      title: "SessionData"
    "SessionLabel":
      properties:
        "session_id":
          type: "integer"
          title: "Session Id"
          description: "The internal ID of the session (see Session.session_id)"
          examples:
            - 1
        "type":
          type: "string"
          title: "Type"
          description: "The type of the label (either \"auto-rating\" or \"human-rating\")"
          examples:
            - "auto-rating"
            - "human-rating"
        "code":
          type: "string"
          title: "Code"
          description: "A code describing the quality of the labeled session (either \"GOOD\", \"OK\", \"BAD\", or \"N/A\")"
          examples:
            - "GOOD"
            - "OK"
            - "BAD"
            - "N/A"
        "user_email":
          type: "string"
          title: "User Email"
          description: "The email of the user who created the label"
          examples:
            - "user@email.com"
        "comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comments"
          description: "Comment string describing additional details about the session"
        "issue_categories":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Issue Categories"
          description: "Descriptions of issues occurring in the labeled call"
          default: []
          examples:
            - ["Silent treatment"]
            - ["Speech transcription (STT)"]
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the label"
          examples:
            - 1
        "timestamp":
          type: "string"
          title: "Timestamp"
          description: "The timestamp at which the label was created"
          examples:
            - "2024-01-01T12:00:00Z"
      type: "object"
      required:
        - "session_id"
        - "type"
        - "code"
        - "user_email"
        - "id"
        - "timestamp"
      title: "SessionLabel"
      description: "Response model for session label operations.\nA session label is associated with a given session and contains an evaluation of quality and\ndescriptions of issues the user encountered in that session or other details."
    "SessionLabelCreate":
      properties:
        "session_id":
          type: "integer"
          title: "Session Id"
          description: "The internal ID of the session (see Session.session_id)"
          examples:
            - 1
        "type":
          type: "string"
          title: "Type"
          description: "The type of the label (either \"auto-rating\" or \"human-rating\")"
          examples:
            - "auto-rating"
            - "human-rating"
        "code":
          type: "string"
          title: "Code"
          description: "A code describing the quality of the labeled session (either \"GOOD\", \"OK\", \"BAD\", or \"N/A\")"
          examples:
            - "GOOD"
            - "OK"
            - "BAD"
            - "N/A"
        "user_email":
          type: "string"
          title: "User Email"
          description: "The email of the user who created the label"
          examples:
            - "user@email.com"
        "comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Comments"
          description: "Comment string describing additional details about the session"
        "issue_categories":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Issue Categories"
          description: "Descriptions of issues occurring in the labeled call"
          default: []
          examples:
            - ["Silent treatment"]
            - ["Speech transcription (STT)"]
      type: "object"
      required:
        - "session_id"
        - "type"
        - "code"
        - "user_email"
      title: "SessionLabelCreate"
    "SessionLabelProperties":
      type: "string"
      enum:
        - "timestamp"
        - "session_id"
        - "type"
        - "code"
        - "user_email"
        - "issue_categories"
        - "session_id_list"
      title: "SessionLabelProperties"
    "SessionMessage":
      properties:
        "role": {"$ref": "#/components/schemas/DialogRole", "description": "Dialog role", "examples": ["agent", "user"]}
        "dialog": {"$ref": "#/components/schemas/DialogMessage", "description": "Dialog message"}
        "tool_calls":
          items: {"$ref": "#/components/schemas/DialogToolCall"}
          type: "array"
          title: "Tool Calls"
          description: "Tool calls"
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Message timestamp"
          examples:
            - "2024-06-19T00:00:00"
      type: "object"
      required:
        - "role"
        - "dialog"
        - "tool_calls"
        - "timestamp"
      title: "SessionMessage"
    "SessionProperties":
      type: "string"
      enum:
        - "timestamp"
        - "session_id"
        - "conversation_id"
        - "channel_manager_service"
        - "channel_manager_type"
        - "channel_manager_sid"
        - "agent_type"
        - "agent_id"
        - "agent_name"
        - "prompt_id"
        - "prompt_name"
        - "source"
        - "target"
        - "duration"
        - "is_legacy"
        - "is_test"
      title: "SessionProperties"
      description: "Names of session fields supported for filtering/sorting on list endpoint."
    "SessionRecordingResponse":
      properties:
        "session_id":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Session Id"
          description: "The internal ID of the session"
          examples:
            - 1
        "recordings":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Recordings"
          description: "List of recording URLs"
          examples:
            - ["https://example.com/recording1.mp3", "https://example.com/recording2.mp3"]
      type: "object"
      title: "SessionRecordingResponse"
      description: "Recording URLs for a given session."
    "SessionSummaryResponse":
      properties:
        "summary":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Summary"
          description: "The AI summary of the session"
          examples:
            - "The customer service agent successfully assisted the caller with their inquiry and the call ended positively."
        "rating":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Rating"
          description: "The AI rating of the session"
          examples:
            - "Good"
      type: "object"
      title: "SessionSummaryResponse"
      description: "AI summary information for a given session."
    "SessionText":
      properties:
        "timestamp":
          type: "string"
          format: "date-time"
          title: "Timestamp"
          description: "Timestamp of the message"
        "lang":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Lang"
          description: "ISO 639 code of the language used for the message (may appear as \"unset\" if was not conclusively determined)"
          examples:
            - "en-US"
            - "es-US"
            - "unset"
        "source":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Source"
          description: "Whether the user or agent sent the message"
          examples:
            - "user"
            - "agent"
        "text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Text"
          description: "Content of the message"
      type: "object"
      required:
        - "timestamp"
      title: "SessionText"
      description: "Information about a given message from a user to an agent or vice-versa."
    "SessionTranscriptionResponse":
      properties:
        "session_id":
          type: "string"
          title: "Session Id"
          description: "Internal ID of the session"
        "transcription":
          items: {"$ref": "#/components/schemas/SessionText"}
          type: "array"
          title: "Transcription"
          description: "Transcriptions of all messages in the session"
        "actions":
          items: {"$ref": "#/components/schemas/SessionAction"}
          type: "array"
          title: "Actions"
          description: "Tool invocations that occurred during the session"
      type: "object"
      required:
        - "session_id"
        - "transcription"
        - "actions"
      title: "SessionTranscriptionResponse"
      description: "Text transcript of a given session. For more information, see\n[Console docs](https://docs.syllable.ai/workspaces/Sessions)."
    "StaticToolParameter":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the parameter - must be unique within the tool."
          examples:
            - "temperature_unit"
        "description":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Description"
          description: "The description of the parameter."
          examples:
            - "Whether the temperature information should be fetched in celsius or fahrenheit."
        "required":
          type: "boolean"
          title: "Required"
          description: "Whether the parameter is required to have a value assigned."
          examples:
            - true
        "type": {"$ref": "#/components/schemas/StaticToolParameterType", "description": "The expected type for the parameter.", "examples": ["string"]}
        "default":
          anyOf:
            - {}
            - type: "null"
          title: "Default"
          description: "The default value for the parameter. If `type` is string, must be a string. If `type` is int, must be an int. If `type` is boolean, must be a boolean. If `type` is data_source_list, must be a list of strings (data source names)."
          examples:
            - "fahrenheit"
      type: "object"
      required:
        - "name"
        - "required"
        - "type"
      title: "StaticToolParameter"
      description: "A parameter for the tool whose value should be set at config time."
    "StaticToolParameterType":
      type: "string"
      enum:
        - "string"
        - "int"
        - "boolean"
        - "data_source_list"
      title: "StaticToolParameterType"
      description: "The expected type for a static tool parameter."
    "SummaryEntry":
      properties:
        "category": {"$ref": "#/components/schemas/LatencyCategory"}
        "sub_category":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Sub Category"
        "event_count":
          type: "integer"
          title: "Event Count"
        "sum_ms":
          type: "number"
          title: "Sum Ms"
        "sum_str":
          type: "string"
          title: "Sum Str"
        "average_ms":
          type: "number"
          title: "Average Ms"
        "average_str":
          type: "string"
          title: "Average Str"
      type: "object"
      required:
        - "category"
        - "event_count"
        - "sum_ms"
        - "sum_str"
        - "average_ms"
        - "average_str"
      title: "SummaryEntry"
      description: "A summary entry is an aggregation of latency entries by category and sub-category.\nIt contains the total and average latency for each category."
    "SupportedLlm":
      properties:
        "provider": {"$ref": "#/components/schemas/PromptLlmProvider", "description": "Provider of the LLM model.", "default": "azure_openai", "examples": ["azure_openai"]}
        "model":
          type: "string"
          title: "Model"
          description: "Name of the model. Must match the deployment name in Azure AI Studio."
          default: "gpt-4o"
          examples:
            - "gpt-4o"
        "display_name":
          type: "string"
          title: "Display Name"
          description: "Display name of the model. This is used for display purposes in the Console UI."
          examples:
            - "GPT-4o"
        "version":
          type: "string"
          title: "Version"
          description: "Model version."
          examples:
            - "2024-05-13"
        "api_version":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Api Version"
          description: "Version of the provider's API."
          examples:
            - "2024-06-01"
        "deprecated":
          type: "boolean"
          title: "Deprecated"
          description: "Whether the LLM config is deprecated and should not be used."
          examples:
            - false
      type: "object"
      required:
        - "display_name"
        - "deprecated"
      title: "SupportedLlm"
      description: "LLM config option that can be used on a prompt."
    "TakeoutRequestStatus":
      type: "string"
      enum:
        - "pending"
        - "in_progress"
        - "completed"
        - "failed"
        - "canceled"
      title: "TakeoutRequestStatus"
      description: "Status of a takeout request."
    "TakeoutStatusResponse":
      properties:
        "job_id":
          type: "string"
          title: "Job Id"
        "status": {"$ref": "#/components/schemas/TakeoutRequestStatus"}
        "updated_at":
          type: "string"
          format: "date-time"
          title: "Updated At"
        "download_links":
          anyOf:
            - items:
                type: "string"
              type: "array"
            - type: "null"
          title: "Download Links"
      type: "object"
      required:
        - "job_id"
        - "status"
        - "updated_at"
      title: "TakeoutStatusResponse"
    "TargetModes":
      type: "string"
      enum:
        - "voice"
        - "chat"
        - "sms"
        - "email"
      title: "TargetModes"
      description: "Available modes (communication methods) for channel targets."
    "TestMessage":
      properties:
        "service_name":
          type: "string"
          title: "Service Name"
          description: "Name of the service producing the message"
        "source":
          type: "string"
          title: "Source"
          description: "Name of the source of the message - identifies the user, like an email or username."
          examples:
            - "user@email.com"
        "text":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Text"
          description: "The text of the message"
          examples:
            - "Hello"
        "test_id":
          type: "string"
          title: "Test Id"
          description: "Channel-manager-side ID of the session (see Session.channel_manager_sid)"
        "agent_id":
          type: "string"
          title: "Agent Id"
          description: "ID of the agent with which the chat is taking place"
        "org_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Org Name"
          description: "Unused: Name of the organization associated with the agent"
          deprecated: true
        "override_timestamp":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Override Timestamp"
          description: "Override for the timestamp of the message"
        "session_start":
          type: "boolean"
          title: "Session Start"
          description: "Whether this message is the start of a new session"
          default: false
      type: "object"
      required:
        - "service_name"
        - "source"
        - "test_id"
        - "agent_id"
      title: "TestMessage"
      description: "Message sent in a test chat with an agent."
    "TestMessageResponse":
      properties:
        "test_id":
          type: "string"
          title: "Test Id"
          description: "Channel-manager-side ID of the session (see Session.channel_manager_sid)"
        "agent_id":
          type: "string"
          title: "Agent Id"
          description: "ID of the agent with which the chat is taking place"
        "text":
          type: "string"
          title: "Text"
          description: "The text of the message that elicited the response"
        "response":
          type: "object"
          title: "Response"
          description: "The response from the agent"
        "response_text":
          type: "string"
          title: "Response Text"
          description: "The text of the response"
      type: "object"
      required:
        - "test_id"
        - "agent_id"
      title: "TestMessageResponse"
      description: "Response from an agent in a test chat."
    "ToolAgentInfo":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the agent"
          examples:
            - 1
        "name":
          type: "string"
          title: "Name"
          description: "The name of the agent"
          examples:
            - "Test Agent"
      type: "object"
      required:
        - "id"
        - "name"
      title: "ToolAgentInfo"
      description: "Information about an agent linked to a tool via a prompt."
    "ToolArgumentLocation":
      type: "string"
      enum:
        - "body"
        - "form"
        - "path"
        - "query"
      title: "ToolArgumentLocation"
      description: "The location of the argument in a tool HTTP request.\n'body' is used for JSON data in the POST request body.\n'form' is used for form data in the POST request body.\n'path' is used for URL path parameters.\n'query' is used for query parameters in the URL."
    "ToolCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the tool"
          examples:
            - "Weather Fetcher"
        "definition": {"$ref": "#/components/schemas/ToolDefinition", "description": "The definition of the tool", "examples": [{"endpoint": {"argument_location": "query", "method": "get", "url": "https://api.open-meteo.com/v1/forecast"}, "tool": {"function": {"description": "Get the weather for a city", "name": "get_weather", "parameters": {"properties": {"latitude": {"description": "Latitude of the city", "type": "number"}, "longitude": {"description": "Longitude of the city", "type": "number"}, "current": {"default": "temperature_2m,relative_humidity_2m,precipitation,rain,showers", "description": "Information to retrieve from the open-meteo API, comma-separated", "type": "string"}}, "required": ["latitude", "longitude", "current"], "type": "object"}}, "type": "function"}, "type": "endpoint"}]}
        "service_id":
          type: "integer"
          title: "Service Id"
          description: "Internal ID of the service to which the tool belongs"
          examples:
            - 1
      type: "object"
      required:
        - "name"
        - "definition"
        - "service_id"
      title: "ToolCreateRequest"
      description: "Request model to create a tool."
    "ToolDefinition":
      properties:
        "type":
          anyOf:
            - type: "string"
              enum:
                - "action"
                - "endpoint"
                - "context"
                - "log"
            - type: "null"
          title: "Type"
          description: "The action to take when the LLM calls the tool."
          examples:
            - "endpoint"
        "tool": {"$ref": "#/components/schemas/InternalTool", "description": "The tool definition to be used by the OpenAI API.", "examples": []}
        "endpoint":
          anyOf:
            - {"$ref": "#/components/schemas/ToolHttpEndpoint"}
            - type: "null"
          description: "The configuration for an HTTP API call."
        "defaults":
          anyOf:
            - {}
            - additionalProperties: {"$ref": "#/components/schemas/ToolParameterDefault"}
              type: "object"
            - type: "null"
          title: "Defaults"
          description: "The default values for the parameters of the function/tool call."
        "static_parameters":
          anyOf:
            - items: {"$ref": "#/components/schemas/StaticToolParameter"}
              type: "array"
            - type: "null"
          title: "Static Parameters"
          description: "Parameters for the tool whose values should be set at config time (i.e., not provided by the LLM)."
          examples:
            - [{"default": "fahrenheit", "description": "Whether the temperature information should be fetched in Celsius or Fahrenheit", "name": "temperature_unit", "required": false, "type": "string"}]
        "result":
          anyOf:
            - {}
            - type: "null"
          title: "Result"
          description: "The optional result of the tool call. Only used for `context` tools."
      type: "object"
      required:
        - "tool"
      title: "ToolDefinition"
      description: "A tool that can be called from an LLM during the conversation. See https://docs.syllable.ai/Resources/Tools."
    "ToolDetailResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the tool"
          examples:
            - "Weather Fetcher"
        "definition": {"$ref": "#/components/schemas/ToolDefinition", "description": "The definition of the tool", "examples": [{"endpoint": {"argument_location": "query", "method": "get", "url": "https://api.open-meteo.com/v1/forecast"}, "tool": {"function": {"description": "Get the weather for a city", "name": "get_weather", "parameters": {"properties": {"latitude": {"description": "Latitude of the city", "type": "number"}, "longitude": {"description": "Longitude of the city", "type": "number"}, "current": {"default": "temperature_2m,relative_humidity_2m,precipitation,rain,showers", "description": "Information to retrieve from the open-meteo API, comma-separated", "type": "string"}}, "required": ["latitude", "longitude", "current"], "type": "object"}}, "type": "function"}, "type": "endpoint"}]}
        "service_id":
          type: "integer"
          title: "Service Id"
          description: "Internal ID of the service to which the tool belongs"
          examples:
            - 1
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the tool"
          examples:
            - 1
        "last_updated_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated Comments"
          description: "Comments for the most recent edit to the tool."
          examples:
            - "Updated to use new API endpoint"
        "service_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Service Name"
          description: "The name of the service to which the tool belongs"
        "prompts_info":
          anyOf:
            - items: {"$ref": "#/components/schemas/ToolPromptInfo"}
              type: "array"
            - type: "null"
          title: "Prompts Info"
          description: "IDs and names of the prompts linked to the tool"
        "agents_info":
          anyOf:
            - items: {"$ref": "#/components/schemas/ToolAgentInfo"}
              type: "array"
            - type: "null"
          title: "Agents Info"
          description: "IDs and names of the agents linked to the tool via a prompt"
        "last_updated":
          type: "string"
          format: "date-time"
          title: "Last Updated"
          description: "The timestamp of the most recent update to the service"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "The email of the user who last updated the tool"
          examples:
            - "user@email.com"
        "fields":
          items:
            type: "string"
          type: "array"
          title: "Fields"
          description: "Fields that the tool accepts as input"
      type: "object"
      required:
        - "name"
        - "definition"
        - "service_id"
        - "id"
        - "last_updated"
        - "last_updated_by"
        - "fields"
      title: "ToolDetailResponse"
      description: "Response model for tool detail endpoint.\nA tool is a function that an agent can call to perform actions like accessing databases,\nmaking API calls, or processing data. For an agent to have access to a tool, the prompt\nassociated with that agent should be linked to the tool and include instructions to use it.\nFor more information, see [Console docs](https://docs.syllable.ai/Resources/Tools)."
    "ToolFunction":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the function/tool call."
          examples:
            - "get_weather"
        "description":
          type: "string"
          title: "Description"
          description: "The description of the tool."
          examples:
            - "Get the weather for a city"
        "parameters":
          title: "Parameters"
          description: "The JSON Schema of parameters of the function/tool call."
          examples:
            - {}
      type: "object"
      required:
        - "name"
        - "description"
        - "parameters"
      title: "ToolFunction"
      description: "A function available to an agent.\n\nSee:\n- https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/function-calling"
    "ToolHttpEndpoint":
      properties:
        "url":
          type: "string"
          title: "Url"
          description: "The endpoint URL of the external service to call."
          examples:
            - "https://api.example.com"
        "method": {"$ref": "#/components/schemas/ToolHttpMethod", "description": "The HTTP method to use for the service call.", "examples": ["get"]}
        "argument_location": {"$ref": "#/components/schemas/ToolArgumentLocation", "description": "How to pass the arguments to the request.", "examples": ["query"]}
      type: "object"
      required:
        - "url"
        - "method"
        - "argument_location"
      title: "ToolHttpEndpoint"
      description: "The configuration for an HTTP API call by a tool."
    "ToolHttpMethod":
      type: "string"
      enum:
        - "get"
        - "post"
      title: "ToolHttpMethod"
      description: "The HTTP method to use for a tool HTTP request."
    "ToolParameterDefault":
      properties:
        "transform": {"$ref": "#/components/schemas/ToolParameterTransform", "description": "The transform to apply to the value before using it as the default.", "examples": []}
      type: "object"
      required:
        - "transform"
      title: "ToolParameterDefault"
      description: "The default value for a parameter of a tool call."
    "ToolParameterTransform":
      properties:
        "action":
          type: "string"
          enum:
            - "default"
            - "override"
            - "remove"
          title: "Action"
          description: "The action to perform on the tool parameter value: `default` means only set the value (using the `format` field) if the parameter doesn't exist or is empty, `override` means always set the value,\" and `remove` means \"remove the parameter value.\""
          default: "default"
        "when":
          anyOf:
            - {"$ref": "#/components/schemas/ToolParameterTransformCondition"}
            - type: "null"
          description: "Only apply the transform if the condition is met."
        "value":
          anyOf:
            - {}
            - type: "null"
          title: "Value"
          description: "The default value to use for the parameter."
        "format":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Format"
          description: "The string value to use for the parameter. The value will be evaluated with the Python `str.format` method, for example, `Hello, {name}!`"
      type: "object"
      title: "ToolParameterTransform"
      description: "A transform to be applied to the value of a tool parameter.\n\nEither `value` or `format` must be set:\n- `value` is any arbitrary value: string, list or dictionary.\n- `format` is a string composed of other parameters or context variables."
    "ToolParameterTransformCondition":
      properties:
        "key":
          type: "string"
          title: "Key"
          description: "The name of the parameter to check."
          examples:
            - "key"
        "value":
          type: "string"
          title: "Value"
          description: "The value to check against the parameter."
          examples:
            - "value"
        "operator":
          anyOf:
            - type: "string"
              const: "eq"
            - type: "null"
          title: "Operator"
          description: "The operator to use for the comparison. Currently only supports \"eq\""
          default: "eq"
          examples:
            - "eq"
      type: "object"
      required:
        - "key"
        - "value"
      title: "ToolParameterTransformCondition"
      description: "A condition to be met for a transform to be applied to the value of a tool parameter."
    "ToolPromptInfo":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "The ID of the prompt"
          examples:
            - 1
        "name":
          type: "string"
          title: "Name"
          description: "The name of the prompt"
          examples:
            - "Test Prompt"
      type: "object"
      required:
        - "id"
        - "name"
      title: "ToolPromptInfo"
      description: "Information about a prompt linked to a tool."
    "ToolProperties":
      type: "string"
      enum:
        - "id"
        - "name"
        - "service_name"
        - "definition"
        - "service_id"
        - "updated_at"
        - "last_updated_by"
      title: "ToolProperties"
      description: "Names of tool fields supported for filtering/sorting on list endpoint."
    "ToolResponse":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the tool"
          examples:
            - "Weather Fetcher"
        "definition": {"$ref": "#/components/schemas/ToolDefinition", "description": "The definition of the tool", "examples": [{"endpoint": {"argument_location": "query", "method": "get", "url": "https://api.open-meteo.com/v1/forecast"}, "tool": {"function": {"description": "Get the weather for a city", "name": "get_weather", "parameters": {"properties": {"latitude": {"description": "Latitude of the city", "type": "number"}, "longitude": {"description": "Longitude of the city", "type": "number"}, "current": {"default": "temperature_2m,relative_humidity_2m,precipitation,rain,showers", "description": "Information to retrieve from the open-meteo API, comma-separated", "type": "string"}}, "required": ["latitude", "longitude", "current"], "type": "object"}}, "type": "function"}, "type": "endpoint"}]}
        "service_id":
          type: "integer"
          title: "Service Id"
          description: "Internal ID of the service to which the tool belongs"
          examples:
            - 1
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the tool"
          examples:
            - 1
        "last_updated_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated Comments"
          description: "Comments for the most recent edit to the tool."
          examples:
            - "Updated to use new API endpoint"
        "service_name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Service Name"
          description: "The name of the service to which the tool belongs"
        "prompts_info":
          anyOf:
            - items: {"$ref": "#/components/schemas/ToolPromptInfo"}
              type: "array"
            - type: "null"
          title: "Prompts Info"
          description: "IDs and names of the prompts linked to the tool"
        "agents_info":
          anyOf:
            - items: {"$ref": "#/components/schemas/ToolAgentInfo"}
              type: "array"
            - type: "null"
          title: "Agents Info"
          description: "IDs and names of the agents linked to the tool via a prompt"
        "last_updated":
          type: "string"
          format: "date-time"
          title: "Last Updated"
          description: "The timestamp of the most recent update to the service"
        "last_updated_by":
          type: "string"
          title: "Last Updated By"
          description: "The email of the user who last updated the tool"
          examples:
            - "user@email.com"
      type: "object"
      required:
        - "name"
        - "definition"
        - "service_id"
        - "id"
        - "last_updated"
        - "last_updated_by"
      title: "ToolResponse"
      description: "Response model for tool operations.\nA tool is a function that an agent can call to perform actions like accessing databases,\nmaking API calls, or processing data. For an agent to have access to a tool, the prompt\nassociated with that agent should be linked to the tool and include instructions to use it.\nFor more information, see [Console docs](https://docs.syllable.ai/Resources/Tools)."
    "ToolResultData":
      properties:
        "tool_name":
          type: "string"
          title: "Tool Name"
          description: "Tool name"
          examples:
            - "general_information_web"
        "tool_result":
          title: "Tool Result"
          description: "Tool result data"
          examples:
            - {"answer": "Syllable is a platform for building and managing AI voice agents..."}
      type: "object"
      required:
        - "tool_name"
        - "tool_result"
      title: "ToolResultData"
    "ToolUpdateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The name of the tool"
          examples:
            - "Weather Fetcher"
        "definition": {"$ref": "#/components/schemas/ToolDefinition", "description": "The definition of the tool", "examples": [{"endpoint": {"argument_location": "query", "method": "get", "url": "https://api.open-meteo.com/v1/forecast"}, "tool": {"function": {"description": "Get the weather for a city", "name": "get_weather", "parameters": {"properties": {"latitude": {"description": "Latitude of the city", "type": "number"}, "longitude": {"description": "Longitude of the city", "type": "number"}, "current": {"default": "temperature_2m,relative_humidity_2m,precipitation,rain,showers", "description": "Information to retrieve from the open-meteo API, comma-separated", "type": "string"}}, "required": ["latitude", "longitude", "current"], "type": "object"}}, "type": "function"}, "type": "endpoint"}]}
        "service_id":
          type: "integer"
          title: "Service Id"
          description: "Internal ID of the service to which the tool belongs"
          examples:
            - 1
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the tool"
          examples:
            - 1
        "last_updated_comments":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Last Updated Comments"
          description: "Comments for the most recent edit to the tool."
          examples:
            - "Updated to use new API endpoint"
      type: "object"
      required:
        - "name"
        - "definition"
        - "service_id"
        - "id"
      title: "ToolUpdateRequest"
      description: "Request model to update an existing tool."
    "TtsProvider":
      type: "string"
      enum:
        - "OpenAI"
        - "ElevenLabs"
        - "Google"
      title: "TtsProvider"
      description: "TTS provider for an agent voice."
    "TwilioChannelConfigCreate":
      properties:
        "account_sid":
          type: "string"
          title: "Account Sid"
          description: "SID of the Twilio account"
          examples:
            - "AC123..."
        "auth_token":
          type: "string"
          title: "Auth Token"
          description: "The Twilio auth token"
          examples:
            - "sometoken"
      type: "object"
      required:
        - "account_sid"
        - "auth_token"
      title: "TwilioChannelConfigCreate"
      description: "Twilio channel config information."
    "TwilioChannelConfigUpdate":
      properties:
        "account_sid":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Account Sid"
          description: "SID of the Twilio account"
          examples:
            - "AC123..."
        "auth_token":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Auth Token"
          description: "The Twilio auth token"
          examples:
            - "sometoken"
      type: "object"
      title: "TwilioChannelConfigUpdate"
      description: "Twilio channel config information. If a field is passed as None, it will not be updated."
    "TwilioChannelCreateRequest":
      properties:
        "name":
          type: "string"
          title: "Name"
          description: "The channel name"
          examples:
            - "syllable-webchat"
        "config": {"$ref": "#/components/schemas/TwilioChannelConfigCreate", "description": "The configuration of the channel"}
      type: "object"
      required:
        - "name"
        - "config"
      title: "TwilioChannelCreateRequest"
      description: "Request model for creating a Twilio channel."
    "TwilioChannelUpdateRequest":
      properties:
        "id":
          type: "integer"
          title: "Id"
          description: "The internal ID of the channel"
          examples:
            - 1
        "name":
          anyOf:
            - type: "string"
            - type: "null"
          title: "Name"
          description: "The name of the channel"
          examples:
            - "syllable-webchat"
        "config":
          anyOf:
            - {"$ref": "#/components/schemas/TwilioChannelConfigUpdate"}
            - type: "null"
          description: "The configuration of the channel"
      type: "object"
      required:
        - "id"
      title: "TwilioChannelUpdateRequest"
      description: "Request model for updating a Twilio channel."
    "TwilioNumberAddRequest":
      properties:
        "friendly_name":
          type: "string"
          title: "Friendly Name"
          description: "Friendly name for the Twilio number"
          examples:
            - "Support Line"
        "area_code":
          type: "string"
          title: "Area Code"
          description: "Area code for the Twilio number"
          examples:
            - "804"
      type: "object"
      required:
        - "friendly_name"
        - "area_code"
      title: "TwilioNumberAddRequest"
      description: "Request model for purchasing a Twilio number and associating it with a channel."
    "TwilioNumberAddResponse":
      properties:
        "phone_number":
          type: "string"
          title: "Phone Number"
          description: "The purchased Twilio phone number"
          examples:
            - "+18042221111"
      type: "object"
      required:
        - "phone_number"
      title: "TwilioNumberAddResponse"
      description: "Response model for purchasing a Twilio number and associating it with a channel."
    "ValidationError":
      properties:
        "loc":
          items:
            anyOf:
              - type: "string"
              - type: "integer"
          type: "array"
          title: "Location"
        "msg":
          type: "string"
          title: "Message"
        "type":
          type: "string"
          title: "Error Type"
      type: "object"
      required:
        - "loc"
        - "msg"
        - "type"
      title: "ValidationError"
    "VoiceSampleCreateRequest":
      properties:
        "language_code": {"$ref": "#/components/schemas/LanguageCode", "description": "BCP 47 code of the language", "examples": ["en-US"]}
        "voice_provider": {"$ref": "#/components/schemas/TtsProvider", "description": "TTS provider of the voice to use for the language", "examples": ["OpenAI"]}
        "voice_display_name": {"$ref": "#/components/schemas/AgentVoiceDisplayName", "description": "Display name of the voice to use for the language", "examples": ["Alloy"]}
        "voice_speed":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Voice Speed"
          description: "Speed of the voice in the range of 0.25 to 4.0 (OpenAI and Google) or 0.7 to 1.2 (ElevenLabs). Standard speed is 1.0."
          examples:
            - 1
        "voice_pitch":
          anyOf:
            - type: "number"
            - type: "null"
          title: "Voice Pitch"
          description: "Pitch of the voice in the range of -20.0 to 20.0. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch. 0 means use the original pitch. Only supported for Google configs."
          examples:
            - 0
      type: "object"
      required:
        - "language_code"
        - "voice_provider"
        - "voice_display_name"
      title: "VoiceSampleCreateRequest"
      description: "Request model to generate a sample audio file for a given voice and language."
  securitySchemes:
    "APIKeyHeader":
      type: "apiKey"
      in: "header"
      name: "Syllable-API-Key"
tags:
  - name: "agents"
    description: "Operations related to agent configuration. When a user interacts with the           Syllable system, they do so by communicating with an agent.           An agent is linked to a prompt, a custom message, and one or more channel targets to           define its behavior and capabilities. For more information, see           [Console docs](https://docs.syllable.ai/workspaces/Agents)."
  - name: "agents.test"
    description: "Operations for testing agents with live text.           These endpoints allow sending messages to an agent and receiving its responses."
  - name: "channels"
    description: "Operations related to channel configuration.           A channel is an organization-level point of communication, like a phone number or a web           chat. A channel can be associated with an agent by creating a channel target linking           them."
  - name: "channels.twilio"
    description: "Operations related to Twilio channel configuration."
  - name: "channels.twilio.numbers"
    description: "Operations related to setting up phone numbers in Twilio for use in channels."
  - name: "channels.targets"
    description: "Operations related to channel target configuration. A channel target           links a channel to an agent, allowing users to communicate with the agent through that           channel. For more information, see           [Console docs](https://docs.syllable.ai/Resources/Channels)."
  - name: "conversations"
    description: "Operations related to conversations.           A conversation is a record of messages between a user and an agent, and is composed of           one or more sessions."
  - name: "custom_messages"
    description: "Operations related to custom message configuration.           A custom message is a pre-configured message delivered by an agent as a greeting at the           beginning of a conversation. Multiple agents can use the same custom mesasage. A custom           message has one or more rules defined, which allow for different messages to be           dynamically selected and delivered at runtime based on the current time and either           date or day of the week. For more information, see           [Console docs](https://docs.syllable.ai/Resources/Messages)."
  - name: "dashboards"
    description: "Operations related to dashboards. Currently the API/SDK           only supports fetching basic information about dashboards."
  - name: "data_sources"
    description: "Operations related to data sources. A data source is a blob of text that           can be made available to an agent's general info tools to provide more context to the           agent when generating its responses. For more information, see           [Console docs](https://docs.syllable.ai/Resources/DataSources)."
  - name: "directory"
    description: "Operations related to directory"
  - name: "events"
    description: "Operations related to events. An event represents a specific occurrence           during a session. Currently the API/SDK only supports fetching logged events."
  - name: "incidents"
    description: "Operations related to incidents."
  - name: "insights"
    description: "Operations related to insights results. An insight is a tool that processes          conversation data to extract information and generate reports."
  - name: "insights.folders"
    description: "Operations related to insights upload folders. An insight folder is used          to upload call recordings for insight workflow analysis."
  - name: "insights.tools"
    description: "Operations related to insights tools. An insight is a tool that processes           conversation data to extract information and generate reports."
  - name: "insights.workflows"
    description: "Operations related to insights workflows. An workflow is series of tool           invocations that processes conversation data to extract information and generate reports."
  - name: "language_groups"
    description: "Operations related to language groups. A language group is a           collection of language, voice, and DTMF configuration that can be linked to an agent to           define the languages and voices it supports. For more information, see           [Console docs](https://docs.syllable.ai/Resources/LanguageGroups)."
  - name: "outbound.campaigns"
    description: "Operations related to outbound message campaigns"
  - name: "outbound.batches"
    description: "Operations related to outbound campaign batches"
  - name: "prompts"
    description: "Operations related to prompts. A prompt defines the behavior of an           agent by delivering instructions to the LLM about how the agent should behave.           A prompt can be linked to one or more agents. A prompt can also be linked to tools to           allow an agent using the prompt to use them. For more information, see           [Console docs](https://docs.syllable.ai/Resources/Prompts)."
  - name: "services"
    description: "Operations related to service configuration. A service is a collection of           tools."
  - name: "sessions"
    description: "Operations related to sessions. A session is a building block of a           conversation. For more information, see           [Console docs](https://docs.syllable.ai/workspaces/Sessions)."
  - name: "session_labels"
    description: "Operations related to labeling sessions with evaluations of quality and           descriptions of issues the user encountered or other details. For more information, see           [Console docs](https://docs.syllable.ai/workspaces/Sessions)."
  - name: "tools"
    description: "Operations related to tool configuration. A tool is a function that an           agent can call to perform actions like accessing databases, making API calls, or           processing data. For an agent to have access to a tool, the prompt associated with that           agent should be linked to the tool and include instructions to use it. For more           information, see [Console docs](https://docs.syllable.ai/Resources/Tools)."
x-speakeasy-name-override: [{"operationId": ".*_list$", "methodNameOverride": "list"}, {"operationId": ".*_create$", "methodNameOverride": "create"}, {"operationId": ".*_update$", "methodNameOverride": "update"}, {"operationId": ".*_upload$", "methodNameOverride": "upload"}, {"operationId": ".*_delete$", "methodNameOverride": "delete"}, {"operationId": ".*_get_by_id$", "methodNameOverride": "get_by_id"}, {"operationId": ".*_get_by_name$", "methodNameOverride": "get_by_name"}, {"operationId": ".*_add$", "methodNameOverride": "add"}, {"operationId": ".*_remove$", "methodNameOverride": "remove"}, {"operationId": ".*_results$", "methodNameOverride": "results"}, {"operationId": ".*_queue_work$", "methodNameOverride": "queue_work"}, {"operationId": ".*_activate$", "methodNameOverride": "activate"}, {"operationId": ".*_inactivate$", "methodNameOverride": "inactivate"}, {"operationId": ".*_list_files$", "methodNameOverride": "list_files"}, {"operationId": ".*_upload_file$", "methodNameOverride": "upload_file"}]
