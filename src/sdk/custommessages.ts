/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customMessagesCreate } from "../funcs/customMessagesCreate.js";
import { customMessagesDelete } from "../funcs/customMessagesDelete.js";
import { customMessagesGetById } from "../funcs/customMessagesGetById.js";
import { customMessagesList } from "../funcs/customMessagesList.js";
import { customMessagesUpdate } from "../funcs/customMessagesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class CustomMessages extends ClientSDK {
  /**
   * Custom Messages List
   *
   * @remarks
   * List the existing custom_messages
   */
  async list(
    request: operations.CustomMessagesListRequest,
    options?: RequestOptions,
  ): Promise<components.ListResponseCustomMessage> {
    return unwrapAsync(customMessagesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Custom Message
   *
   * @remarks
   * Create a new greeting
   */
  async create(
    request: components.CustomMessageCreate,
    options?: RequestOptions,
  ): Promise<components.CustomMessage> {
    return unwrapAsync(customMessagesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Custom Message
   *
   * @remarks
   * Update a greeting
   */
  async update(
    request: components.CustomMessage,
    options?: RequestOptions,
  ): Promise<components.CustomMessage> {
    return unwrapAsync(customMessagesUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Custom Message By Id
   *
   * @remarks
   * Get the greeting by its ID
   */
  async getById(
    request: operations.CustomMessageGetByIdRequest,
    options?: RequestOptions,
  ): Promise<components.CustomMessage> {
    return unwrapAsync(customMessagesGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Custom Message
   *
   * @remarks
   * Delete greeting by ID
   */
  async delete(
    request: operations.CustomMessagesDeleteRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(customMessagesDelete(
      this,
      request,
      options,
    ));
  }
}
