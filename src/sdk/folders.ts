/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsFoldersCreate } from "../funcs/insightsFoldersCreate.js";
import { insightsFoldersGetById } from "../funcs/insightsFoldersGetById.js";
import { insightsFoldersList } from "../funcs/insightsFoldersList.js";
import { insightsFoldersListFiles } from "../funcs/insightsFoldersListFiles.js";
import { insightsFoldersUpdate } from "../funcs/insightsFoldersUpdate.js";
import { insightsFoldersUploadFile } from "../funcs/insightsFoldersUploadFile.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Folders extends ClientSDK {
  /**
   * List Insights Upload Folders
   */
  async list(
    request: operations.InsightsFolderListRequest,
    options?: RequestOptions,
  ): Promise<components.ListResponseInsightsFolder> {
    return unwrapAsync(insightsFoldersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Insights Upload Folder
   */
  async create(
    request: components.InsightsFolderInput,
    options?: RequestOptions,
  ): Promise<components.InsightsFolder> {
    return unwrapAsync(insightsFoldersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Insights Folder Details
   */
  async getById(
    request: operations.InsightsFolderGetByIdRequest,
    options?: RequestOptions,
  ): Promise<components.FolderDetails> {
    return unwrapAsync(insightsFoldersGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Insights Folder
   */
  async update(
    request: operations.InsightsFolderUpdateRequest,
    options?: RequestOptions,
  ): Promise<components.InsightsFolder> {
    return unwrapAsync(insightsFoldersUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload Insights  Upload Folder
   */
  async uploadFile(
    request: operations.InsightsFolderUploadFileRequest,
    options?: RequestOptions,
  ): Promise<components.InsightsUploadFile> {
    return unwrapAsync(insightsFoldersUploadFile(
      this,
      request,
      options,
    ));
  }

  /**
   * Fetch Insights Upload Files
   */
  async listFiles(
    request: operations.InsightsUploadListFilesRequest,
    options?: RequestOptions,
  ): Promise<components.ListResponseInsightsUploadFile> {
    return unwrapAsync(insightsFoldersListFiles(
      this,
      request,
      options,
    ));
  }
}
