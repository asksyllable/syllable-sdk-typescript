/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { greetingsCreate } from "../funcs/greetingsCreate.js";
import { greetingsDelete } from "../funcs/greetingsDelete.js";
import { greetingsGetById } from "../funcs/greetingsGetById.js";
import { greetingsList } from "../funcs/greetingsList.js";
import { greetingsUpdate } from "../funcs/greetingsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Greetings extends ClientSDK {
  /**
   * Greetings List
   *
   * @remarks
   * List the existing greetings
   */
  async list(
    request: operations.GreetingsListRequest,
    options?: RequestOptions,
  ): Promise<components.GreetingListResponse> {
    return unwrapAsync(greetingsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Greeting
   *
   * @remarks
   * Update a greeting
   */
  async update(
    request: components.Greeting,
    options?: RequestOptions,
  ): Promise<components.GreetingResponse> {
    return unwrapAsync(greetingsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Greeting
   *
   * @remarks
   * Create a new greeting
   */
  async create(
    request: components.GreetingCreate,
    options?: RequestOptions,
  ): Promise<components.GreetingResponse> {
    return unwrapAsync(greetingsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Greeting By Id
   *
   * @remarks
   * Get the greeting by its ID
   */
  async getById(
    request: operations.GreetingsGetByIdRequest,
    options?: RequestOptions,
  ): Promise<components.GreetingResponse> {
    return unwrapAsync(greetingsGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Greeting
   *
   * @remarks
   * Delete greeting by ID
   */
  async delete(
    request: operations.GreetingsDeleteRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(greetingsDelete(
      this,
      request,
      options,
    ));
  }
}
