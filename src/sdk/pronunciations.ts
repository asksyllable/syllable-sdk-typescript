/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { pronunciationsPronunciationsDownloadCsv } from "../funcs/pronunciationsPronunciationsDownloadCsv.js";
import { pronunciationsPronunciationsGet } from "../funcs/pronunciationsPronunciationsGet.js";
import { pronunciationsPronunciationsGetMetadata } from "../funcs/pronunciationsPronunciationsGetMetadata.js";
import { pronunciationsPronunciationsUploadCsv } from "../funcs/pronunciationsPronunciationsUploadCsv.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Pronunciations extends ClientSDK {
  /**
   * Get Pronunciations Dictionary
   */
  async pronunciationsGet(
    options?: RequestOptions,
  ): Promise<components.PronunciationOverridesDictionary> {
    return unwrapAsync(pronunciationsPronunciationsGet(
      this,
      options,
    ));
  }

  /**
   * Get Pronunciations Metadata
   */
  async pronunciationsGetMetadata(
    options?: RequestOptions,
  ): Promise<components.DictionaryMetadata> {
    return unwrapAsync(pronunciationsPronunciationsGetMetadata(
      this,
      options,
    ));
  }

  /**
   * Download Pronunciations Csv
   */
  async pronunciationsDownloadCsv(
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(pronunciationsPronunciationsDownloadCsv(
      this,
      options,
    ));
  }

  /**
   * Upload Pronunciations Csv
   */
  async pronunciationsUploadCsv(
    request: components.BodyPronunciationsUploadCsv,
    options?: RequestOptions,
  ): Promise<components.PronunciationsCsvUploadResponse> {
    return unwrapAsync(pronunciationsPronunciationsUploadCsv(
      this,
      request,
      options,
    ));
  }
}
