/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { insightsToolsCreate } from "../funcs/insightsToolsCreate.js";
import { insightsToolsGetById } from "../funcs/insightsToolsGetById.js";
import { insightsToolsInsightsToolTest } from "../funcs/insightsToolsInsightsToolTest.js";
import { insightsToolsInsightToolGetDefinitions } from "../funcs/insightsToolsInsightToolGetDefinitions.js";
import { insightsToolsList } from "../funcs/insightsToolsList.js";
import { insightsToolsUpdate } from "../funcs/insightsToolsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class SyllableSDKTools extends ClientSDK {
  /**
   * Insight Tool List
   *
   * @remarks
   * List the existing insight_tools
   */
  async list(
    request: operations.InsightToolListRequest,
    options?: RequestOptions,
  ): Promise<components.ListResponseInsightToolOutput> {
    return unwrapAsync(insightsToolsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Insight Tool
   *
   * @remarks
   * Create a new insight tool.
   */
  async create(
    request: components.InsightToolInput,
    options?: RequestOptions,
  ): Promise<components.InsightToolOutput> {
    return unwrapAsync(insightsToolsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Insight Tool By Id
   *
   * @remarks
   * Get a InsightTool by Name.
   */
  async getById(
    request: operations.InsightToolGetByIdRequest,
    options?: RequestOptions,
  ): Promise<components.InsightToolOutput> {
    return unwrapAsync(insightsToolsGetById(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Insights Tool
   *
   * @remarks
   * Update an Insights tool.
   */
  async update(
    request: operations.InsightsToolUpdateRequest,
    options?: RequestOptions,
  ): Promise<components.InsightToolOutput> {
    return unwrapAsync(insightsToolsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Test Insights Tool
   *
   * @remarks
   * Manually run the given insight tool against a session and return the response.
   */
  async insightsToolTest(
    request: components.InsightToolTestInput,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(insightsToolsInsightsToolTest(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Insight Tool Definitions
   *
   * @remarks
   * Get a InsightTool by Name.
   */
  async insightToolGetDefinitions(
    options?: RequestOptions,
  ): Promise<Array<components.InsightToolDefinition>> {
    return unwrapAsync(insightsToolsInsightToolGetDefinitions(
      this,
      options,
    ));
  }
}
