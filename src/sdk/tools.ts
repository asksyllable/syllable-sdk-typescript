/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { toolsCreate } from "../funcs/toolsCreate.js";
import { toolsDelete } from "../funcs/toolsDelete.js";
import { toolsGetByName } from "../funcs/toolsGetByName.js";
import { toolsList } from "../funcs/toolsList.js";
import { toolsUpdate } from "../funcs/toolsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Tools extends ClientSDK {
  /**
   * Tool List
   *
   * @remarks
   * List the existing tools
   */
  async list(
    request: operations.ToolListRequest,
    options?: RequestOptions,
  ): Promise<components.ListResponseToolResponse> {
    return unwrapAsync(toolsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Tool
   *
   * @remarks
   * Create a new tool
   */
  async create(
    request: components.ToolCreateRequest,
    options?: RequestOptions,
  ): Promise<components.ToolResponse> {
    return unwrapAsync(toolsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Tool
   *
   * @remarks
   * Update an existing tool
   */
  async update(
    request: components.ToolUpdateRequest,
    options?: RequestOptions,
  ): Promise<components.ToolResponse> {
    return unwrapAsync(toolsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Tool Info
   *
   * @remarks
   * Get the details of a specific tool
   */
  async getByName(
    request: operations.ToolGetByNameRequest,
    options?: RequestOptions,
  ): Promise<components.ToolDetailResponse> {
    return unwrapAsync(toolsGetByName(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Tool
   *
   * @remarks
   * Delete a tool.
   */
  async delete(
    request: operations.ToolDeleteRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(toolsDelete(
      this,
      request,
      options,
    ));
  }
}
