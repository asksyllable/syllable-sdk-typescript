/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { servicesCreate } from "../funcs/servicesCreate.js";
import { servicesList } from "../funcs/servicesList.js";
import { servicesUpdate } from "../funcs/servicesUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Services extends ClientSDK {
  /**
   * Service List
   *
   * @remarks
   * List the existing agents
   */
  async list(
    request: operations.ServiceListRequest,
    options?: RequestOptions,
  ): Promise<components.ListResponseService> {
    return unwrapAsync(servicesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Service
   */
  async create(
    request: components.ServiceCreate,
    options?: RequestOptions,
  ): Promise<components.Service> {
    return unwrapAsync(servicesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Service
   */
  async update(
    request: components.ServiceUpdate,
    options?: RequestOptions,
  ): Promise<components.Service> {
    return unwrapAsync(servicesUpdate(
      this,
      request,
      options,
    ));
  }
}
