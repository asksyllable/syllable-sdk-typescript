/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { outboundCampaignsOutboundCampaignCreat } from "../funcs/outboundCampaignsOutboundCampaignCreat.js";
import { outboundCampaignsOutboundCampaignGetByI } from "../funcs/outboundCampaignsOutboundCampaignGetByI.js";
import { outboundCampaignsOutboundCampaignLis } from "../funcs/outboundCampaignsOutboundCampaignLis.js";
import { outboundCampaignsOutboundCampaignUpdat } from "../funcs/outboundCampaignsOutboundCampaignUpdat.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Campaigns extends ClientSDK {
  /**
   * List Outbound Communication Campaigns
   */
  async outboundCampaignLis(
    request: operations.OutboundCampaignLisRequest,
    options?: RequestOptions,
  ): Promise<Array<components.OutboundCampaign>> {
    return unwrapAsync(outboundCampaignsOutboundCampaignLis(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Outbound Communication Campaign
   */
  async outboundCampaignCreat(
    request: components.OutboundCampaignInput,
    options?: RequestOptions,
  ): Promise<components.OutboundCampaign> {
    return unwrapAsync(outboundCampaignsOutboundCampaignCreat(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Outbound Communication Campaign
   */
  async outboundCampaignGetByI(
    request: operations.OutboundCampaignGetByIRequest,
    options?: RequestOptions,
  ): Promise<components.OutboundCampaign> {
    return unwrapAsync(outboundCampaignsOutboundCampaignGetByI(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Outbound Communication Campaign
   */
  async outboundCampaignUpdat(
    request: operations.OutboundCampaignUpdatRequest,
    options?: RequestOptions,
  ): Promise<components.OutboundCampaign> {
    return unwrapAsync(outboundCampaignsOutboundCampaignUpdat(
      this,
      request,
      options,
    ));
  }
}
