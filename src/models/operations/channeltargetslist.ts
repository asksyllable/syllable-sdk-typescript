/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ChannelTargetsListRequest = {
  page?: number | undefined;
  limit?: number | undefined;
  orderBy?: string | undefined;
  orderByDirection?: string | undefined;
  agentId?: string | null | undefined;
  channelId?: string | null | undefined;
  target?: string | null | undefined;
  fallbackTarget?: string | null | undefined;
};

/** @internal */
export const ChannelTargetsListRequest$inboundSchema: z.ZodType<
  ChannelTargetsListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(0),
  limit: z.number().int().default(100),
  order_by: z.string().default("target"),
  order_by_direction: z.string().default("DESC"),
  agent_id: z.nullable(z.string()).optional(),
  channel_id: z.nullable(z.string()).optional(),
  target: z.nullable(z.string()).optional(),
  fallback_target: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "order_by": "orderBy",
    "order_by_direction": "orderByDirection",
    "agent_id": "agentId",
    "channel_id": "channelId",
    "fallback_target": "fallbackTarget",
  });
});

/** @internal */
export type ChannelTargetsListRequest$Outbound = {
  page: number;
  limit: number;
  order_by: string;
  order_by_direction: string;
  agent_id?: string | null | undefined;
  channel_id?: string | null | undefined;
  target?: string | null | undefined;
  fallback_target?: string | null | undefined;
};

/** @internal */
export const ChannelTargetsListRequest$outboundSchema: z.ZodType<
  ChannelTargetsListRequest$Outbound,
  z.ZodTypeDef,
  ChannelTargetsListRequest
> = z.object({
  page: z.number().int().default(0),
  limit: z.number().int().default(100),
  orderBy: z.string().default("target"),
  orderByDirection: z.string().default("DESC"),
  agentId: z.nullable(z.string()).optional(),
  channelId: z.nullable(z.string()).optional(),
  target: z.nullable(z.string()).optional(),
  fallbackTarget: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    orderBy: "order_by",
    orderByDirection: "order_by_direction",
    agentId: "agent_id",
    channelId: "channel_id",
    fallbackTarget: "fallback_target",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChannelTargetsListRequest$ {
  /** @deprecated use `ChannelTargetsListRequest$inboundSchema` instead. */
  export const inboundSchema = ChannelTargetsListRequest$inboundSchema;
  /** @deprecated use `ChannelTargetsListRequest$outboundSchema` instead. */
  export const outboundSchema = ChannelTargetsListRequest$outboundSchema;
  /** @deprecated use `ChannelTargetsListRequest$Outbound` instead. */
  export type Outbound = ChannelTargetsListRequest$Outbound;
}
