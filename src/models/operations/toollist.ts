/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ToolListRequest = {
  page?: number | null | undefined;
  limit?: number | undefined;
};

/** @internal */
export const ToolListRequest$inboundSchema: z.ZodType<
  ToolListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.nullable(z.number().int()).optional(),
  limit: z.number().int().default(-1),
});

/** @internal */
export type ToolListRequest$Outbound = {
  page?: number | null | undefined;
  limit: number;
};

/** @internal */
export const ToolListRequest$outboundSchema: z.ZodType<
  ToolListRequest$Outbound,
  z.ZodTypeDef,
  ToolListRequest
> = z.object({
  page: z.nullable(z.number().int()).optional(),
  limit: z.number().int().default(-1),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolListRequest$ {
  /** @deprecated use `ToolListRequest$inboundSchema` instead. */
  export const inboundSchema = ToolListRequest$inboundSchema;
  /** @deprecated use `ToolListRequest$outboundSchema` instead. */
  export const outboundSchema = ToolListRequest$outboundSchema;
  /** @deprecated use `ToolListRequest$Outbound` instead. */
  export type Outbound = ToolListRequest$Outbound;
}
