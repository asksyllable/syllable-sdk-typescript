/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TakeoutsGetFileRequest = {
  jobId: string;
  fileName: string;
};

/** @internal */
export const TakeoutsGetFileRequest$inboundSchema: z.ZodType<
  TakeoutsGetFileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  job_id: z.string(),
  file_name: z.string(),
}).transform((v) => {
  return remap$(v, {
    "job_id": "jobId",
    "file_name": "fileName",
  });
});

/** @internal */
export type TakeoutsGetFileRequest$Outbound = {
  job_id: string;
  file_name: string;
};

/** @internal */
export const TakeoutsGetFileRequest$outboundSchema: z.ZodType<
  TakeoutsGetFileRequest$Outbound,
  z.ZodTypeDef,
  TakeoutsGetFileRequest
> = z.object({
  jobId: z.string(),
  fileName: z.string(),
}).transform((v) => {
  return remap$(v, {
    jobId: "job_id",
    fileName: "file_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TakeoutsGetFileRequest$ {
  /** @deprecated use `TakeoutsGetFileRequest$inboundSchema` instead. */
  export const inboundSchema = TakeoutsGetFileRequest$inboundSchema;
  /** @deprecated use `TakeoutsGetFileRequest$outboundSchema` instead. */
  export const outboundSchema = TakeoutsGetFileRequest$outboundSchema;
  /** @deprecated use `TakeoutsGetFileRequest$Outbound` instead. */
  export type Outbound = TakeoutsGetFileRequest$Outbound;
}

export function takeoutsGetFileRequestToJSON(
  takeoutsGetFileRequest: TakeoutsGetFileRequest,
): string {
  return JSON.stringify(
    TakeoutsGetFileRequest$outboundSchema.parse(takeoutsGetFileRequest),
  );
}

export function takeoutsGetFileRequestFromJSON(
  jsonString: string,
): SafeParseResult<TakeoutsGetFileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TakeoutsGetFileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TakeoutsGetFileRequest' from JSON`,
  );
}
