/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OutboundBatchUpdateRequest = {
  batchId: string;
  communicationBatchUpdate: components.CommunicationBatchUpdate;
};

/** @internal */
export const OutboundBatchUpdateRequest$inboundSchema: z.ZodType<
  OutboundBatchUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  batch_id: z.string(),
  CommunicationBatchUpdate: components.CommunicationBatchUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "batch_id": "batchId",
    "CommunicationBatchUpdate": "communicationBatchUpdate",
  });
});

/** @internal */
export type OutboundBatchUpdateRequest$Outbound = {
  batch_id: string;
  CommunicationBatchUpdate: components.CommunicationBatchUpdate$Outbound;
};

/** @internal */
export const OutboundBatchUpdateRequest$outboundSchema: z.ZodType<
  OutboundBatchUpdateRequest$Outbound,
  z.ZodTypeDef,
  OutboundBatchUpdateRequest
> = z.object({
  batchId: z.string(),
  communicationBatchUpdate: components.CommunicationBatchUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    batchId: "batch_id",
    communicationBatchUpdate: "CommunicationBatchUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundBatchUpdateRequest$ {
  /** @deprecated use `OutboundBatchUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = OutboundBatchUpdateRequest$inboundSchema;
  /** @deprecated use `OutboundBatchUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = OutboundBatchUpdateRequest$outboundSchema;
  /** @deprecated use `OutboundBatchUpdateRequest$Outbound` instead. */
  export type Outbound = OutboundBatchUpdateRequest$Outbound;
}

export function outboundBatchUpdateRequestToJSON(
  outboundBatchUpdateRequest: OutboundBatchUpdateRequest,
): string {
  return JSON.stringify(
    OutboundBatchUpdateRequest$outboundSchema.parse(outboundBatchUpdateRequest),
  );
}

export function outboundBatchUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<OutboundBatchUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundBatchUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundBatchUpdateRequest' from JSON`,
  );
}
