/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ToolDeleteRequest = {
  toolName: string;
  reason: string;
};

/** @internal */
export const ToolDeleteRequest$inboundSchema: z.ZodType<
  ToolDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  tool_name: z.string(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    "tool_name": "toolName",
  });
});

/** @internal */
export type ToolDeleteRequest$Outbound = {
  tool_name: string;
  reason: string;
};

/** @internal */
export const ToolDeleteRequest$outboundSchema: z.ZodType<
  ToolDeleteRequest$Outbound,
  z.ZodTypeDef,
  ToolDeleteRequest
> = z.object({
  toolName: z.string(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    toolName: "tool_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolDeleteRequest$ {
  /** @deprecated use `ToolDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = ToolDeleteRequest$inboundSchema;
  /** @deprecated use `ToolDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = ToolDeleteRequest$outboundSchema;
  /** @deprecated use `ToolDeleteRequest$Outbound` instead. */
  export type Outbound = ToolDeleteRequest$Outbound;
}

export function toolDeleteRequestToJSON(
  toolDeleteRequest: ToolDeleteRequest,
): string {
  return JSON.stringify(
    ToolDeleteRequest$outboundSchema.parse(toolDeleteRequest),
  );
}

export function toolDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<ToolDeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolDeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolDeleteRequest' from JSON`,
  );
}
