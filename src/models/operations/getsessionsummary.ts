/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetSessionSummaryRequest = {
  page?: number | undefined;
  limit?: number | undefined;
  startDate?: string | null | undefined;
  endDate?: string | null | undefined;
  orderBy?: string | null | undefined;
  agentId?: number | null | undefined;
};

/**
 * Successful Response
 */
export type GetSessionSummaryResponseGetSessionSummary = {};

/** @internal */
export const GetSessionSummaryRequest$inboundSchema: z.ZodType<
  GetSessionSummaryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(0),
  limit: z.number().int().default(100),
  start_date: z.nullable(z.string()).optional(),
  end_date: z.nullable(z.string()).optional(),
  order_by: z.nullable(z.string()).optional(),
  agent_id: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "start_date": "startDate",
    "end_date": "endDate",
    "order_by": "orderBy",
    "agent_id": "agentId",
  });
});

/** @internal */
export type GetSessionSummaryRequest$Outbound = {
  page: number;
  limit: number;
  start_date?: string | null | undefined;
  end_date?: string | null | undefined;
  order_by?: string | null | undefined;
  agent_id?: number | null | undefined;
};

/** @internal */
export const GetSessionSummaryRequest$outboundSchema: z.ZodType<
  GetSessionSummaryRequest$Outbound,
  z.ZodTypeDef,
  GetSessionSummaryRequest
> = z.object({
  page: z.number().int().default(0),
  limit: z.number().int().default(100),
  startDate: z.nullable(z.string()).optional(),
  endDate: z.nullable(z.string()).optional(),
  orderBy: z.nullable(z.string()).optional(),
  agentId: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    startDate: "start_date",
    endDate: "end_date",
    orderBy: "order_by",
    agentId: "agent_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSessionSummaryRequest$ {
  /** @deprecated use `GetSessionSummaryRequest$inboundSchema` instead. */
  export const inboundSchema = GetSessionSummaryRequest$inboundSchema;
  /** @deprecated use `GetSessionSummaryRequest$outboundSchema` instead. */
  export const outboundSchema = GetSessionSummaryRequest$outboundSchema;
  /** @deprecated use `GetSessionSummaryRequest$Outbound` instead. */
  export type Outbound = GetSessionSummaryRequest$Outbound;
}

export function getSessionSummaryRequestToJSON(
  getSessionSummaryRequest: GetSessionSummaryRequest,
): string {
  return JSON.stringify(
    GetSessionSummaryRequest$outboundSchema.parse(getSessionSummaryRequest),
  );
}

export function getSessionSummaryRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSessionSummaryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSessionSummaryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSessionSummaryRequest' from JSON`,
  );
}

/** @internal */
export const GetSessionSummaryResponseGetSessionSummary$inboundSchema:
  z.ZodType<GetSessionSummaryResponseGetSessionSummary, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type GetSessionSummaryResponseGetSessionSummary$Outbound = {};

/** @internal */
export const GetSessionSummaryResponseGetSessionSummary$outboundSchema:
  z.ZodType<
    GetSessionSummaryResponseGetSessionSummary$Outbound,
    z.ZodTypeDef,
    GetSessionSummaryResponseGetSessionSummary
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSessionSummaryResponseGetSessionSummary$ {
  /** @deprecated use `GetSessionSummaryResponseGetSessionSummary$inboundSchema` instead. */
  export const inboundSchema =
    GetSessionSummaryResponseGetSessionSummary$inboundSchema;
  /** @deprecated use `GetSessionSummaryResponseGetSessionSummary$outboundSchema` instead. */
  export const outboundSchema =
    GetSessionSummaryResponseGetSessionSummary$outboundSchema;
  /** @deprecated use `GetSessionSummaryResponseGetSessionSummary$Outbound` instead. */
  export type Outbound = GetSessionSummaryResponseGetSessionSummary$Outbound;
}

export function getSessionSummaryResponseGetSessionSummaryToJSON(
  getSessionSummaryResponseGetSessionSummary:
    GetSessionSummaryResponseGetSessionSummary,
): string {
  return JSON.stringify(
    GetSessionSummaryResponseGetSessionSummary$outboundSchema.parse(
      getSessionSummaryResponseGetSessionSummary,
    ),
  );
}

export function getSessionSummaryResponseGetSessionSummaryFromJSON(
  jsonString: string,
): SafeParseResult<
  GetSessionSummaryResponseGetSessionSummary,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetSessionSummaryResponseGetSessionSummary$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetSessionSummaryResponseGetSessionSummary' from JSON`,
  );
}
