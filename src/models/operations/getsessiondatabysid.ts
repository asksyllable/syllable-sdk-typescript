/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetSessionDataBySidRequest = {
  channelManagerService: string;
  channelManagerSid: string;
};

/** @internal */
export const GetSessionDataBySidRequest$inboundSchema: z.ZodType<
  GetSessionDataBySidRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_manager_service: z.string(),
  channel_manager_sid: z.string(),
}).transform((v) => {
  return remap$(v, {
    "channel_manager_service": "channelManagerService",
    "channel_manager_sid": "channelManagerSid",
  });
});

/** @internal */
export type GetSessionDataBySidRequest$Outbound = {
  channel_manager_service: string;
  channel_manager_sid: string;
};

/** @internal */
export const GetSessionDataBySidRequest$outboundSchema: z.ZodType<
  GetSessionDataBySidRequest$Outbound,
  z.ZodTypeDef,
  GetSessionDataBySidRequest
> = z.object({
  channelManagerService: z.string(),
  channelManagerSid: z.string(),
}).transform((v) => {
  return remap$(v, {
    channelManagerService: "channel_manager_service",
    channelManagerSid: "channel_manager_sid",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSessionDataBySidRequest$ {
  /** @deprecated use `GetSessionDataBySidRequest$inboundSchema` instead. */
  export const inboundSchema = GetSessionDataBySidRequest$inboundSchema;
  /** @deprecated use `GetSessionDataBySidRequest$outboundSchema` instead. */
  export const outboundSchema = GetSessionDataBySidRequest$outboundSchema;
  /** @deprecated use `GetSessionDataBySidRequest$Outbound` instead. */
  export type Outbound = GetSessionDataBySidRequest$Outbound;
}

export function getSessionDataBySidRequestToJSON(
  getSessionDataBySidRequest: GetSessionDataBySidRequest,
): string {
  return JSON.stringify(
    GetSessionDataBySidRequest$outboundSchema.parse(getSessionDataBySidRequest),
  );
}

export function getSessionDataBySidRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetSessionDataBySidRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetSessionDataBySidRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetSessionDataBySidRequest' from JSON`,
  );
}
