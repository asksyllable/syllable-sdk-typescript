/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DirectoryMemberUpdateRequest = {
  memberId: number;
  directoryMemberUpdate: components.DirectoryMemberUpdate;
};

/** @internal */
export const DirectoryMemberUpdateRequest$inboundSchema: z.ZodType<
  DirectoryMemberUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  member_id: z.number().int(),
  DirectoryMemberUpdate: components.DirectoryMemberUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "member_id": "memberId",
    "DirectoryMemberUpdate": "directoryMemberUpdate",
  });
});

/** @internal */
export type DirectoryMemberUpdateRequest$Outbound = {
  member_id: number;
  DirectoryMemberUpdate: components.DirectoryMemberUpdate$Outbound;
};

/** @internal */
export const DirectoryMemberUpdateRequest$outboundSchema: z.ZodType<
  DirectoryMemberUpdateRequest$Outbound,
  z.ZodTypeDef,
  DirectoryMemberUpdateRequest
> = z.object({
  memberId: z.number().int(),
  directoryMemberUpdate: components.DirectoryMemberUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    memberId: "member_id",
    directoryMemberUpdate: "DirectoryMemberUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DirectoryMemberUpdateRequest$ {
  /** @deprecated use `DirectoryMemberUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = DirectoryMemberUpdateRequest$inboundSchema;
  /** @deprecated use `DirectoryMemberUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = DirectoryMemberUpdateRequest$outboundSchema;
  /** @deprecated use `DirectoryMemberUpdateRequest$Outbound` instead. */
  export type Outbound = DirectoryMemberUpdateRequest$Outbound;
}

export function directoryMemberUpdateRequestToJSON(
  directoryMemberUpdateRequest: DirectoryMemberUpdateRequest,
): string {
  return JSON.stringify(
    DirectoryMemberUpdateRequest$outboundSchema.parse(
      directoryMemberUpdateRequest,
    ),
  );
}

export function directoryMemberUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<DirectoryMemberUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DirectoryMemberUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DirectoryMemberUpdateRequest' from JSON`,
  );
}
