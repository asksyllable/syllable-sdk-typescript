/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GreetingsDeleteRequest = {
  greetingId: number;
  reason: string;
};

/** @internal */
export const GreetingsDeleteRequest$inboundSchema: z.ZodType<
  GreetingsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  greeting_id: z.number().int(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    "greeting_id": "greetingId",
  });
});

/** @internal */
export type GreetingsDeleteRequest$Outbound = {
  greeting_id: number;
  reason: string;
};

/** @internal */
export const GreetingsDeleteRequest$outboundSchema: z.ZodType<
  GreetingsDeleteRequest$Outbound,
  z.ZodTypeDef,
  GreetingsDeleteRequest
> = z.object({
  greetingId: z.number().int(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    greetingId: "greeting_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GreetingsDeleteRequest$ {
  /** @deprecated use `GreetingsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = GreetingsDeleteRequest$inboundSchema;
  /** @deprecated use `GreetingsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = GreetingsDeleteRequest$outboundSchema;
  /** @deprecated use `GreetingsDeleteRequest$Outbound` instead. */
  export type Outbound = GreetingsDeleteRequest$Outbound;
}
