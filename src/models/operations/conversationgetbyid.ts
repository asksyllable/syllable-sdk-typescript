/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ConversationGetByIdRequest = {
  conversationId: string;
};

/** @internal */
export const ConversationGetByIdRequest$inboundSchema: z.ZodType<
  ConversationGetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  conversation_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "conversation_id": "conversationId",
  });
});

/** @internal */
export type ConversationGetByIdRequest$Outbound = {
  conversation_id: string;
};

/** @internal */
export const ConversationGetByIdRequest$outboundSchema: z.ZodType<
  ConversationGetByIdRequest$Outbound,
  z.ZodTypeDef,
  ConversationGetByIdRequest
> = z.object({
  conversationId: z.string(),
}).transform((v) => {
  return remap$(v, {
    conversationId: "conversation_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConversationGetByIdRequest$ {
  /** @deprecated use `ConversationGetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = ConversationGetByIdRequest$inboundSchema;
  /** @deprecated use `ConversationGetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = ConversationGetByIdRequest$outboundSchema;
  /** @deprecated use `ConversationGetByIdRequest$Outbound` instead. */
  export type Outbound = ConversationGetByIdRequest$Outbound;
}
