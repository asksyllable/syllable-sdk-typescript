/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ServicesGetByIdRequest = {
  serviceId: number;
};

/** @internal */
export const ServicesGetByIdRequest$inboundSchema: z.ZodType<
  ServicesGetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_id: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
  });
});

/** @internal */
export type ServicesGetByIdRequest$Outbound = {
  service_id: number;
};

/** @internal */
export const ServicesGetByIdRequest$outboundSchema: z.ZodType<
  ServicesGetByIdRequest$Outbound,
  z.ZodTypeDef,
  ServicesGetByIdRequest
> = z.object({
  serviceId: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServicesGetByIdRequest$ {
  /** @deprecated use `ServicesGetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = ServicesGetByIdRequest$inboundSchema;
  /** @deprecated use `ServicesGetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = ServicesGetByIdRequest$outboundSchema;
  /** @deprecated use `ServicesGetByIdRequest$Outbound` instead. */
  export type Outbound = ServicesGetByIdRequest$Outbound;
}

export function servicesGetByIdRequestToJSON(
  servicesGetByIdRequest: ServicesGetByIdRequest,
): string {
  return JSON.stringify(
    ServicesGetByIdRequest$outboundSchema.parse(servicesGetByIdRequest),
  );
}

export function servicesGetByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<ServicesGetByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ServicesGetByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ServicesGetByIdRequest' from JSON`,
  );
}
