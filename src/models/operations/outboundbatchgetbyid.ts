/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OutboundBatchGetByIdRequest = {
  batchId: string;
};

/** @internal */
export const OutboundBatchGetByIdRequest$inboundSchema: z.ZodType<
  OutboundBatchGetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  batch_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "batch_id": "batchId",
  });
});

/** @internal */
export type OutboundBatchGetByIdRequest$Outbound = {
  batch_id: string;
};

/** @internal */
export const OutboundBatchGetByIdRequest$outboundSchema: z.ZodType<
  OutboundBatchGetByIdRequest$Outbound,
  z.ZodTypeDef,
  OutboundBatchGetByIdRequest
> = z.object({
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    batchId: "batch_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundBatchGetByIdRequest$ {
  /** @deprecated use `OutboundBatchGetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = OutboundBatchGetByIdRequest$inboundSchema;
  /** @deprecated use `OutboundBatchGetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = OutboundBatchGetByIdRequest$outboundSchema;
  /** @deprecated use `OutboundBatchGetByIdRequest$Outbound` instead. */
  export type Outbound = OutboundBatchGetByIdRequest$Outbound;
}

export function outboundBatchGetByIdRequestToJSON(
  outboundBatchGetByIdRequest: OutboundBatchGetByIdRequest,
): string {
  return JSON.stringify(
    OutboundBatchGetByIdRequest$outboundSchema.parse(
      outboundBatchGetByIdRequest,
    ),
  );
}

export function outboundBatchGetByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<OutboundBatchGetByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundBatchGetByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundBatchGetByIdRequest' from JSON`,
  );
}
