/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RolesDeleteRequest = {
  roleId: number;
  reason: string;
};

/** @internal */
export const RolesDeleteRequest$inboundSchema: z.ZodType<
  RolesDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  role_id: z.number().int(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    "role_id": "roleId",
  });
});

/** @internal */
export type RolesDeleteRequest$Outbound = {
  role_id: number;
  reason: string;
};

/** @internal */
export const RolesDeleteRequest$outboundSchema: z.ZodType<
  RolesDeleteRequest$Outbound,
  z.ZodTypeDef,
  RolesDeleteRequest
> = z.object({
  roleId: z.number().int(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    roleId: "role_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RolesDeleteRequest$ {
  /** @deprecated use `RolesDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = RolesDeleteRequest$inboundSchema;
  /** @deprecated use `RolesDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = RolesDeleteRequest$outboundSchema;
  /** @deprecated use `RolesDeleteRequest$Outbound` instead. */
  export type Outbound = RolesDeleteRequest$Outbound;
}

export function rolesDeleteRequestToJSON(
  rolesDeleteRequest: RolesDeleteRequest,
): string {
  return JSON.stringify(
    RolesDeleteRequest$outboundSchema.parse(rolesDeleteRequest),
  );
}

export function rolesDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<RolesDeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RolesDeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RolesDeleteRequest' from JSON`,
  );
}
