/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InsightsFolderGetByIdRequest = {
  folderId: number;
};

/** @internal */
export const InsightsFolderGetByIdRequest$inboundSchema: z.ZodType<
  InsightsFolderGetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  folder_id: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "folder_id": "folderId",
  });
});

/** @internal */
export type InsightsFolderGetByIdRequest$Outbound = {
  folder_id: number;
};

/** @internal */
export const InsightsFolderGetByIdRequest$outboundSchema: z.ZodType<
  InsightsFolderGetByIdRequest$Outbound,
  z.ZodTypeDef,
  InsightsFolderGetByIdRequest
> = z.object({
  folderId: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    folderId: "folder_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightsFolderGetByIdRequest$ {
  /** @deprecated use `InsightsFolderGetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = InsightsFolderGetByIdRequest$inboundSchema;
  /** @deprecated use `InsightsFolderGetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = InsightsFolderGetByIdRequest$outboundSchema;
  /** @deprecated use `InsightsFolderGetByIdRequest$Outbound` instead. */
  export type Outbound = InsightsFolderGetByIdRequest$Outbound;
}

export function insightsFolderGetByIdRequestToJSON(
  insightsFolderGetByIdRequest: InsightsFolderGetByIdRequest,
): string {
  return JSON.stringify(
    InsightsFolderGetByIdRequest$outboundSchema.parse(
      insightsFolderGetByIdRequest,
    ),
  );
}

export function insightsFolderGetByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<InsightsFolderGetByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightsFolderGetByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightsFolderGetByIdRequest' from JSON`,
  );
}
