/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OutboundCampaignUpdateRequest = {
  campaignId: number;
  outboundCampaignInput: components.OutboundCampaignInput;
};

/** @internal */
export const OutboundCampaignUpdateRequest$inboundSchema: z.ZodType<
  OutboundCampaignUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  campaign_id: z.number().int(),
  OutboundCampaignInput: components.OutboundCampaignInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "campaign_id": "campaignId",
    "OutboundCampaignInput": "outboundCampaignInput",
  });
});

/** @internal */
export type OutboundCampaignUpdateRequest$Outbound = {
  campaign_id: number;
  OutboundCampaignInput: components.OutboundCampaignInput$Outbound;
};

/** @internal */
export const OutboundCampaignUpdateRequest$outboundSchema: z.ZodType<
  OutboundCampaignUpdateRequest$Outbound,
  z.ZodTypeDef,
  OutboundCampaignUpdateRequest
> = z.object({
  campaignId: z.number().int(),
  outboundCampaignInput: components.OutboundCampaignInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    campaignId: "campaign_id",
    outboundCampaignInput: "OutboundCampaignInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundCampaignUpdateRequest$ {
  /** @deprecated use `OutboundCampaignUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = OutboundCampaignUpdateRequest$inboundSchema;
  /** @deprecated use `OutboundCampaignUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = OutboundCampaignUpdateRequest$outboundSchema;
  /** @deprecated use `OutboundCampaignUpdateRequest$Outbound` instead. */
  export type Outbound = OutboundCampaignUpdateRequest$Outbound;
}

export function outboundCampaignUpdateRequestToJSON(
  outboundCampaignUpdateRequest: OutboundCampaignUpdateRequest,
): string {
  return JSON.stringify(
    OutboundCampaignUpdateRequest$outboundSchema.parse(
      outboundCampaignUpdateRequest,
    ),
  );
}

export function outboundCampaignUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<OutboundCampaignUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundCampaignUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundCampaignUpdateRequest' from JSON`,
  );
}
