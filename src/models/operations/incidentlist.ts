/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IncidentListRequest = {
  limit?: number | undefined;
  offset?: number | undefined;
};

/** @internal */
export const IncidentListRequest$inboundSchema: z.ZodType<
  IncidentListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().int().default(10),
  offset: z.number().int().default(0),
});

/** @internal */
export type IncidentListRequest$Outbound = {
  limit: number;
  offset: number;
};

/** @internal */
export const IncidentListRequest$outboundSchema: z.ZodType<
  IncidentListRequest$Outbound,
  z.ZodTypeDef,
  IncidentListRequest
> = z.object({
  limit: z.number().int().default(10),
  offset: z.number().int().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncidentListRequest$ {
  /** @deprecated use `IncidentListRequest$inboundSchema` instead. */
  export const inboundSchema = IncidentListRequest$inboundSchema;
  /** @deprecated use `IncidentListRequest$outboundSchema` instead. */
  export const outboundSchema = IncidentListRequest$outboundSchema;
  /** @deprecated use `IncidentListRequest$Outbound` instead. */
  export type Outbound = IncidentListRequest$Outbound;
}

export function incidentListRequestToJSON(
  incidentListRequest: IncidentListRequest,
): string {
  return JSON.stringify(
    IncidentListRequest$outboundSchema.parse(incidentListRequest),
  );
}

export function incidentListRequestFromJSON(
  jsonString: string,
): SafeParseResult<IncidentListRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IncidentListRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IncidentListRequest' from JSON`,
  );
}
