/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InsightsWorkflowGetByIdRequest = {
  workflowId: number;
};

/** @internal */
export const InsightsWorkflowGetByIdRequest$inboundSchema: z.ZodType<
  InsightsWorkflowGetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workflow_id: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "workflow_id": "workflowId",
  });
});

/** @internal */
export type InsightsWorkflowGetByIdRequest$Outbound = {
  workflow_id: number;
};

/** @internal */
export const InsightsWorkflowGetByIdRequest$outboundSchema: z.ZodType<
  InsightsWorkflowGetByIdRequest$Outbound,
  z.ZodTypeDef,
  InsightsWorkflowGetByIdRequest
> = z.object({
  workflowId: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    workflowId: "workflow_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightsWorkflowGetByIdRequest$ {
  /** @deprecated use `InsightsWorkflowGetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = InsightsWorkflowGetByIdRequest$inboundSchema;
  /** @deprecated use `InsightsWorkflowGetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = InsightsWorkflowGetByIdRequest$outboundSchema;
  /** @deprecated use `InsightsWorkflowGetByIdRequest$Outbound` instead. */
  export type Outbound = InsightsWorkflowGetByIdRequest$Outbound;
}

export function insightsWorkflowGetByIdRequestToJSON(
  insightsWorkflowGetByIdRequest: InsightsWorkflowGetByIdRequest,
): string {
  return JSON.stringify(
    InsightsWorkflowGetByIdRequest$outboundSchema.parse(
      insightsWorkflowGetByIdRequest,
    ),
  );
}

export function insightsWorkflowGetByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<InsightsWorkflowGetByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightsWorkflowGetByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightsWorkflowGetByIdRequest' from JSON`,
  );
}
