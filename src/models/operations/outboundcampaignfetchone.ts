/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OutboundCampaignFetchOneRequest = {
  campaignId: string;
};

/** @internal */
export const OutboundCampaignFetchOneRequest$inboundSchema: z.ZodType<
  OutboundCampaignFetchOneRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  campaign_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "campaign_id": "campaignId",
  });
});

/** @internal */
export type OutboundCampaignFetchOneRequest$Outbound = {
  campaign_id: string;
};

/** @internal */
export const OutboundCampaignFetchOneRequest$outboundSchema: z.ZodType<
  OutboundCampaignFetchOneRequest$Outbound,
  z.ZodTypeDef,
  OutboundCampaignFetchOneRequest
> = z.object({
  campaignId: z.string(),
}).transform((v) => {
  return remap$(v, {
    campaignId: "campaign_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundCampaignFetchOneRequest$ {
  /** @deprecated use `OutboundCampaignFetchOneRequest$inboundSchema` instead. */
  export const inboundSchema = OutboundCampaignFetchOneRequest$inboundSchema;
  /** @deprecated use `OutboundCampaignFetchOneRequest$outboundSchema` instead. */
  export const outboundSchema = OutboundCampaignFetchOneRequest$outboundSchema;
  /** @deprecated use `OutboundCampaignFetchOneRequest$Outbound` instead. */
  export type Outbound = OutboundCampaignFetchOneRequest$Outbound;
}

export function outboundCampaignFetchOneRequestToJSON(
  outboundCampaignFetchOneRequest: OutboundCampaignFetchOneRequest,
): string {
  return JSON.stringify(
    OutboundCampaignFetchOneRequest$outboundSchema.parse(
      outboundCampaignFetchOneRequest,
    ),
  );
}

export function outboundCampaignFetchOneRequestFromJSON(
  jsonString: string,
): SafeParseResult<OutboundCampaignFetchOneRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundCampaignFetchOneRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundCampaignFetchOneRequest' from JSON`,
  );
}
