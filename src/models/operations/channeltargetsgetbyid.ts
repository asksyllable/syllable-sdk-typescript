/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChannelTargetsGetByIdRequest = {
  channelId: number;
  targetId: number;
};

/** @internal */
export const ChannelTargetsGetByIdRequest$inboundSchema: z.ZodType<
  ChannelTargetsGetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel_id: z.number().int(),
  target_id: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "channel_id": "channelId",
    "target_id": "targetId",
  });
});

/** @internal */
export type ChannelTargetsGetByIdRequest$Outbound = {
  channel_id: number;
  target_id: number;
};

/** @internal */
export const ChannelTargetsGetByIdRequest$outboundSchema: z.ZodType<
  ChannelTargetsGetByIdRequest$Outbound,
  z.ZodTypeDef,
  ChannelTargetsGetByIdRequest
> = z.object({
  channelId: z.number().int(),
  targetId: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    channelId: "channel_id",
    targetId: "target_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChannelTargetsGetByIdRequest$ {
  /** @deprecated use `ChannelTargetsGetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = ChannelTargetsGetByIdRequest$inboundSchema;
  /** @deprecated use `ChannelTargetsGetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = ChannelTargetsGetByIdRequest$outboundSchema;
  /** @deprecated use `ChannelTargetsGetByIdRequest$Outbound` instead. */
  export type Outbound = ChannelTargetsGetByIdRequest$Outbound;
}

export function channelTargetsGetByIdRequestToJSON(
  channelTargetsGetByIdRequest: ChannelTargetsGetByIdRequest,
): string {
  return JSON.stringify(
    ChannelTargetsGetByIdRequest$outboundSchema.parse(
      channelTargetsGetByIdRequest,
    ),
  );
}

export function channelTargetsGetByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChannelTargetsGetByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChannelTargetsGetByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChannelTargetsGetByIdRequest' from JSON`,
  );
}
