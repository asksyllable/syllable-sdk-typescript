/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OutboundCampaignGetByIRequest = {
  campaignId: string;
};

/** @internal */
export const OutboundCampaignGetByIRequest$inboundSchema: z.ZodType<
  OutboundCampaignGetByIRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  campaign_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "campaign_id": "campaignId",
  });
});

/** @internal */
export type OutboundCampaignGetByIRequest$Outbound = {
  campaign_id: string;
};

/** @internal */
export const OutboundCampaignGetByIRequest$outboundSchema: z.ZodType<
  OutboundCampaignGetByIRequest$Outbound,
  z.ZodTypeDef,
  OutboundCampaignGetByIRequest
> = z.object({
  campaignId: z.string(),
}).transform((v) => {
  return remap$(v, {
    campaignId: "campaign_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundCampaignGetByIRequest$ {
  /** @deprecated use `OutboundCampaignGetByIRequest$inboundSchema` instead. */
  export const inboundSchema = OutboundCampaignGetByIRequest$inboundSchema;
  /** @deprecated use `OutboundCampaignGetByIRequest$outboundSchema` instead. */
  export const outboundSchema = OutboundCampaignGetByIRequest$outboundSchema;
  /** @deprecated use `OutboundCampaignGetByIRequest$Outbound` instead. */
  export type Outbound = OutboundCampaignGetByIRequest$Outbound;
}

export function outboundCampaignGetByIRequestToJSON(
  outboundCampaignGetByIRequest: OutboundCampaignGetByIRequest,
): string {
  return JSON.stringify(
    OutboundCampaignGetByIRequest$outboundSchema.parse(
      outboundCampaignGetByIRequest,
    ),
  );
}

export function outboundCampaignGetByIRequestFromJSON(
  jsonString: string,
): SafeParseResult<OutboundCampaignGetByIRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundCampaignGetByIRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundCampaignGetByIRequest' from JSON`,
  );
}
