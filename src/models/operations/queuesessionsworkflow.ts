/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Successful Response
 */
export type QueueSessionsWorkflowResponseQueueSessionsWorkflow = {};

/** @internal */
export const QueueSessionsWorkflowResponseQueueSessionsWorkflow$inboundSchema:
  z.ZodType<
    QueueSessionsWorkflowResponseQueueSessionsWorkflow,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type QueueSessionsWorkflowResponseQueueSessionsWorkflow$Outbound = {};

/** @internal */
export const QueueSessionsWorkflowResponseQueueSessionsWorkflow$outboundSchema:
  z.ZodType<
    QueueSessionsWorkflowResponseQueueSessionsWorkflow$Outbound,
    z.ZodTypeDef,
    QueueSessionsWorkflowResponseQueueSessionsWorkflow
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueSessionsWorkflowResponseQueueSessionsWorkflow$ {
  /** @deprecated use `QueueSessionsWorkflowResponseQueueSessionsWorkflow$inboundSchema` instead. */
  export const inboundSchema =
    QueueSessionsWorkflowResponseQueueSessionsWorkflow$inboundSchema;
  /** @deprecated use `QueueSessionsWorkflowResponseQueueSessionsWorkflow$outboundSchema` instead. */
  export const outboundSchema =
    QueueSessionsWorkflowResponseQueueSessionsWorkflow$outboundSchema;
  /** @deprecated use `QueueSessionsWorkflowResponseQueueSessionsWorkflow$Outbound` instead. */
  export type Outbound =
    QueueSessionsWorkflowResponseQueueSessionsWorkflow$Outbound;
}

export function queueSessionsWorkflowResponseQueueSessionsWorkflowToJSON(
  queueSessionsWorkflowResponseQueueSessionsWorkflow:
    QueueSessionsWorkflowResponseQueueSessionsWorkflow,
): string {
  return JSON.stringify(
    QueueSessionsWorkflowResponseQueueSessionsWorkflow$outboundSchema.parse(
      queueSessionsWorkflowResponseQueueSessionsWorkflow,
    ),
  );
}

export function queueSessionsWorkflowResponseQueueSessionsWorkflowFromJSON(
  jsonString: string,
): SafeParseResult<
  QueueSessionsWorkflowResponseQueueSessionsWorkflow,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      QueueSessionsWorkflowResponseQueueSessionsWorkflow$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'QueueSessionsWorkflowResponseQueueSessionsWorkflow' from JSON`,
  );
}
