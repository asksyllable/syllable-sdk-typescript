/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type OutboundBatchDeleteRequest = {
  batchId: string;
  bodyOutboundBatchDelete: components.BodyOutboundBatchDelete;
};

/** @internal */
export const OutboundBatchDeleteRequest$inboundSchema: z.ZodType<
  OutboundBatchDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  batch_id: z.string(),
  Body_outbound_batch_delete: components.BodyOutboundBatchDelete$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "batch_id": "batchId",
    "Body_outbound_batch_delete": "bodyOutboundBatchDelete",
  });
});

/** @internal */
export type OutboundBatchDeleteRequest$Outbound = {
  batch_id: string;
  Body_outbound_batch_delete: components.BodyOutboundBatchDelete$Outbound;
};

/** @internal */
export const OutboundBatchDeleteRequest$outboundSchema: z.ZodType<
  OutboundBatchDeleteRequest$Outbound,
  z.ZodTypeDef,
  OutboundBatchDeleteRequest
> = z.object({
  batchId: z.string(),
  bodyOutboundBatchDelete: components.BodyOutboundBatchDelete$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    batchId: "batch_id",
    bodyOutboundBatchDelete: "Body_outbound_batch_delete",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundBatchDeleteRequest$ {
  /** @deprecated use `OutboundBatchDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = OutboundBatchDeleteRequest$inboundSchema;
  /** @deprecated use `OutboundBatchDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = OutboundBatchDeleteRequest$outboundSchema;
  /** @deprecated use `OutboundBatchDeleteRequest$Outbound` instead. */
  export type Outbound = OutboundBatchDeleteRequest$Outbound;
}

export function outboundBatchDeleteRequestToJSON(
  outboundBatchDeleteRequest: OutboundBatchDeleteRequest,
): string {
  return JSON.stringify(
    OutboundBatchDeleteRequest$outboundSchema.parse(outboundBatchDeleteRequest),
  );
}

export function outboundBatchDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<OutboundBatchDeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundBatchDeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundBatchDeleteRequest' from JSON`,
  );
}
