/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type VoiceGroupsDeleteRequest = {
  voiceGroupId: number;
  reason: string;
};

/** @internal */
export const VoiceGroupsDeleteRequest$inboundSchema: z.ZodType<
  VoiceGroupsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  voice_group_id: z.number().int(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    "voice_group_id": "voiceGroupId",
  });
});

/** @internal */
export type VoiceGroupsDeleteRequest$Outbound = {
  voice_group_id: number;
  reason: string;
};

/** @internal */
export const VoiceGroupsDeleteRequest$outboundSchema: z.ZodType<
  VoiceGroupsDeleteRequest$Outbound,
  z.ZodTypeDef,
  VoiceGroupsDeleteRequest
> = z.object({
  voiceGroupId: z.number().int(),
  reason: z.string(),
}).transform((v) => {
  return remap$(v, {
    voiceGroupId: "voice_group_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VoiceGroupsDeleteRequest$ {
  /** @deprecated use `VoiceGroupsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = VoiceGroupsDeleteRequest$inboundSchema;
  /** @deprecated use `VoiceGroupsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = VoiceGroupsDeleteRequest$outboundSchema;
  /** @deprecated use `VoiceGroupsDeleteRequest$Outbound` instead. */
  export type Outbound = VoiceGroupsDeleteRequest$Outbound;
}

export function voiceGroupsDeleteRequestToJSON(
  voiceGroupsDeleteRequest: VoiceGroupsDeleteRequest,
): string {
  return JSON.stringify(
    VoiceGroupsDeleteRequest$outboundSchema.parse(voiceGroupsDeleteRequest),
  );
}

export function voiceGroupsDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<VoiceGroupsDeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => VoiceGroupsDeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'VoiceGroupsDeleteRequest' from JSON`,
  );
}
