/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ConversationsListRequest = {
  page?: number | undefined;
  limit?: number | undefined;
  orderBy?: string | undefined;
  orderByDirection?: string | undefined;
  startTime?: string | null | undefined;
  endTime?: string | null | undefined;
  agentType?: string | null | undefined;
  agentId?: string | null | undefined;
  promptId?: string | null | undefined;
  callId?: string | null | undefined;
  source?: string | null | undefined;
  target?: string | null | undefined;
  isLegacy?: boolean | null | undefined;
  isTest?: boolean | null | undefined;
};

/** @internal */
export const ConversationsListRequest$inboundSchema: z.ZodType<
  ConversationsListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(0),
  limit: z.number().int().default(100),
  order_by: z.string().default("timestamp"),
  order_by_direction: z.string().default("DESC"),
  start_time: z.nullable(z.string()).optional(),
  end_time: z.nullable(z.string()).optional(),
  agent_type: z.nullable(z.string()).optional(),
  agent_id: z.nullable(z.string()).optional(),
  prompt_id: z.nullable(z.string()).optional(),
  call_id: z.nullable(z.string()).optional(),
  source: z.nullable(z.string()).optional(),
  target: z.nullable(z.string()).optional(),
  is_legacy: z.nullable(z.boolean()).optional(),
  is_test: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    "order_by": "orderBy",
    "order_by_direction": "orderByDirection",
    "start_time": "startTime",
    "end_time": "endTime",
    "agent_type": "agentType",
    "agent_id": "agentId",
    "prompt_id": "promptId",
    "call_id": "callId",
    "is_legacy": "isLegacy",
    "is_test": "isTest",
  });
});

/** @internal */
export type ConversationsListRequest$Outbound = {
  page: number;
  limit: number;
  order_by: string;
  order_by_direction: string;
  start_time?: string | null | undefined;
  end_time?: string | null | undefined;
  agent_type?: string | null | undefined;
  agent_id?: string | null | undefined;
  prompt_id?: string | null | undefined;
  call_id?: string | null | undefined;
  source?: string | null | undefined;
  target?: string | null | undefined;
  is_legacy?: boolean | null | undefined;
  is_test?: boolean | null | undefined;
};

/** @internal */
export const ConversationsListRequest$outboundSchema: z.ZodType<
  ConversationsListRequest$Outbound,
  z.ZodTypeDef,
  ConversationsListRequest
> = z.object({
  page: z.number().int().default(0),
  limit: z.number().int().default(100),
  orderBy: z.string().default("timestamp"),
  orderByDirection: z.string().default("DESC"),
  startTime: z.nullable(z.string()).optional(),
  endTime: z.nullable(z.string()).optional(),
  agentType: z.nullable(z.string()).optional(),
  agentId: z.nullable(z.string()).optional(),
  promptId: z.nullable(z.string()).optional(),
  callId: z.nullable(z.string()).optional(),
  source: z.nullable(z.string()).optional(),
  target: z.nullable(z.string()).optional(),
  isLegacy: z.nullable(z.boolean()).optional(),
  isTest: z.nullable(z.boolean()).optional(),
}).transform((v) => {
  return remap$(v, {
    orderBy: "order_by",
    orderByDirection: "order_by_direction",
    startTime: "start_time",
    endTime: "end_time",
    agentType: "agent_type",
    agentId: "agent_id",
    promptId: "prompt_id",
    callId: "call_id",
    isLegacy: "is_legacy",
    isTest: "is_test",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConversationsListRequest$ {
  /** @deprecated use `ConversationsListRequest$inboundSchema` instead. */
  export const inboundSchema = ConversationsListRequest$inboundSchema;
  /** @deprecated use `ConversationsListRequest$outboundSchema` instead. */
  export const outboundSchema = ConversationsListRequest$outboundSchema;
  /** @deprecated use `ConversationsListRequest$Outbound` instead. */
  export type Outbound = ConversationsListRequest$Outbound;
}
