/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Twilio channel config information.
 */
export type TwilioChannelConfigCreate = {
  /**
   * SID of the Twilio account
   */
  accountSid: string;
  /**
   * The Twilio auth token
   */
  authToken: string;
};

/** @internal */
export const TwilioChannelConfigCreate$inboundSchema: z.ZodType<
  TwilioChannelConfigCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_sid: z.string(),
  auth_token: z.string(),
}).transform((v) => {
  return remap$(v, {
    "account_sid": "accountSid",
    "auth_token": "authToken",
  });
});

/** @internal */
export type TwilioChannelConfigCreate$Outbound = {
  account_sid: string;
  auth_token: string;
};

/** @internal */
export const TwilioChannelConfigCreate$outboundSchema: z.ZodType<
  TwilioChannelConfigCreate$Outbound,
  z.ZodTypeDef,
  TwilioChannelConfigCreate
> = z.object({
  accountSid: z.string(),
  authToken: z.string(),
}).transform((v) => {
  return remap$(v, {
    accountSid: "account_sid",
    authToken: "auth_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwilioChannelConfigCreate$ {
  /** @deprecated use `TwilioChannelConfigCreate$inboundSchema` instead. */
  export const inboundSchema = TwilioChannelConfigCreate$inboundSchema;
  /** @deprecated use `TwilioChannelConfigCreate$outboundSchema` instead. */
  export const outboundSchema = TwilioChannelConfigCreate$outboundSchema;
  /** @deprecated use `TwilioChannelConfigCreate$Outbound` instead. */
  export type Outbound = TwilioChannelConfigCreate$Outbound;
}

export function twilioChannelConfigCreateToJSON(
  twilioChannelConfigCreate: TwilioChannelConfigCreate,
): string {
  return JSON.stringify(
    TwilioChannelConfigCreate$outboundSchema.parse(twilioChannelConfigCreate),
  );
}

export function twilioChannelConfigCreateFromJSON(
  jsonString: string,
): SafeParseResult<TwilioChannelConfigCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwilioChannelConfigCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwilioChannelConfigCreate' from JSON`,
  );
}
