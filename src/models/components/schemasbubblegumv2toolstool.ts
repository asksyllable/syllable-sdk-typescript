/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ToolDefinition,
  ToolDefinition$inboundSchema,
  ToolDefinition$Outbound,
  ToolDefinition$outboundSchema,
} from "./tooldefinition.js";

/**
 * SchemasBubblegumV2ToolsTool
 */
export type SchemasBubblegumV2ToolsTool = {
  /**
   * The name of the tool
   */
  name: string;
  /**
   * The definition of the tool
   */
  definition?: ToolDefinition | null | undefined;
  /**
   * The service this tool belongs to
   */
  serviceId: number;
  /**
   * The ID of the tool
   */
  id: number;
  serviceName?: string | null | undefined;
};

/** @internal */
export const SchemasBubblegumV2ToolsTool$inboundSchema: z.ZodType<
  SchemasBubblegumV2ToolsTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  definition: z.nullable(ToolDefinition$inboundSchema).optional(),
  service_id: z.number().int(),
  id: z.number().int(),
  service_name: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "service_id": "serviceId",
    "service_name": "serviceName",
  });
});

/** @internal */
export type SchemasBubblegumV2ToolsTool$Outbound = {
  name: string;
  definition?: ToolDefinition$Outbound | null | undefined;
  service_id: number;
  id: number;
  service_name?: string | null | undefined;
};

/** @internal */
export const SchemasBubblegumV2ToolsTool$outboundSchema: z.ZodType<
  SchemasBubblegumV2ToolsTool$Outbound,
  z.ZodTypeDef,
  SchemasBubblegumV2ToolsTool
> = z.object({
  name: z.string(),
  definition: z.nullable(ToolDefinition$outboundSchema).optional(),
  serviceId: z.number().int(),
  id: z.number().int(),
  serviceName: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    serviceId: "service_id",
    serviceName: "service_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SchemasBubblegumV2ToolsTool$ {
  /** @deprecated use `SchemasBubblegumV2ToolsTool$inboundSchema` instead. */
  export const inboundSchema = SchemasBubblegumV2ToolsTool$inboundSchema;
  /** @deprecated use `SchemasBubblegumV2ToolsTool$outboundSchema` instead. */
  export const outboundSchema = SchemasBubblegumV2ToolsTool$outboundSchema;
  /** @deprecated use `SchemasBubblegumV2ToolsTool$Outbound` instead. */
  export type Outbound = SchemasBubblegumV2ToolsTool$Outbound;
}
