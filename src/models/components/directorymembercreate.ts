/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DirectoryExtension,
  DirectoryExtension$inboundSchema,
  DirectoryExtension$Outbound,
  DirectoryExtension$outboundSchema,
} from "./directoryextension.js";

/**
 * Request model to create a directory member.
 */
export type DirectoryMemberCreate = {
  /**
   * Name of the directory member
   */
  name: string;
  /**
   * Type of the directory member
   */
  type: string;
  /**
   * List of extensions for the directory member
   */
  extensions?: Array<DirectoryExtension> | null | undefined;
  /**
   * Tags for the directory member
   */
  contactTags?: { [k: string]: Array<string> } | null | undefined;
};

/** @internal */
export const DirectoryMemberCreate$inboundSchema: z.ZodType<
  DirectoryMemberCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  type: z.string(),
  extensions: z.nullable(z.array(DirectoryExtension$inboundSchema)).optional(),
  contact_tags: z.nullable(z.record(z.array(z.string()))).optional(),
}).transform((v) => {
  return remap$(v, {
    "contact_tags": "contactTags",
  });
});

/** @internal */
export type DirectoryMemberCreate$Outbound = {
  name: string;
  type: string;
  extensions?: Array<DirectoryExtension$Outbound> | null | undefined;
  contact_tags?: { [k: string]: Array<string> } | null | undefined;
};

/** @internal */
export const DirectoryMemberCreate$outboundSchema: z.ZodType<
  DirectoryMemberCreate$Outbound,
  z.ZodTypeDef,
  DirectoryMemberCreate
> = z.object({
  name: z.string(),
  type: z.string(),
  extensions: z.nullable(z.array(DirectoryExtension$outboundSchema)).optional(),
  contactTags: z.nullable(z.record(z.array(z.string()))).optional(),
}).transform((v) => {
  return remap$(v, {
    contactTags: "contact_tags",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DirectoryMemberCreate$ {
  /** @deprecated use `DirectoryMemberCreate$inboundSchema` instead. */
  export const inboundSchema = DirectoryMemberCreate$inboundSchema;
  /** @deprecated use `DirectoryMemberCreate$outboundSchema` instead. */
  export const outboundSchema = DirectoryMemberCreate$outboundSchema;
  /** @deprecated use `DirectoryMemberCreate$Outbound` instead. */
  export type Outbound = DirectoryMemberCreate$Outbound;
}

export function directoryMemberCreateToJSON(
  directoryMemberCreate: DirectoryMemberCreate,
): string {
  return JSON.stringify(
    DirectoryMemberCreate$outboundSchema.parse(directoryMemberCreate),
  );
}

export function directoryMemberCreateFromJSON(
  jsonString: string,
): SafeParseResult<DirectoryMemberCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DirectoryMemberCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DirectoryMemberCreate' from JSON`,
  );
}
