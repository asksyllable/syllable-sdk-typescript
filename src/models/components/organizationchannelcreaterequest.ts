/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ChannelServices,
  ChannelServices$inboundSchema,
  ChannelServices$outboundSchema,
} from "./channelservices.js";
import {
  OrganizationChannelConfig,
  OrganizationChannelConfig$inboundSchema,
  OrganizationChannelConfig$Outbound,
  OrganizationChannelConfig$outboundSchema,
} from "./organizationchannelconfig.js";

/**
 * Request model to create a channel through the organizations API
 */
export type OrganizationChannelCreateRequest = {
  /**
   * The channel name
   */
  name: string;
  /**
   * The communication service for a channel.
   */
  channelService: ChannelServices;
  /**
   * The comma-delimited list of supported modes for the channel, which defines the       possible communication methods for channel targets linked to it.
   */
  supportedModes?: string | null | undefined;
  /**
   * Whether the channel is a built-in system channel (i.e., is not customizable)
   */
  isSystemChannel?: boolean | undefined;
  /**
   * Channel config information for creates / updates through the organizations API
   */
  config: OrganizationChannelConfig;
};

/** @internal */
export const OrganizationChannelCreateRequest$inboundSchema: z.ZodType<
  OrganizationChannelCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  channel_service: ChannelServices$inboundSchema,
  supported_modes: z.nullable(z.string()).optional(),
  is_system_channel: z.boolean().default(true),
  config: OrganizationChannelConfig$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "channel_service": "channelService",
    "supported_modes": "supportedModes",
    "is_system_channel": "isSystemChannel",
  });
});

/** @internal */
export type OrganizationChannelCreateRequest$Outbound = {
  name: string;
  channel_service: string;
  supported_modes?: string | null | undefined;
  is_system_channel: boolean;
  config: OrganizationChannelConfig$Outbound;
};

/** @internal */
export const OrganizationChannelCreateRequest$outboundSchema: z.ZodType<
  OrganizationChannelCreateRequest$Outbound,
  z.ZodTypeDef,
  OrganizationChannelCreateRequest
> = z.object({
  name: z.string(),
  channelService: ChannelServices$outboundSchema,
  supportedModes: z.nullable(z.string()).optional(),
  isSystemChannel: z.boolean().default(true),
  config: OrganizationChannelConfig$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    channelService: "channel_service",
    supportedModes: "supported_modes",
    isSystemChannel: "is_system_channel",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationChannelCreateRequest$ {
  /** @deprecated use `OrganizationChannelCreateRequest$inboundSchema` instead. */
  export const inboundSchema = OrganizationChannelCreateRequest$inboundSchema;
  /** @deprecated use `OrganizationChannelCreateRequest$outboundSchema` instead. */
  export const outboundSchema = OrganizationChannelCreateRequest$outboundSchema;
  /** @deprecated use `OrganizationChannelCreateRequest$Outbound` instead. */
  export type Outbound = OrganizationChannelCreateRequest$Outbound;
}

export function organizationChannelCreateRequestToJSON(
  organizationChannelCreateRequest: OrganizationChannelCreateRequest,
): string {
  return JSON.stringify(
    OrganizationChannelCreateRequest$outboundSchema.parse(
      organizationChannelCreateRequest,
    ),
  );
}

export function organizationChannelCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<OrganizationChannelCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OrganizationChannelCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OrganizationChannelCreateRequest' from JSON`,
  );
}
