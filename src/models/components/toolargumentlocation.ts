/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The location of the argument in the request.
 *
 * @remarks
 * 'body' is used for JSON data in the POST request body.
 * 'form' is used for form data in the POST request body.
 * 'path' is used for URL path parameters.
 * 'query' is used for query parameters in the URL.
 */
export const ToolArgumentLocation = {
  Body: "body",
  Form: "form",
  Path: "path",
  Query: "query",
} as const;
/**
 * The location of the argument in the request.
 *
 * @remarks
 * 'body' is used for JSON data in the POST request body.
 * 'form' is used for form data in the POST request body.
 * 'path' is used for URL path parameters.
 * 'query' is used for query parameters in the URL.
 */
export type ToolArgumentLocation = ClosedEnum<typeof ToolArgumentLocation>;

/** @internal */
export const ToolArgumentLocation$inboundSchema: z.ZodNativeEnum<
  typeof ToolArgumentLocation
> = z.nativeEnum(ToolArgumentLocation);

/** @internal */
export const ToolArgumentLocation$outboundSchema: z.ZodNativeEnum<
  typeof ToolArgumentLocation
> = ToolArgumentLocation$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolArgumentLocation$ {
  /** @deprecated use `ToolArgumentLocation$inboundSchema` instead. */
  export const inboundSchema = ToolArgumentLocation$inboundSchema;
  /** @deprecated use `ToolArgumentLocation$outboundSchema` instead. */
  export const outboundSchema = ToolArgumentLocation$outboundSchema;
}
