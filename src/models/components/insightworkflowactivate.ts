/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  InsightWorkflowEstimate,
  InsightWorkflowEstimate$inboundSchema,
  InsightWorkflowEstimate$Outbound,
  InsightWorkflowEstimate$outboundSchema,
} from "./insightworkflowestimate.js";

/**
 * Request model to activate an insight workflow.
 */
export type InsightWorkflowActivate = {
  /**
   * Flag to indicate if the user has acknowledged the estimate
   */
  isAcknowledged: boolean;
  /**
   * Response model for an insight workflow.
   */
  estimate: InsightWorkflowEstimate;
};

/** @internal */
export const InsightWorkflowActivate$inboundSchema: z.ZodType<
  InsightWorkflowActivate,
  z.ZodTypeDef,
  unknown
> = z.object({
  is_acknowledged: z.boolean(),
  estimate: InsightWorkflowEstimate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "is_acknowledged": "isAcknowledged",
  });
});

/** @internal */
export type InsightWorkflowActivate$Outbound = {
  is_acknowledged: boolean;
  estimate: InsightWorkflowEstimate$Outbound;
};

/** @internal */
export const InsightWorkflowActivate$outboundSchema: z.ZodType<
  InsightWorkflowActivate$Outbound,
  z.ZodTypeDef,
  InsightWorkflowActivate
> = z.object({
  isAcknowledged: z.boolean(),
  estimate: InsightWorkflowEstimate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    isAcknowledged: "is_acknowledged",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InsightWorkflowActivate$ {
  /** @deprecated use `InsightWorkflowActivate$inboundSchema` instead. */
  export const inboundSchema = InsightWorkflowActivate$inboundSchema;
  /** @deprecated use `InsightWorkflowActivate$outboundSchema` instead. */
  export const outboundSchema = InsightWorkflowActivate$outboundSchema;
  /** @deprecated use `InsightWorkflowActivate$Outbound` instead. */
  export type Outbound = InsightWorkflowActivate$Outbound;
}

export function insightWorkflowActivateToJSON(
  insightWorkflowActivate: InsightWorkflowActivate,
): string {
  return JSON.stringify(
    InsightWorkflowActivate$outboundSchema.parse(insightWorkflowActivate),
  );
}

export function insightWorkflowActivateFromJSON(
  jsonString: string,
): SafeParseResult<InsightWorkflowActivate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InsightWorkflowActivate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InsightWorkflowActivate' from JSON`,
  );
}
