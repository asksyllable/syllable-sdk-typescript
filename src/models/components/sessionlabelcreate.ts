/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type SessionLabelCreate = {
  sessionId: number;
  type: string;
  code: string;
  userEmail: string;
  comments?: string | null | undefined;
  issueCategories?: Array<string> | null | undefined;
};

/** @internal */
export const SessionLabelCreate$inboundSchema: z.ZodType<
  SessionLabelCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  session_id: z.number().int(),
  type: z.string(),
  code: z.string(),
  user_email: z.string(),
  comments: z.nullable(z.string()).optional(),
  issue_categories: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    "session_id": "sessionId",
    "user_email": "userEmail",
    "issue_categories": "issueCategories",
  });
});

/** @internal */
export type SessionLabelCreate$Outbound = {
  session_id: number;
  type: string;
  code: string;
  user_email: string;
  comments?: string | null | undefined;
  issue_categories?: Array<string> | null | undefined;
};

/** @internal */
export const SessionLabelCreate$outboundSchema: z.ZodType<
  SessionLabelCreate$Outbound,
  z.ZodTypeDef,
  SessionLabelCreate
> = z.object({
  sessionId: z.number().int(),
  type: z.string(),
  code: z.string(),
  userEmail: z.string(),
  comments: z.nullable(z.string()).optional(),
  issueCategories: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    sessionId: "session_id",
    userEmail: "user_email",
    issueCategories: "issue_categories",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SessionLabelCreate$ {
  /** @deprecated use `SessionLabelCreate$inboundSchema` instead. */
  export const inboundSchema = SessionLabelCreate$inboundSchema;
  /** @deprecated use `SessionLabelCreate$outboundSchema` instead. */
  export const outboundSchema = SessionLabelCreate$outboundSchema;
  /** @deprecated use `SessionLabelCreate$Outbound` instead. */
  export type Outbound = SessionLabelCreate$Outbound;
}
