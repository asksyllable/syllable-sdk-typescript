/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ToolParameterTransform,
  ToolParameterTransform$inboundSchema,
  ToolParameterTransform$Outbound,
  ToolParameterTransform$outboundSchema,
} from "./toolparametertransform.js";

/**
 * The default value for a parameter of the tool call.
 */
export type ToolParameterDefault = {
  /**
   * The transform to apply to the value before using it as the default.
   */
  transform: ToolParameterTransform;
};

/** @internal */
export const ToolParameterDefault$inboundSchema: z.ZodType<
  ToolParameterDefault,
  z.ZodTypeDef,
  unknown
> = z.object({
  transform: ToolParameterTransform$inboundSchema,
});

/** @internal */
export type ToolParameterDefault$Outbound = {
  transform: ToolParameterTransform$Outbound;
};

/** @internal */
export const ToolParameterDefault$outboundSchema: z.ZodType<
  ToolParameterDefault$Outbound,
  z.ZodTypeDef,
  ToolParameterDefault
> = z.object({
  transform: ToolParameterTransform$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolParameterDefault$ {
  /** @deprecated use `ToolParameterDefault$inboundSchema` instead. */
  export const inboundSchema = ToolParameterDefault$inboundSchema;
  /** @deprecated use `ToolParameterDefault$outboundSchema` instead. */
  export const outboundSchema = ToolParameterDefault$outboundSchema;
  /** @deprecated use `ToolParameterDefault$Outbound` instead. */
  export type Outbound = ToolParameterDefault$Outbound;
}
