/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  SchemasBubblegumV2ToolsTool,
  SchemasBubblegumV2ToolsTool$inboundSchema,
  SchemasBubblegumV2ToolsTool$Outbound,
  SchemasBubblegumV2ToolsTool$outboundSchema,
} from "./schemasbubblegumv2toolstool.js";

export type ToolListResponse = {
  tools: Array<SchemasBubblegumV2ToolsTool>;
  page: number;
  pageSize: number;
  totalPages: number;
  totalCount: number;
};

/** @internal */
export const ToolListResponse$inboundSchema: z.ZodType<
  ToolListResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  tools: z.array(SchemasBubblegumV2ToolsTool$inboundSchema),
  page: z.number().int(),
  page_size: z.number().int(),
  total_pages: z.number().int(),
  total_count: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "page_size": "pageSize",
    "total_pages": "totalPages",
    "total_count": "totalCount",
  });
});

/** @internal */
export type ToolListResponse$Outbound = {
  tools: Array<SchemasBubblegumV2ToolsTool$Outbound>;
  page: number;
  page_size: number;
  total_pages: number;
  total_count: number;
};

/** @internal */
export const ToolListResponse$outboundSchema: z.ZodType<
  ToolListResponse$Outbound,
  z.ZodTypeDef,
  ToolListResponse
> = z.object({
  tools: z.array(SchemasBubblegumV2ToolsTool$outboundSchema),
  page: z.number().int(),
  pageSize: z.number().int(),
  totalPages: z.number().int(),
  totalCount: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    pageSize: "page_size",
    totalPages: "total_pages",
    totalCount: "total_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolListResponse$ {
  /** @deprecated use `ToolListResponse$inboundSchema` instead. */
  export const inboundSchema = ToolListResponse$inboundSchema;
  /** @deprecated use `ToolListResponse$outboundSchema` instead. */
  export const outboundSchema = ToolListResponse$outboundSchema;
  /** @deprecated use `ToolListResponse$Outbound` instead. */
  export type Outbound = ToolListResponse$Outbound;
}
