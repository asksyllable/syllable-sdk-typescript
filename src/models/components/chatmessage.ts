/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ChatMessage = {
  /**
   * Name of the service producing the message
   */
  serviceName: string;
  /**
   * Name of the source of the message, should identify the user, like an email or username
   */
  sourceName: string;
  chatId: string;
  agentId: string;
  orgName: string;
  text: string;
};

/** @internal */
export const ChatMessage$inboundSchema: z.ZodType<
  ChatMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  service_name: z.string(),
  source_name: z.string(),
  chat_id: z.string(),
  agent_id: z.string(),
  org_name: z.string(),
  text: z.string(),
}).transform((v) => {
  return remap$(v, {
    "service_name": "serviceName",
    "source_name": "sourceName",
    "chat_id": "chatId",
    "agent_id": "agentId",
    "org_name": "orgName",
  });
});

/** @internal */
export type ChatMessage$Outbound = {
  service_name: string;
  source_name: string;
  chat_id: string;
  agent_id: string;
  org_name: string;
  text: string;
};

/** @internal */
export const ChatMessage$outboundSchema: z.ZodType<
  ChatMessage$Outbound,
  z.ZodTypeDef,
  ChatMessage
> = z.object({
  serviceName: z.string(),
  sourceName: z.string(),
  chatId: z.string(),
  agentId: z.string(),
  orgName: z.string(),
  text: z.string(),
}).transform((v) => {
  return remap$(v, {
    serviceName: "service_name",
    sourceName: "source_name",
    chatId: "chat_id",
    agentId: "agent_id",
    orgName: "org_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatMessage$ {
  /** @deprecated use `ChatMessage$inboundSchema` instead. */
  export const inboundSchema = ChatMessage$inboundSchema;
  /** @deprecated use `ChatMessage$outboundSchema` instead. */
  export const outboundSchema = ChatMessage$outboundSchema;
  /** @deprecated use `ChatMessage$Outbound` instead. */
  export type Outbound = ChatMessage$Outbound;
}
