/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DaoChannelTargetAgent = {
  name: string;
  description?: string | null | undefined;
  label?: string | null | undefined;
  type: string;
  promptId: number;
  customMessageId?: number | null | undefined;
  timezone: string;
  id: number;
  updatedAt: Date;
  lastUpdatedBy: string | null;
};

/** @internal */
export const DaoChannelTargetAgent$inboundSchema: z.ZodType<
  DaoChannelTargetAgent,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  type: z.string(),
  prompt_id: z.number().int(),
  custom_message_id: z.nullable(z.number().int()).optional(),
  timezone: z.string(),
  id: z.number().int(),
  updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  last_updated_by: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "prompt_id": "promptId",
    "custom_message_id": "customMessageId",
    "updated_at": "updatedAt",
    "last_updated_by": "lastUpdatedBy",
  });
});

/** @internal */
export type DaoChannelTargetAgent$Outbound = {
  name: string;
  description?: string | null | undefined;
  label?: string | null | undefined;
  type: string;
  prompt_id: number;
  custom_message_id?: number | null | undefined;
  timezone: string;
  id: number;
  updated_at: string;
  last_updated_by: string | null;
};

/** @internal */
export const DaoChannelTargetAgent$outboundSchema: z.ZodType<
  DaoChannelTargetAgent$Outbound,
  z.ZodTypeDef,
  DaoChannelTargetAgent
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  type: z.string(),
  promptId: z.number().int(),
  customMessageId: z.nullable(z.number().int()).optional(),
  timezone: z.string(),
  id: z.number().int(),
  updatedAt: z.date().transform(v => v.toISOString()),
  lastUpdatedBy: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    promptId: "prompt_id",
    customMessageId: "custom_message_id",
    updatedAt: "updated_at",
    lastUpdatedBy: "last_updated_by",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DaoChannelTargetAgent$ {
  /** @deprecated use `DaoChannelTargetAgent$inboundSchema` instead. */
  export const inboundSchema = DaoChannelTargetAgent$inboundSchema;
  /** @deprecated use `DaoChannelTargetAgent$outboundSchema` instead. */
  export const outboundSchema = DaoChannelTargetAgent$outboundSchema;
  /** @deprecated use `DaoChannelTargetAgent$Outbound` instead. */
  export type Outbound = DaoChannelTargetAgent$Outbound;
}

export function daoChannelTargetAgentToJSON(
  daoChannelTargetAgent: DaoChannelTargetAgent,
): string {
  return JSON.stringify(
    DaoChannelTargetAgent$outboundSchema.parse(daoChannelTargetAgent),
  );
}

export function daoChannelTargetAgentFromJSON(
  jsonString: string,
): SafeParseResult<DaoChannelTargetAgent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DaoChannelTargetAgent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DaoChannelTargetAgent' from JSON`,
  );
}
