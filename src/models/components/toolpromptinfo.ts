/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Information about a prompt linked to a tool.
 */
export type ToolPromptInfo = {
  /**
   * The ID of the prompt
   */
  id: number;
  /**
   * The name of the prompt
   */
  name: string;
};

/** @internal */
export const ToolPromptInfo$inboundSchema: z.ZodType<
  ToolPromptInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
  name: z.string(),
});

/** @internal */
export type ToolPromptInfo$Outbound = {
  id: number;
  name: string;
};

/** @internal */
export const ToolPromptInfo$outboundSchema: z.ZodType<
  ToolPromptInfo$Outbound,
  z.ZodTypeDef,
  ToolPromptInfo
> = z.object({
  id: z.number().int(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolPromptInfo$ {
  /** @deprecated use `ToolPromptInfo$inboundSchema` instead. */
  export const inboundSchema = ToolPromptInfo$inboundSchema;
  /** @deprecated use `ToolPromptInfo$outboundSchema` instead. */
  export const outboundSchema = ToolPromptInfo$outboundSchema;
  /** @deprecated use `ToolPromptInfo$Outbound` instead. */
  export type Outbound = ToolPromptInfo$Outbound;
}

export function toolPromptInfoToJSON(toolPromptInfo: ToolPromptInfo): string {
  return JSON.stringify(ToolPromptInfo$outboundSchema.parse(toolPromptInfo));
}

export function toolPromptInfoFromJSON(
  jsonString: string,
): SafeParseResult<ToolPromptInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolPromptInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolPromptInfo' from JSON`,
  );
}
