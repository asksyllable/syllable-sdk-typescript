/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type AgentCreateTypeExtra = {};

export type AgentCreateVariables = {};

export type AgentCreate = {
  name: string;
  timezone: string;
  typeExtra: AgentCreateTypeExtra;
  variables?: AgentCreateVariables | null | undefined;
};

/** @internal */
export const AgentCreateTypeExtra$inboundSchema: z.ZodType<
  AgentCreateTypeExtra,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AgentCreateTypeExtra$Outbound = {};

/** @internal */
export const AgentCreateTypeExtra$outboundSchema: z.ZodType<
  AgentCreateTypeExtra$Outbound,
  z.ZodTypeDef,
  AgentCreateTypeExtra
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AgentCreateTypeExtra$ {
  /** @deprecated use `AgentCreateTypeExtra$inboundSchema` instead. */
  export const inboundSchema = AgentCreateTypeExtra$inboundSchema;
  /** @deprecated use `AgentCreateTypeExtra$outboundSchema` instead. */
  export const outboundSchema = AgentCreateTypeExtra$outboundSchema;
  /** @deprecated use `AgentCreateTypeExtra$Outbound` instead. */
  export type Outbound = AgentCreateTypeExtra$Outbound;
}

/** @internal */
export const AgentCreateVariables$inboundSchema: z.ZodType<
  AgentCreateVariables,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type AgentCreateVariables$Outbound = {};

/** @internal */
export const AgentCreateVariables$outboundSchema: z.ZodType<
  AgentCreateVariables$Outbound,
  z.ZodTypeDef,
  AgentCreateVariables
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AgentCreateVariables$ {
  /** @deprecated use `AgentCreateVariables$inboundSchema` instead. */
  export const inboundSchema = AgentCreateVariables$inboundSchema;
  /** @deprecated use `AgentCreateVariables$outboundSchema` instead. */
  export const outboundSchema = AgentCreateVariables$outboundSchema;
  /** @deprecated use `AgentCreateVariables$Outbound` instead. */
  export type Outbound = AgentCreateVariables$Outbound;
}

/** @internal */
export const AgentCreate$inboundSchema: z.ZodType<
  AgentCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  timezone: z.string(),
  type_extra: z.lazy(() => AgentCreateTypeExtra$inboundSchema),
  variables: z.nullable(z.lazy(() => AgentCreateVariables$inboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "type_extra": "typeExtra",
  });
});

/** @internal */
export type AgentCreate$Outbound = {
  name: string;
  timezone: string;
  type_extra: AgentCreateTypeExtra$Outbound;
  variables?: AgentCreateVariables$Outbound | null | undefined;
};

/** @internal */
export const AgentCreate$outboundSchema: z.ZodType<
  AgentCreate$Outbound,
  z.ZodTypeDef,
  AgentCreate
> = z.object({
  name: z.string(),
  timezone: z.string(),
  typeExtra: z.lazy(() => AgentCreateTypeExtra$outboundSchema),
  variables: z.nullable(z.lazy(() => AgentCreateVariables$outboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    typeExtra: "type_extra",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AgentCreate$ {
  /** @deprecated use `AgentCreate$inboundSchema` instead. */
  export const inboundSchema = AgentCreate$inboundSchema;
  /** @deprecated use `AgentCreate$outboundSchema` instead. */
  export const outboundSchema = AgentCreate$outboundSchema;
  /** @deprecated use `AgentCreate$Outbound` instead. */
  export type Outbound = AgentCreate$Outbound;
}
