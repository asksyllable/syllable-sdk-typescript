/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Record of a tool linked to a previous prompt version in the prompt history.
 */
export type PromptHistoryLinkedTool = {
  /**
   * ID of the tool
   */
  toolId: number;
  /**
   * Current name of the tool (may have been different at the time the given version of the prompt was created)
   */
  currentToolName: string;
  /**
   * Whether the tool has changed (not including being deleted) since the given version of the prompt was created
   */
  outOfDate: boolean;
  /**
   * Whether the tool has been deleted since the given version of the prompt was created
   */
  deleted: boolean;
};

/** @internal */
export const PromptHistoryLinkedTool$inboundSchema: z.ZodType<
  PromptHistoryLinkedTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  tool_id: z.number().int(),
  current_tool_name: z.string(),
  out_of_date: z.boolean(),
  deleted: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "tool_id": "toolId",
    "current_tool_name": "currentToolName",
    "out_of_date": "outOfDate",
  });
});

/** @internal */
export type PromptHistoryLinkedTool$Outbound = {
  tool_id: number;
  current_tool_name: string;
  out_of_date: boolean;
  deleted: boolean;
};

/** @internal */
export const PromptHistoryLinkedTool$outboundSchema: z.ZodType<
  PromptHistoryLinkedTool$Outbound,
  z.ZodTypeDef,
  PromptHistoryLinkedTool
> = z.object({
  toolId: z.number().int(),
  currentToolName: z.string(),
  outOfDate: z.boolean(),
  deleted: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    toolId: "tool_id",
    currentToolName: "current_tool_name",
    outOfDate: "out_of_date",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PromptHistoryLinkedTool$ {
  /** @deprecated use `PromptHistoryLinkedTool$inboundSchema` instead. */
  export const inboundSchema = PromptHistoryLinkedTool$inboundSchema;
  /** @deprecated use `PromptHistoryLinkedTool$outboundSchema` instead. */
  export const outboundSchema = PromptHistoryLinkedTool$outboundSchema;
  /** @deprecated use `PromptHistoryLinkedTool$Outbound` instead. */
  export type Outbound = PromptHistoryLinkedTool$Outbound;
}

export function promptHistoryLinkedToolToJSON(
  promptHistoryLinkedTool: PromptHistoryLinkedTool,
): string {
  return JSON.stringify(
    PromptHistoryLinkedTool$outboundSchema.parse(promptHistoryLinkedTool),
  );
}

export function promptHistoryLinkedToolFromJSON(
  jsonString: string,
): SafeParseResult<PromptHistoryLinkedTool, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PromptHistoryLinkedTool$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PromptHistoryLinkedTool' from JSON`,
  );
}
