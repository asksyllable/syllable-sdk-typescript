/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Information about an agent linked to a language group.
 */
export type LanguageGroupAgentInfo = {
  /**
   * The ID of the agent
   */
  id: number;
  /**
   * The name of the agent
   */
  name: string;
};

/** @internal */
export const LanguageGroupAgentInfo$inboundSchema: z.ZodType<
  LanguageGroupAgentInfo,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.number().int(),
  name: z.string(),
});

/** @internal */
export type LanguageGroupAgentInfo$Outbound = {
  id: number;
  name: string;
};

/** @internal */
export const LanguageGroupAgentInfo$outboundSchema: z.ZodType<
  LanguageGroupAgentInfo$Outbound,
  z.ZodTypeDef,
  LanguageGroupAgentInfo
> = z.object({
  id: z.number().int(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LanguageGroupAgentInfo$ {
  /** @deprecated use `LanguageGroupAgentInfo$inboundSchema` instead. */
  export const inboundSchema = LanguageGroupAgentInfo$inboundSchema;
  /** @deprecated use `LanguageGroupAgentInfo$outboundSchema` instead. */
  export const outboundSchema = LanguageGroupAgentInfo$outboundSchema;
  /** @deprecated use `LanguageGroupAgentInfo$Outbound` instead. */
  export type Outbound = LanguageGroupAgentInfo$Outbound;
}

export function languageGroupAgentInfoToJSON(
  languageGroupAgentInfo: LanguageGroupAgentInfo,
): string {
  return JSON.stringify(
    LanguageGroupAgentInfo$outboundSchema.parse(languageGroupAgentInfo),
  );
}

export function languageGroupAgentInfoFromJSON(
  jsonString: string,
): SafeParseResult<LanguageGroupAgentInfo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LanguageGroupAgentInfo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LanguageGroupAgentInfo' from JSON`,
  );
}
