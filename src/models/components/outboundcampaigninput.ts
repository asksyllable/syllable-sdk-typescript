/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DaysOfWeek,
  DaysOfWeek$inboundSchema,
  DaysOfWeek$outboundSchema,
} from "./daysofweek.js";

/**
 * Variables for campaign
 */
export type OutboundCampaignInputCampaignVariables = {};

export type OutboundCampaignInput = {
  /**
   * Human readable name of campaign
   */
  campaignName: string;
  /**
   * Description of campaign
   */
  description?: string | null | undefined;
  /**
   * Label for campaign
   */
  label?: string | null | undefined;
  /**
   * Variables for campaign
   */
  campaignVariables: OutboundCampaignInputCampaignVariables;
  /**
   * Start time of campaign each day
   */
  dailyStartTime?: string | null | undefined;
  /**
   * End time of campaign each day
   */
  dailyEndTime?: string | null | undefined;
  /**
   * Source phone number, email, or SMS number
   */
  source?: string | null | undefined;
  /**
   * Caller ID for call
   */
  callerId: string | null;
  /**
   * Target number of outreach calls per hour
   */
  hourlyRate?: number | undefined;
  /**
   * Number of retries per target
   */
  retryCount?: number | undefined;
  /**
   * How long to wait before retrying
   */
  retryInterval?: string | null | undefined;
  /**
   * Days of the week when campaign is active
   */
  activeDays: Array<DaysOfWeek>;
};

/** @internal */
export const OutboundCampaignInputCampaignVariables$inboundSchema: z.ZodType<
  OutboundCampaignInputCampaignVariables,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type OutboundCampaignInputCampaignVariables$Outbound = {};

/** @internal */
export const OutboundCampaignInputCampaignVariables$outboundSchema: z.ZodType<
  OutboundCampaignInputCampaignVariables$Outbound,
  z.ZodTypeDef,
  OutboundCampaignInputCampaignVariables
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundCampaignInputCampaignVariables$ {
  /** @deprecated use `OutboundCampaignInputCampaignVariables$inboundSchema` instead. */
  export const inboundSchema =
    OutboundCampaignInputCampaignVariables$inboundSchema;
  /** @deprecated use `OutboundCampaignInputCampaignVariables$outboundSchema` instead. */
  export const outboundSchema =
    OutboundCampaignInputCampaignVariables$outboundSchema;
  /** @deprecated use `OutboundCampaignInputCampaignVariables$Outbound` instead. */
  export type Outbound = OutboundCampaignInputCampaignVariables$Outbound;
}

export function outboundCampaignInputCampaignVariablesToJSON(
  outboundCampaignInputCampaignVariables:
    OutboundCampaignInputCampaignVariables,
): string {
  return JSON.stringify(
    OutboundCampaignInputCampaignVariables$outboundSchema.parse(
      outboundCampaignInputCampaignVariables,
    ),
  );
}

export function outboundCampaignInputCampaignVariablesFromJSON(
  jsonString: string,
): SafeParseResult<OutboundCampaignInputCampaignVariables, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      OutboundCampaignInputCampaignVariables$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundCampaignInputCampaignVariables' from JSON`,
  );
}

/** @internal */
export const OutboundCampaignInput$inboundSchema: z.ZodType<
  OutboundCampaignInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  campaign_name: z.string(),
  description: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  campaign_variables: z.lazy(() =>
    OutboundCampaignInputCampaignVariables$inboundSchema
  ),
  daily_start_time: z.nullable(z.string()).optional(),
  daily_end_time: z.nullable(z.string()).optional(),
  source: z.nullable(z.string()).optional(),
  caller_id: z.nullable(z.string()),
  hourly_rate: z.number().int().default(1),
  retry_count: z.number().int().default(0),
  retry_interval: z.nullable(z.string()).optional(),
  active_days: z.array(DaysOfWeek$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "campaign_name": "campaignName",
    "campaign_variables": "campaignVariables",
    "daily_start_time": "dailyStartTime",
    "daily_end_time": "dailyEndTime",
    "caller_id": "callerId",
    "hourly_rate": "hourlyRate",
    "retry_count": "retryCount",
    "retry_interval": "retryInterval",
    "active_days": "activeDays",
  });
});

/** @internal */
export type OutboundCampaignInput$Outbound = {
  campaign_name: string;
  description?: string | null | undefined;
  label?: string | null | undefined;
  campaign_variables: OutboundCampaignInputCampaignVariables$Outbound;
  daily_start_time?: string | null | undefined;
  daily_end_time?: string | null | undefined;
  source?: string | null | undefined;
  caller_id: string | null;
  hourly_rate: number;
  retry_count: number;
  retry_interval?: string | null | undefined;
  active_days: Array<string>;
};

/** @internal */
export const OutboundCampaignInput$outboundSchema: z.ZodType<
  OutboundCampaignInput$Outbound,
  z.ZodTypeDef,
  OutboundCampaignInput
> = z.object({
  campaignName: z.string(),
  description: z.nullable(z.string()).optional(),
  label: z.nullable(z.string()).optional(),
  campaignVariables: z.lazy(() =>
    OutboundCampaignInputCampaignVariables$outboundSchema
  ),
  dailyStartTime: z.nullable(z.string()).optional(),
  dailyEndTime: z.nullable(z.string()).optional(),
  source: z.nullable(z.string()).optional(),
  callerId: z.nullable(z.string()),
  hourlyRate: z.number().int().default(1),
  retryCount: z.number().int().default(0),
  retryInterval: z.nullable(z.string()).optional(),
  activeDays: z.array(DaysOfWeek$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    campaignName: "campaign_name",
    campaignVariables: "campaign_variables",
    dailyStartTime: "daily_start_time",
    dailyEndTime: "daily_end_time",
    callerId: "caller_id",
    hourlyRate: "hourly_rate",
    retryCount: "retry_count",
    retryInterval: "retry_interval",
    activeDays: "active_days",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutboundCampaignInput$ {
  /** @deprecated use `OutboundCampaignInput$inboundSchema` instead. */
  export const inboundSchema = OutboundCampaignInput$inboundSchema;
  /** @deprecated use `OutboundCampaignInput$outboundSchema` instead. */
  export const outboundSchema = OutboundCampaignInput$outboundSchema;
  /** @deprecated use `OutboundCampaignInput$Outbound` instead. */
  export type Outbound = OutboundCampaignInput$Outbound;
}

export function outboundCampaignInputToJSON(
  outboundCampaignInput: OutboundCampaignInput,
): string {
  return JSON.stringify(
    OutboundCampaignInput$outboundSchema.parse(outboundCampaignInput),
  );
}

export function outboundCampaignInputFromJSON(
  jsonString: string,
): SafeParseResult<OutboundCampaignInput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OutboundCampaignInput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OutboundCampaignInput' from JSON`,
  );
}
