/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { ClosedEnum } from "../../types/enums.js";

export const ConversationProperties = {
  Timestamp: "timestamp",
  AgentType: "agent_type",
  AgentId: "agent_id",
  AgentName: "agent_name",
  PromptId: "prompt_id",
  PromptName: "prompt_name",
  LlmProvider: "llm_provider",
  LlmModel: "llm_model",
  LlmVersion: "llm_version",
  IsLegacy: "is_legacy",
} as const;
export type ConversationProperties = ClosedEnum<typeof ConversationProperties>;

/** @internal */
export const ConversationProperties$inboundSchema: z.ZodNativeEnum<
  typeof ConversationProperties
> = z.nativeEnum(ConversationProperties);

/** @internal */
export const ConversationProperties$outboundSchema: z.ZodNativeEnum<
  typeof ConversationProperties
> = ConversationProperties$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ConversationProperties$ {
  /** @deprecated use `ConversationProperties$inboundSchema` instead. */
  export const inboundSchema = ConversationProperties$inboundSchema;
  /** @deprecated use `ConversationProperties$outboundSchema` instead. */
  export const outboundSchema = ConversationProperties$outboundSchema;
}
