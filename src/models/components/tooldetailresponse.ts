/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ToolDetailResponse = {
  name: string;
  description: string;
  fields: Array<string>;
};

/** @internal */
export const ToolDetailResponse$inboundSchema: z.ZodType<
  ToolDetailResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.string(),
  fields: z.array(z.string()),
});

/** @internal */
export type ToolDetailResponse$Outbound = {
  name: string;
  description: string;
  fields: Array<string>;
};

/** @internal */
export const ToolDetailResponse$outboundSchema: z.ZodType<
  ToolDetailResponse$Outbound,
  z.ZodTypeDef,
  ToolDetailResponse
> = z.object({
  name: z.string(),
  description: z.string(),
  fields: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolDetailResponse$ {
  /** @deprecated use `ToolDetailResponse$inboundSchema` instead. */
  export const inboundSchema = ToolDetailResponse$inboundSchema;
  /** @deprecated use `ToolDetailResponse$outboundSchema` instead. */
  export const outboundSchema = ToolDetailResponse$outboundSchema;
  /** @deprecated use `ToolDetailResponse$Outbound` instead. */
  export type Outbound = ToolDetailResponse$Outbound;
}
